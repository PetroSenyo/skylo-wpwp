var Ag=Object.defineProperty;var Cg=(r,e,t)=>e in r?Ag(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var tn=(r,e,t)=>(Cg(r,typeof e!="symbol"?e+"":e,t),t);class Pg{constructor(){}on(e,t,n){const i=this.e||(this.e={});return(i[e]||(i[e]=[])).push({fn:t,ctx:n}),this}once(e,t,n){const i=this;function s(){i.off(e,s),t.apply(n,arguments)}return s._=t,this.on(e,s,n)}emit(e){const t=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice();let i=0;const s=n.length;for(i;i<s;i++)n[i].fn.apply(n[i].ctx,t);return this}off(e,t){const n=this.e||(this.e={}),i=n[e],s=[];if(i&&t)for(let o=0,a=i.length;o<a;o++)i[o].fn!==t&&i[o].fn._!==t&&s.push(i[o]);return s.length?n[e]=s:delete n[e],this}}const Rg=new Pg;function Lg(r=0){return new Promise(function(e){setTimeout(e,r)})}var n1=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function i1(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}function Qa(r){if(r.__esModule)return r;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(r).forEach(function(t){var n=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:function(){return r[t]}})}),e}var Tu={},Mt={},Dg=Array.isArray,el=Dg,Ig=typeof global=="object"&&global&&global.Object===Object&&global,Og=Ig,Fg=typeof self=="object"&&self&&self.Object===Object&&self,Ng=Og||Fg||Function("return this")(),tl=Ng,Bg=tl.Symbol,or=Bg,Eu=Object.prototype,zg=Eu.hasOwnProperty,kg=Eu.toString,Dr=or?or.toStringTag:void 0;function Ug(r){var e=zg.call(r,Dr),t=r[Dr];try{r[Dr]=void 0;var n=!0}catch{}var i=kg.call(r);return n&&(e?r[Dr]=t:delete r[Dr]),i}var Vg=Object.prototype,Hg=Vg.toString;function Gg(r){return Hg.call(r)}var Wg="[object Null]",jg="[object Undefined]",Bc=or?or.toStringTag:void 0;function nl(r){return r==null?r===void 0?jg:Wg:Bc&&Bc in Object(r)?Ug(r):Gg(r)}function Au(r){return r!=null&&typeof r=="object"}var qg="[object Symbol]";function il(r){return typeof r=="symbol"||Au(r)&&nl(r)==qg}var Xg=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Yg=/^\w*$/;function Jg(r,e){if(el(r))return!1;var t=typeof r;return t=="number"||t=="symbol"||t=="boolean"||r==null||il(r)?!0:Yg.test(r)||!Xg.test(r)||e!=null&&r in Object(e)}function Cu(r){var e=typeof r;return r!=null&&(e=="object"||e=="function")}var $g="[object AsyncFunction]",Zg="[object Function]",Kg="[object GeneratorFunction]",Qg="[object Proxy]";function e0(r){if(!Cu(r))return!1;var e=nl(r);return e==Zg||e==Kg||e==$g||e==Qg}var t0=tl["__core-js_shared__"],Qo=t0,zc=function(){var r=/[^.]+$/.exec(Qo&&Qo.keys&&Qo.keys.IE_PROTO||"");return r?"Symbol(src)_1."+r:""}();function n0(r){return!!zc&&zc in r}var i0=Function.prototype,r0=i0.toString;function s0(r){if(r!=null){try{return r0.call(r)}catch{}try{return r+""}catch{}}return""}var o0=/[\\^$.*+?()[\]{}|]/g,a0=/^\[object .+?Constructor\]$/,l0=Function.prototype,c0=Object.prototype,h0=l0.toString,u0=c0.hasOwnProperty,d0=RegExp("^"+h0.call(u0).replace(o0,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function f0(r){if(!Cu(r)||n0(r))return!1;var e=e0(r)?d0:a0;return e.test(s0(r))}function p0(r,e){return r==null?void 0:r[e]}function Pu(r,e){var t=p0(r,e);return f0(t)?t:void 0}var m0=Pu(Object,"create"),Xr=m0;function g0(){this.__data__=Xr?Xr(null):{},this.size=0}function _0(r){var e=this.has(r)&&delete this.__data__[r];return this.size-=e?1:0,e}var v0="__lodash_hash_undefined__",y0=Object.prototype,x0=y0.hasOwnProperty;function b0(r){var e=this.__data__;if(Xr){var t=e[r];return t===v0?void 0:t}return x0.call(e,r)?e[r]:void 0}var w0=Object.prototype,M0=w0.hasOwnProperty;function S0(r){var e=this.__data__;return Xr?e[r]!==void 0:M0.call(e,r)}var T0="__lodash_hash_undefined__";function E0(r,e){var t=this.__data__;return this.size+=this.has(r)?0:1,t[r]=Xr&&e===void 0?T0:e,this}function bi(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}bi.prototype.clear=g0;bi.prototype.delete=_0;bi.prototype.get=b0;bi.prototype.has=S0;bi.prototype.set=E0;function A0(){this.__data__=[],this.size=0}function C0(r,e){return r===e||r!==r&&e!==e}function ao(r,e){for(var t=r.length;t--;)if(C0(r[t][0],e))return t;return-1}var P0=Array.prototype,R0=P0.splice;function L0(r){var e=this.__data__,t=ao(e,r);if(t<0)return!1;var n=e.length-1;return t==n?e.pop():R0.call(e,t,1),--this.size,!0}function D0(r){var e=this.__data__,t=ao(e,r);return t<0?void 0:e[t][1]}function I0(r){return ao(this.__data__,r)>-1}function O0(r,e){var t=this.__data__,n=ao(t,r);return n<0?(++this.size,t.push([r,e])):t[n][1]=e,this}function fr(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}fr.prototype.clear=A0;fr.prototype.delete=L0;fr.prototype.get=D0;fr.prototype.has=I0;fr.prototype.set=O0;var F0=Pu(tl,"Map"),N0=F0;function B0(){this.size=0,this.__data__={hash:new bi,map:new(N0||fr),string:new bi}}function z0(r){var e=typeof r;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?r!=="__proto__":r===null}function lo(r,e){var t=r.__data__;return z0(e)?t[typeof e=="string"?"string":"hash"]:t.map}function k0(r){var e=lo(this,r).delete(r);return this.size-=e?1:0,e}function U0(r){return lo(this,r).get(r)}function V0(r){return lo(this,r).has(r)}function H0(r,e){var t=lo(this,r),n=t.size;return t.set(r,e),this.size+=t.size==n?0:1,this}function Mi(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Mi.prototype.clear=B0;Mi.prototype.delete=k0;Mi.prototype.get=U0;Mi.prototype.has=V0;Mi.prototype.set=H0;var G0="Expected a function";function rl(r,e){if(typeof r!="function"||e!=null&&typeof e!="function")throw new TypeError(G0);var t=function(){var n=arguments,i=e?e.apply(this,n):n[0],s=t.cache;if(s.has(i))return s.get(i);var o=r.apply(this,n);return t.cache=s.set(i,o)||s,o};return t.cache=new(rl.Cache||Mi),t}rl.Cache=Mi;var W0=500;function j0(r){var e=rl(r,function(n){return t.size===W0&&t.clear(),n}),t=e.cache;return e}var q0=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,X0=/\\(\\)?/g,Y0=j0(function(r){var e=[];return r.charCodeAt(0)===46&&e.push(""),r.replace(q0,function(t,n,i,s){e.push(i?s.replace(X0,"$1"):n||t)}),e}),J0=Y0;function $0(r,e){for(var t=-1,n=r==null?0:r.length,i=Array(n);++t<n;)i[t]=e(r[t],t,r);return i}var Z0=1/0,kc=or?or.prototype:void 0,Uc=kc?kc.toString:void 0;function Ru(r){if(typeof r=="string")return r;if(el(r))return $0(r,Ru)+"";if(il(r))return Uc?Uc.call(r):"";var e=r+"";return e=="0"&&1/r==-Z0?"-0":e}function K0(r){return r==null?"":Ru(r)}function Q0(r,e){return el(r)?r:Jg(r,e)?[r]:J0(K0(r))}var e_=1/0;function t_(r){if(typeof r=="string"||il(r))return r;var e=r+"";return e=="0"&&1/r==-e_?"-0":e}function n_(r,e){e=Q0(e,r);for(var t=0,n=e.length;r!=null&&t<n;)r=r[t_(e[t++])];return t&&t==n?r:void 0}function i_(r,e,t){var n=r==null?void 0:n_(r,e);return n===void 0?t:n}var r_=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:i_}),s_=Qa(r_);function o_(r,e){return function(t){return r(e(t))}}var a_=o_(Object.getPrototypeOf,Object),l_=a_,c_="[object Object]",h_=Function.prototype,u_=Object.prototype,Lu=h_.toString,d_=u_.hasOwnProperty,f_=Lu.call(Object);function p_(r){if(!Au(r)||nl(r)!=c_)return!1;var e=l_(r);if(e===null)return!0;var t=d_.call(e,"constructor")&&e.constructor;return typeof t=="function"&&t instanceof t&&Lu.call(t)==f_}var m_=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:p_}),g_=Qa(m_);function __(r){var e=r==null?0:r.length;return e?r[e-1]:void 0}var v_=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:__}),y_=Qa(v_);(function(r){var e=Object.create,t=Object.defineProperty,n=Object.defineProperties,i=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols,c=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,f=(x,R,B)=>R in x?t(x,R,{enumerable:!0,configurable:!0,writable:!0,value:B}):x[R]=B,p=(x,R)=>{for(var B in R||(R={}))h.call(R,B)&&f(x,B,R[B]);if(a)for(var B of a(R))u.call(R,B)&&f(x,B,R[B]);return x},g=(x,R)=>n(x,s(R)),v=x=>t(x,"__esModule",{value:!0}),_=(x,R)=>{v(x);for(var B in R)t(x,B,{get:R[B],enumerable:!0})},m=(x,R,B)=>{if(R&&typeof R=="object"||typeof R=="function")for(let q of o(R))!h.call(x,q)&&q!=="default"&&t(x,q,{get:()=>R[q],enumerable:!(B=i(R,q))||B.enumerable});return x},b=x=>m(v(t(x!=null?e(c(x)):{},"default",x&&x.__esModule&&"default"in x?{get:()=>x.default,enumerable:!0}:{value:x,enumerable:!0})),x);_(r,{AbstractDerivation:()=>Z,Atom:()=>ae,Box:()=>Ge,ConstantDerivation:()=>qe,DerivationFromSource:()=>Ne,PointerProxy:()=>X,Ticker:()=>F,getPointerParts:()=>fe,isDerivation:()=>O,isPointer:()=>Ve,iterateAndCountTicks:()=>Te,iterateOver:()=>ye,pointer:()=>ve,prism:()=>J,val:()=>Q,valueDerivation:()=>we});var P=b(s_),L=b(g_),M=b(y_),D=class{constructor(x){this._untapFromSourceTimeout=null,this._cb=R=>{this._tappers.forEach(B=>{B(R)})},this._lastTapperId=0,this._untapFromSource=null,this._props=x,this._tappers=new Map}_check(){this._untapFromSource?this._tappers.size===0&&this._scheduleToUntapFromSource():this._tappers.size!==0&&(this._untapFromSource=this._props.tapToSource(this._cb))}_scheduleToUntapFromSource(){this._untapFromSourceTimeout===null&&(this._untapFromSourceTimeout=setTimeout(()=>{this._untapFromSourceTimeout=null,this._tappers.size===0&&(this._untapFromSource(),this._untapFromSource=null)},0))}tap(x){const R=this._lastTapperId++;return this._tappers.set(R,x),this._check(),()=>{this._removeTapperById(R)}}_removeTapperById(x){this._tappers.delete(x),this._check()}},N=class{constructor(){this._lastTapperId=0,this._tappers=new Map,this.tappable=new D({tapToSource:x=>this._tap(x)})}_tap(x){const R=this._lastTapperId++;return this._tappers.set(R,x),this._onNumberOfTappersChangeListener&&this._onNumberOfTappersChangeListener(this._tappers.size),()=>{this._removeTapperById(R)}}_removeTapperById(x){const R=this._tappers.size;this._tappers.delete(x);const B=this._tappers.size;R!==B&&this._onNumberOfTappersChangeListener&&this._onNumberOfTappersChangeListener(this._tappers.size)}emit(x){this._tappers.forEach(R=>{R(x)})}hasTappers(){return this._tappers.size!==0}onNumberOfTappersChange(x){this._onNumberOfTappersChangeListener=x}},U=class{constructor(x,R){return this._possiblyMarkAsStale=()=>{this._ticker.onThisOrNextTick(this._refresh)},this._refresh=()=>{const B=this._derivation.getValue();B===this._lastValue&&this._lastValueRecorded===!0||(this._lastValue=B,this._lastValueRecorded=!0,this._emitter.emit(B))},this._derivation=x,this._ticker=R,this._emitter=new N,this._emitter.onNumberOfTappersChange(()=>{this._reactToNumberOfTappersChange()}),this._hadTappers=!1,this._lastValueRecorded=!1,this._lastValue=void 0,this}_reactToNumberOfTappersChange(){const x=this._emitter.hasTappers();x!==this._hadTappers&&(this._hadTappers=x,x?this._derivation.addDependent(this._possiblyMarkAsStale):this._derivation.removeDependent(this._possiblyMarkAsStale))}tappable(){return this._emitter.tappable}},T=class{constructor(x,R=!1){return this.dontEmitValues=R,this._possiblyMarkAsStale=()=>{this._emitter.emit(void 0)},this._derivation=x,this._emitter=new N,this._emitter.onNumberOfTappersChange(()=>{this._reactToNumberOfTappersChange()}),this._hadTappers=!1,this}_reactToNumberOfTappersChange(){const x=this._emitter.hasTappers();x!==this._hadTappers&&(this._hadTappers=x,x?this._derivation.addDependent(this._possiblyMarkAsStale):this._derivation.removeDependent(this._possiblyMarkAsStale))}tappable(){return this._emitter.tappable}};function O(x){return x&&x.isDerivation&&x.isDerivation===!0}var H;(function(x){x[x.none=0]="none",x[x.dep=1]="dep",x[x.inner=2]="inner"})(H||(H={}));var V=()=>{class x extends Z{constructor(B,q){return super(),this._depDerivation=B,this._fn=q,this._innerDerivation=void 0,this._staleDependency=1,this._addDependency(B),this}_recalculateHot(){const B=this._staleDependency;if(this._staleDependency=0,B===2)return this._innerDerivation.getValue();const q=this._fn(this._depDerivation.getValue());return O(q)?(this._innerDerivation=q,this._addDependency(q),q.getValue()):q}_recalculateCold(){const B=this._fn(this._depDerivation.getValue());return O(B)?B.getValue():B}_recalculate(){return this.isHot?this._recalculateHot():this._recalculateCold()}_reactToDependencyBecomingStale(B){const q=B===this._depDerivation?1:2;if(q===2&&B!==this._innerDerivation)throw Error("got a _reactToDependencyBecomingStale() from neither the dep nor the inner derivation");this._staleDependency===0?(this._staleDependency=q,q===1&&this._removeInnerDerivation()):this._staleDependency===1||q===1&&(this._staleDependency=1,this._removeInnerDerivation())}_removeInnerDerivation(){this._innerDerivation&&(this._removeDependency(this._innerDerivation),this._innerDerivation=void 0)}_keepHot(){this._staleDependency=1,this.getValue()}_becomeCold(){this._staleDependency=1,this._removeInnerDerivation()}}return x.displayName="flatMap",x},se=void 0;function ce(x,R){return se||(se=V()),new se(x,R)}var z=()=>class extends Z{constructor(R,B){super(),this._dep=R,this._fn=B,this._addDependency(R)}_recalculate(){return this._fn(this._dep.getValue())}_reactToDependencyBecomingStale(){}},W=void 0;function j(x,R){return W||(W=z()),new W(x,R)}var te=class{constructor(){this._head=void 0}peek(){return this._head&&this._head.data}pop(){const x=this._head;if(!!x)return this._head=x.next,x.data}push(x){const R={next:this._head,data:x};this._head=R}};function ie(){const x=()=>{},R=new te,B=x;return{type:"Dataverse_discoveryMechanism",startIgnoringDependencies:()=>{R.push(B)},stopIgnoringDependencies:()=>{R.peek()!==B||R.pop()},reportResolutionStart:Lt=>{const $t=R.peek();$t&&$t(Lt),R.push(B)},reportResolutionEnd:Lt=>{R.pop()},pushCollector:Lt=>{R.push(Lt)},popCollector:Lt=>{if(R.peek()!==Lt)throw new Error("Popped collector is not on top of the stack");R.pop()}}}function Y(){const x="__dataverse_discoveryMechanism_sharedStack";if(window){const R=window[x];if(R&&typeof R=="object"&&R.type==="Dataverse_discoveryMechanism")return R;{const B=ie();return window[x]=B,B}}else return ie()}var{startIgnoringDependencies:K,stopIgnoringDependencies:he,reportResolutionEnd:re,reportResolutionStart:_e,pushCollector:Ce,popCollector:De}=Y(),Z=class{constructor(){this.isDerivation=!0,this._didMarkDependentsAsStale=!1,this._isHot=!1,this._isFresh=!1,this._lastValue=void 0,this._dependents=new Set,this._dependencies=new Set,this._internal_markAsStale=x=>{this._reactToDependencyBecomingStale(x),!this._didMarkDependentsAsStale&&(this._didMarkDependentsAsStale=!0,this._isFresh=!1,this._dependents.forEach(R=>{R(this)}))}}get isHot(){return this._isHot}_addDependency(x){this._dependencies.has(x)||(this._dependencies.add(x),this._isHot&&x.addDependent(this._internal_markAsStale))}_removeDependency(x){!this._dependencies.has(x)||(this._dependencies.delete(x),this._isHot&&x.removeDependent(this._internal_markAsStale))}changes(x){return new U(this,x).tappable()}changesWithoutValues(){return new T(this).tappable()}keepHot(){return this.changesWithoutValues().tap(()=>{})}tapImmediate(x,R){const B=this.changes(x).tap(R);return R(this.getValue()),B}addDependent(x){const R=this._dependents.size>0;this._dependents.add(x);const B=this._dependents.size>0;R!==B&&this._reactToNumberOfDependentsChange()}removeDependent(x){const R=this._dependents.size>0;this._dependents.delete(x);const B=this._dependents.size>0;R!==B&&this._reactToNumberOfDependentsChange()}_markAsStale(x){this._internal_markAsStale(x)}getValue(){if(_e(this),!this._isFresh){const x=this._recalculate();this._lastValue=x,this._isHot&&(this._isFresh=!0,this._didMarkDependentsAsStale=!1)}return re(this),this._lastValue}_reactToNumberOfDependentsChange(){const x=this._dependents.size>0;x!==this._isHot&&(this._isHot=x,this._didMarkDependentsAsStale=!1,this._isFresh=!1,x?(this._dependencies.forEach(R=>{R.addDependent(this._internal_markAsStale)}),this._keepHot()):(this._dependencies.forEach(R=>{R.removeDependent(this._internal_markAsStale)}),this._becomeCold()))}_keepHot(){}_becomeCold(){}map(x){return j(this,x)}flatMap(x){return ce(this,x)}},Ke=()=>{},Ne=class extends Z{constructor(x,R){super(),this._tapToSource=x,this._getValueFromSource=R,this._untapFromChanges=Ke,this._cachedValue=void 0,this._hasCachedValue=!1}_recalculate(){return this.isHot?(this._hasCachedValue||(this._cachedValue=this._getValueFromSource(),this._hasCachedValue=!0),this._cachedValue):this._getValueFromSource()}_keepHot(){this._hasCachedValue=!1,this._cachedValue=void 0,this._untapFromChanges=this._tapToSource(x=>{this._hasCachedValue=!0,this._cachedValue=x,this._markAsStale(this)})}_becomeCold(){this._untapFromChanges(),this._untapFromChanges=Ke,this._hasCachedValue=!1,this._cachedValue=void 0}_reactToDependencyBecomingStale(){}},We=new WeakMap,de=Symbol("pointerMeta"),Ye=new WeakMap,ne={get(x,R){if(R===de)return We.get(x);let B=Ye.get(x);if(B||(B={},Ye.set(x,B)),B[R])return B[R];const q=We.get(x),ue=Ae({root:q.root,path:[...q.path,R]});return B[R]=ue,ue}},ee=x=>x[de],fe=x=>{const{root:R,path:B}=ee(x);return{root:R,path:B}};function Ae(x){var R;const B={root:x.root,path:(R=x.path)!=null?R:[]},q={};return We.set(q,B),new Proxy(q,ne)}var ve=Ae,Ve=x=>x&&!!ee(x);function Be(x,R,B){return R.length===0?B(x):Pe(x,R,B)}var Pe=(x,R,B)=>{if(R.length===0)return B(x);if(Array.isArray(x)){let[q,...ue]=R;q=parseInt(String(q),10),isNaN(q)&&(q=0);const Re=x[q],He=Pe(Re,ue,B);if(Re===He)return x;const Xe=[...x];return Xe.splice(q,1,He),Xe}else if(typeof x=="object"&&x!==null){const[q,...ue]=R,Re=x[q],He=Pe(Re,ue,B);return Re===He?x:g(p({},x),{[q]:He})}else{const[q,...ue]=R;return{[q]:Pe(void 0,ue,B)}}},it;(function(x){x[x.Dict=0]="Dict",x[x.Array=1]="Array",x[x.Other=2]="Other"})(it||(it={}));var Qe=x=>Array.isArray(x)?1:(0,L.default)(x)?0:2,A=(x,R,B=Qe(x))=>B===0&&typeof R=="string"||B===1&&S(R)?x[R]:void 0,S=x=>{const R=typeof x=="number"?x:parseInt(x,10);return!isNaN(R)&&R>=0&&R<1/0&&(R|0)===R},$=class{constructor(x,R){this._parent=x,this._path=R,this.children=new Map,this.identityChangeListeners=new Set}addIdentityChangeListener(x){this.identityChangeListeners.add(x)}removeIdentityChangeListener(x){this.identityChangeListeners.delete(x),this._checkForGC()}removeChild(x){this.children.delete(x),this._checkForGC()}getChild(x){return this.children.get(x)}getOrCreateChild(x){let R=this.children.get(x);return R||(R=R=new $(this,this._path.concat([x])),this.children.set(x,R)),R}_checkForGC(){this.identityChangeListeners.size>0||this.children.size>0||this._parent&&this._parent.removeChild((0,M.default)(this._path))}},ae=class{constructor(x){this.$$isIdentityDerivationProvider=!0,this.reduceState=(R,B)=>{const q=Be(this.getState(),R,B);return this.setState(q),q},this._onPathValueChange=(R,B)=>{const q=this._getOrCreateScopeForPath(R);return q.identityChangeListeners.add(B),()=>{q.identityChangeListeners.delete(B)}},this._currentState=x,this._rootScope=new $(void 0,[]),this.pointer=ve({root:this,path:[]})}setState(x){const R=this._currentState;this._currentState=x,this._checkUpdates(this._rootScope,R,x)}getState(){return this._currentState}getIn(x){return x.length===0?this.getState():(0,P.default)(this.getState(),x)}setIn(x,R){return this.reduceState(x,()=>R)}_checkUpdates(x,R,B){if(R===B||(x.identityChangeListeners.forEach(Re=>Re(B)),x.children.size===0))return;const q=Qe(R),ue=Qe(B);q===2&&q===ue||x.children.forEach((Re,He)=>{const Xe=A(R,He,q),ht=A(B,He,ue);this._checkUpdates(Re,Xe,ht)})}_getOrCreateScopeForPath(x){let R=this._rootScope;for(const B of x)R=R.getOrCreateChild(B);return R}getIdentityDerivation(x){return new Ne(R=>this._onPathValueChange(x,R),()=>this.getIn(x))}},ge=new WeakMap,we=x=>{const R=ee(x);let B=ge.get(R);if(!B){const q=R.root;if(!Fe(q))throw new Error("Cannot run valueDerivation() on a pointer whose root is not an IdentityChangeProvider");const{path:ue}=R;B=q.getIdentityDerivation(ue),ge.set(R,B)}return B};function Fe(x){return typeof x=="object"&&x!==null&&x.$$isIdentityDerivationProvider===!0}var Q=x=>Ve(x)?we(x).getValue():O(x)?x.getValue():x,Ge=class{constructor(x){this._value=x,this._emitter=new N,this._publicDerivation=new Ne(R=>this._emitter.tappable.tap(R),this.get.bind(this))}set(x){x!==this._value&&(this._value=x,this._emitter.emit(x))}get(){return this._value}get derivation(){return this._publicDerivation}},qe=class extends Z{constructor(x){return super(),this._v=x,this}_recalculate(){return this._v}_reactToDependencyBecomingStale(){}};function*Te(x){let R;if(Ve(x))R=we(x);else if(O(x))R=x;else throw new Error("Only pointers and derivations are supported");let B=0;const q=R.changesWithoutValues().tap(()=>{B++});try{for(;;){const ue=B;B=0,yield{value:R.getValue(),ticks:ue}}}finally{q()}}var F=class{constructor(){this._ticking=!1,this._scheduledForThisOrNextTick=new Set,this._scheduledForNextTick=new Set,this._timeAtCurrentTick=0}onThisOrNextTick(x){this._scheduledForThisOrNextTick.add(x)}onNextTick(x){this._scheduledForNextTick.add(x)}offThisOrNextTick(x){this._scheduledForThisOrNextTick.delete(x)}offNextTick(x){this._scheduledForNextTick.delete(x)}get time(){return this._ticking?this._timeAtCurrentTick:performance.now()}tick(x=performance.now()){this._ticking=!0,this._timeAtCurrentTick=x,this._scheduledForNextTick.forEach(R=>this._scheduledForThisOrNextTick.add(R)),this._scheduledForNextTick.clear(),this._tick(0),this._ticking=!1}_tick(x){const R=this.time;if(x>10&&console.warn("_tick() recursing for 10 times"),x>100)throw new Error("Maximum recursion limit for _tick()");const B=this._scheduledForThisOrNextTick;if(this._scheduledForThisOrNextTick=new Set,B.forEach(q=>{q(R)}),this._scheduledForThisOrNextTick.size>0)return this._tick(x+1)}};function*ye(x){let R;if(Ve(x))R=we(x);else if(O(x))R=x;else throw new Error("Only pointers and derivations are supported");const B=new F,q=R.changes(B).tap(ue=>{});try{for(;;)B.tick(),yield R.getValue()}finally{q()}}var me=()=>{},Ue=class extends Z{constructor(x){super(),this._fn=x,this._cacheOfDendencyValues=new Map,this._possiblyStaleDeps=new Set,this._prismScope=new Se}_recalculate(){let x;if(this._possiblyStaleDeps.size>0){let q=!1;K();for(const ue of this._possiblyStaleDeps)if(this._cacheOfDendencyValues.get(ue)!==ue.getValue()){q=!0;break}if(he(),this._possiblyStaleDeps.clear(),!q)return this._lastValue}const R=new Set;this._cacheOfDendencyValues.clear();const B=q=>{R.add(q),this._addDependency(q)};Ce(B),je.push(this._prismScope);try{x=this._fn()}catch(q){console.error(q)}finally{je.pop()!==this._prismScope&&console.warn("The Prism hook stack has slipped. This is a bug.")}return De(B),this._dependencies.forEach(q=>{R.has(q)||this._removeDependency(q)}),this._dependencies=R,K(),R.forEach(q=>{this._cacheOfDendencyValues.set(q,q.getValue())}),he(),x}_reactToDependencyBecomingStale(x){this._possiblyStaleDeps.add(x)}_keepHot(){this._prismScope=new Se,K(),this.getValue(),he()}_becomeCold(){ze(this._prismScope),this._prismScope=new Se}},Se=class{constructor(){this.isPrismScope=!0,this._subs={}}sub(x){return this._subs[x]||(this._subs[x]=new Se),this._subs[x]}get subs(){return this._subs}};function ze(x){for(const[R,B]of Object.entries(x.subs))ze(B);pe(x)}function pe(x){const R=Et.get(x);if(R)for(const B of Object.keys(R)){const q=R[B];Oe(q.cleanup,void 0)}Et.delete(x)}function Oe(x,R){let B=R,q=!1;try{B=x(),q=!0}catch(ue){setTimeout(()=>{throw ue})}return{success:q,returnValue:B}}var je=new te,Je=new WeakMap,Et=new WeakMap,It=new WeakMap;function wr(x,R){const B=je.peek();if(!B)throw new Error("prism.ref() is called outside of a prism() call.");let q=Je.get(B);if(q||(q={},Je.set(B,q)),q[x])return q[x];{const ue={current:R};return q[x]=ue,ue}}function Nn(x,R,B){const q=je.peek();if(!q)throw new Error("prism.effect() is called outside of a prism() call.");let ue=Et.get(q);ue||(ue={},Et.set(q,ue)),ue[x]||(ue[x]={cleanup:me,deps:[{}]});const Re=ue[x];Ai(Re.deps,B)&&(Re.cleanup(),K(),Re.cleanup=Oe(R,me).returnValue,he(),Re.deps=B)}function Ai(x,R){return x===void 0||R===void 0||x.length!==R.length?!0:x.some((B,q)=>B!==R[q])}function Bn(x,R,B){const q=je.peek();if(!q)throw new Error("prism.memo() is called outside of a prism() call.");let ue=It.get(q);ue||(ue={},It.set(q,ue)),ue[x]||(ue[x]={cachedValue:null,deps:[{}]});const Re=ue[x];return Ai(Re.deps,B)&&(K(),Re.cachedValue=Oe(R,void 0).returnValue,he(),Re.deps=B),Re.cachedValue}function Ci(x,R){const{b:B,setValue:q}=k.memo("state/"+x,()=>{const ue=new Ge(R);return{b:ue,setValue:He=>ue.set(He)}},[]);return[B.derivation.getValue(),q]}function Mr(){if(!je.peek())throw new Error("The parent function is called outside of a prism() call.")}function Sr(x,R){const B=je.peek();if(!B)throw new Error("prism.scope() is called outside of a prism() call.");const q=B.sub(x);je.push(q);const ue=Oe(R,void 0).returnValue;return je.pop(),ue}function Tr(x,R,B){return Bn(x,()=>k(R),B).getValue()}function E(){return!!je.peek()}var k=x=>new Ue(x);k.ref=wr,k.effect=Nn,k.memo=Bn,k.ensurePrism=Mr,k.state=Ci,k.scope=Sr,k.sub=Tr,k.inPrism=E;var J=k,X=class{constructor(x){this.$$isIdentityDerivationProvider=!0,this._currentPointerBox=new Ge(x),this.pointer=ve({root:this,path:[]})}setPointer(x){this._currentPointerBox.set(x)}getIdentityDerivation(x){return this._currentPointerBox.derivation.flatMap(R=>{const B=x.reduce((q,ue)=>q[ue],R);return we(B)})}}})(Mt);(function(r){var e=Object.create,t=Object.defineProperty,n=Object.defineProperties,i=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols,c=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,f=(l,d,y)=>d in l?t(l,d,{enumerable:!0,configurable:!0,writable:!0,value:y}):l[d]=y,p=(l,d)=>{for(var y in d||(d={}))h.call(d,y)&&f(l,y,d[y]);if(a)for(var y of a(d))u.call(d,y)&&f(l,y,d[y]);return l},g=(l,d)=>n(l,s(d)),v=l=>t(l,"__esModule",{value:!0}),_=(l,d)=>{var y={};for(var w in l)h.call(l,w)&&d.indexOf(w)<0&&(y[w]=l[w]);if(l!=null&&a)for(var w of a(l))d.indexOf(w)<0&&u.call(l,w)&&(y[w]=l[w]);return y},m=(l,d)=>function(){return d||(0,l[Object.keys(l)[0]])((d={exports:{}}).exports,d),d.exports},b=(l,d)=>{v(l);for(var y in d)t(l,y,{get:d[y],enumerable:!0})},P=(l,d,y)=>{if(d&&typeof d=="object"||typeof d=="function")for(let w of o(d))!h.call(l,w)&&w!=="default"&&t(l,w,{get:()=>d[w],enumerable:!(y=i(d,w))||y.enumerable});return l},L=l=>P(v(t(l!=null?e(c(l)):{},"default",l&&l.__esModule&&"default"in l?{get:()=>l.default,enumerable:!0}:{value:l,enumerable:!0})),l),M=(l,d,y)=>(f(l,typeof d!="symbol"?d+"":d,y),y),D=m({"../node_modules/timing-function/lib/UnitBezier.js"(l,d){d.exports=function(){function y(w,I,G,oe){this.set(w,I,G,oe)}return y.prototype.set=function(w,I,G,oe){this._cx=3*w,this._bx=3*(G-w)-this._cx,this._ax=1-this._cx-this._bx,this._cy=3*I,this._by=3*(oe-I)-this._cy,this._ay=1-this._cy-this._by},y.epsilon=1e-6,y.prototype._sampleCurveX=function(w){return((this._ax*w+this._bx)*w+this._cx)*w},y.prototype._sampleCurveY=function(w){return((this._ay*w+this._by)*w+this._cy)*w},y.prototype._sampleCurveDerivativeX=function(w){return(3*this._ax*w+2*this._bx)*w+this._cx},y.prototype._solveCurveX=function(w,I){var G,oe,xe,Me,Ee,ke;for(xe=void 0,Me=void 0,Ee=void 0,ke=void 0,G=void 0,oe=void 0,Ee=w,oe=0;oe<8;){if(ke=this._sampleCurveX(Ee)-w,Math.abs(ke)<I)return Ee;if(G=this._sampleCurveDerivativeX(Ee),Math.abs(G)<I)break;Ee=Ee-ke/G,oe++}if(xe=0,Me=1,Ee=w,Ee<xe)return xe;if(Ee>Me)return Me;for(;xe<Me;){if(ke=this._sampleCurveX(Ee),Math.abs(ke-w)<I)return Ee;w>ke?xe=Ee:Me=Ee,Ee=(Me-xe)*.5+xe}return Ee},y.prototype.solve=function(w,I){return this._sampleCurveY(this._solveCurveX(w,I))},y.prototype.solveSimple=function(w){return this._sampleCurveY(this._solveCurveX(w,1e-6))},y}()}}),N=m({"../node_modules/levenshtein-edit-distance/index.js"(l,d){var y,w;y=[],w=[];function I(G,oe,xe){var Me,Ee,ke,$e,et,ut,tt,kt;if(G===oe)return 0;if(Me=G.length,Ee=oe.length,Me===0)return Ee;if(Ee===0)return Me;for(xe&&(G=G.toLowerCase(),oe=oe.toLowerCase()),tt=0;tt<Me;)w[tt]=G.charCodeAt(tt),y[tt]=++tt;for(kt=0;kt<Ee;)for(ke=oe.charCodeAt(kt),$e=et=kt++,tt=-1;++tt<Me;)ut=ke===w[tt]?et:et+1,et=y[tt],y[tt]=$e=et>$e?ut>$e?$e+1:ut:ut>et?et+1:ut;return $e}d.exports=I}}),U=m({"../node_modules/propose/propose.js"(l,d){var y=N();function w(){var I,G,oe,xe,Me,Ee=0,ke=arguments[0],$e=arguments[1],et=$e.length,ut=arguments[2];ut&&(xe=ut.threshold,Me=ut.ignoreCase),xe===void 0&&(xe=0);for(var tt=0;tt<et;++tt)Me?G=y(ke,$e[tt],!0):G=y(ke,$e[tt]),G>ke.length?I=1-G/$e[tt].length:I=1-G/ke.length,I>Ee&&(Ee=I,oe=$e[tt]);return Ee>=xe?oe:null}d.exports=w}}),T=m({"../node_modules/fast-deep-equal/index.js"(l,d){d.exports=function y(w,I){if(w===I)return!0;if(w&&I&&typeof w=="object"&&typeof I=="object"){if(w.constructor!==I.constructor)return!1;var G,oe,xe;if(Array.isArray(w)){if(G=w.length,G!=I.length)return!1;for(oe=G;oe--!==0;)if(!y(w[oe],I[oe]))return!1;return!0}if(w.constructor===RegExp)return w.source===I.source&&w.flags===I.flags;if(w.valueOf!==Object.prototype.valueOf)return w.valueOf()===I.valueOf();if(w.toString!==Object.prototype.toString)return w.toString()===I.toString();if(xe=Object.keys(w),G=xe.length,G!==Object.keys(I).length)return!1;for(oe=G;oe--!==0;)if(!Object.prototype.hasOwnProperty.call(I,xe[oe]))return!1;for(oe=G;oe--!==0;){var Me=xe[oe];if(!y(w[Me],I[Me]))return!1}return!0}return w!==w&&I!==I}}});b(r,{getProject:()=>Oc,onChange:()=>Fc,types:()=>Lo,val:()=>Nc});var O={};b(O,{getProject:()=>Oc,onChange:()=>Fc,types:()=>Lo,val:()=>Nc});var H=L(Mt),V=class{constructor(){M(this,"atom",new H.Atom({projects:{}}))}add(l,d){this.atom.reduceState(["projects",l],()=>d)}get(l){return this.atom.getState().projects[l]}has(l){return!!this.get(l)}},se=new V,ce=se,z=new WeakMap;function W(l){return z.get(l)}function j(l,d){z.set(l,d)}var te=[],ie=Array.isArray,Y=ie,K=typeof window=="object"&&window&&window.Object===Object&&window,he=K,re=typeof self=="object"&&self&&self.Object===Object&&self,_e=he||re||Function("return this")(),Ce=_e,De=Ce.Symbol,Z=De,Ke=Object.prototype,Ne=Ke.hasOwnProperty,We=Ke.toString,de=Z?Z.toStringTag:void 0;function Ye(l){var d=Ne.call(l,de),y=l[de];try{l[de]=void 0;var w=!0}catch{}var I=We.call(l);return w&&(d?l[de]=y:delete l[de]),I}var ne=Ye,ee=Object.prototype,fe=ee.toString;function Ae(l){return fe.call(l)}var ve=Ae,Ve="[object Null]",Be="[object Undefined]",Pe=Z?Z.toStringTag:void 0;function it(l){return l==null?l===void 0?Be:Ve:Pe&&Pe in Object(l)?ne(l):ve(l)}var Qe=it;function A(l){return l!=null&&typeof l=="object"}var S=A,$="[object Symbol]";function ae(l){return typeof l=="symbol"||S(l)&&Qe(l)==$}var ge=ae,we=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Fe=/^\w*$/;function Q(l,d){if(Y(l))return!1;var y=typeof l;return y=="number"||y=="symbol"||y=="boolean"||l==null||ge(l)?!0:Fe.test(l)||!we.test(l)||d!=null&&l in Object(d)}var Ge=Q;function qe(l){var d=typeof l;return l!=null&&(d=="object"||d=="function")}var Te=qe,F="[object AsyncFunction]",ye="[object Function]",me="[object GeneratorFunction]",Ue="[object Proxy]";function Se(l){if(!Te(l))return!1;var d=Qe(l);return d==ye||d==me||d==F||d==Ue}var ze=Se,pe=Ce["__core-js_shared__"],Oe=pe,je=function(){var l=/[^.]+$/.exec(Oe&&Oe.keys&&Oe.keys.IE_PROTO||"");return l?"Symbol(src)_1."+l:""}();function Je(l){return!!je&&je in l}var Et=Je,It=Function.prototype,wr=It.toString;function Nn(l){if(l!=null){try{return wr.call(l)}catch{}try{return l+""}catch{}}return""}var Ai=Nn,Bn=/[\\^$.*+?()[\]{}|]/g,Ci=/^\[object .+?Constructor\]$/,Mr=Function.prototype,Sr=Object.prototype,Tr=Mr.toString,E=Sr.hasOwnProperty,k=RegExp("^"+Tr.call(E).replace(Bn,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function J(l){if(!Te(l)||Et(l))return!1;var d=ze(l)?k:Ci;return d.test(Ai(l))}var X=J;function x(l,d){return l==null?void 0:l[d]}var R=x;function B(l,d){var y=R(l,d);return X(y)?y:void 0}var q=B,ue=q(Object,"create"),Re=ue;function He(){this.__data__=Re?Re(null):{},this.size=0}var Xe=He;function ht(l){var d=this.has(l)&&delete this.__data__[l];return this.size-=d?1:0,d}var Lt=ht,$t="__lodash_hash_undefined__",zn=Object.prototype,Zt=zn.hasOwnProperty;function nt(l){var d=this.__data__;if(Re){var y=d[l];return y===$t?void 0:y}return Zt.call(d,l)?d[l]:void 0}var kn=nt,gt=Object.prototype,Kt=gt.hasOwnProperty;function gn(l){var d=this.__data__;return Re?d[l]!==void 0:Kt.call(d,l)}var ri=gn,Er="__lodash_hash_undefined__";function At(l,d){var y=this.__data__;return this.size+=this.has(l)?0:1,y[l]=Re&&d===void 0?Er:d,this}var si=At;function _n(l){var d=-1,y=l==null?0:l.length;for(this.clear();++d<y;){var w=l[d];this.set(w[0],w[1])}}_n.prototype.clear=Xe,_n.prototype.delete=Lt,_n.prototype.get=kn,_n.prototype.has=ri,_n.prototype.set=si;var Wt=_n;function Bd(){this.__data__=[],this.size=0}var zd=Bd;function kd(l,d){return l===d||l!==l&&d!==d}var Dl=kd;function Ud(l,d){for(var y=l.length;y--;)if(Dl(l[y][0],d))return y;return-1}var cs=Ud,Vd=Array.prototype,Hd=Vd.splice;function Gd(l){var d=this.__data__,y=cs(d,l);if(y<0)return!1;var w=d.length-1;return y==w?d.pop():Hd.call(d,y,1),--this.size,!0}var Wd=Gd;function jd(l){var d=this.__data__,y=cs(d,l);return y<0?void 0:d[y][1]}var qd=jd;function Xd(l){return cs(this.__data__,l)>-1}var Yd=Xd;function Jd(l,d){var y=this.__data__,w=cs(y,l);return w<0?(++this.size,y.push([l,d])):y[w][1]=d,this}var $d=Jd;function Pi(l){var d=-1,y=l==null?0:l.length;for(this.clear();++d<y;){var w=l[d];this.set(w[0],w[1])}}Pi.prototype.clear=zd,Pi.prototype.delete=Wd,Pi.prototype.get=qd,Pi.prototype.has=Yd,Pi.prototype.set=$d;var Zd=Pi,Kd=q(Ce,"Map"),Qd=Kd;function ef(){this.size=0,this.__data__={hash:new Wt,map:new(Qd||Zd),string:new Wt}}var tf=ef;function nf(l){var d=typeof l;return d=="string"||d=="number"||d=="symbol"||d=="boolean"?l!=="__proto__":l===null}var rf=nf;function sf(l,d){var y=l.__data__;return rf(d)?y[typeof d=="string"?"string":"hash"]:y.map}var hs=sf;function of(l){var d=hs(this,l).delete(l);return this.size-=d?1:0,d}var af=of;function lf(l){return hs(this,l).get(l)}var cf=lf;function hf(l){return hs(this,l).has(l)}var uf=hf;function df(l,d){var y=hs(this,l),w=y.size;return y.set(l,d),this.size+=y.size==w?0:1,this}var ff=df;function Ri(l){var d=-1,y=l==null?0:l.length;for(this.clear();++d<y;){var w=l[d];this.set(w[0],w[1])}}Ri.prototype.clear=tf,Ri.prototype.delete=af,Ri.prototype.get=cf,Ri.prototype.has=uf,Ri.prototype.set=ff;var Il=Ri,pf="Expected a function";function wo(l,d){if(typeof l!="function"||d!=null&&typeof d!="function")throw new TypeError(pf);var y=function(){var w=arguments,I=d?d.apply(this,w):w[0],G=y.cache;if(G.has(I))return G.get(I);var oe=l.apply(this,w);return y.cache=G.set(I,oe)||G,oe};return y.cache=new(wo.Cache||Il),y}wo.Cache=Il;var mf=wo,gf=500;function _f(l){var d=mf(l,function(w){return y.size===gf&&y.clear(),w}),y=d.cache;return d}var vf=_f,yf=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,xf=/\\(\\)?/g,bf=vf(function(l){var d=[];return l.charCodeAt(0)===46&&d.push(""),l.replace(yf,function(y,w,I,G){d.push(I?G.replace(xf,"$1"):w||y)}),d}),wf=bf;function Mf(l,d){for(var y=-1,w=l==null?0:l.length,I=Array(w);++y<w;)I[y]=d(l[y],y,l);return I}var Sf=Mf,Tf=1/0,Ol=Z?Z.prototype:void 0,Fl=Ol?Ol.toString:void 0;function Nl(l){if(typeof l=="string")return l;if(Y(l))return Sf(l,Nl)+"";if(ge(l))return Fl?Fl.call(l):"";var d=l+"";return d=="0"&&1/l==-Tf?"-0":d}var Bl=Nl;function Ef(l){return l==null?"":Bl(l)}var zl=Ef;function Af(l,d){return Y(l)?l:Ge(l,d)?[l]:wf(zl(l))}var kl=Af,Cf=1/0;function Pf(l){if(typeof l=="string"||ge(l))return l;var d=l+"";return d=="0"&&1/l==-Cf?"-0":d}var Ul=Pf;function Rf(l,d){d=kl(d,l);for(var y=0,w=d.length;l!=null&&y<w;)l=l[Ul(d[y++])];return y&&y==w?l:void 0}var Lf=Rf;function Df(l,d,y){var w=l==null?void 0:Lf(l,d);return w===void 0?y:w}var Vl=Df;function If(l,d){return d.length===0?l:Vl(l,d)}var Mo=class{constructor(){M(this,"_values",{})}get(l,d){if(this.has(l))return this._values[l];{const y=d();return this._values[l]=y,y}}has(l){return this._values.hasOwnProperty(l)}},Sn=L(Mt),Of=function(){try{var l=q(Object,"defineProperty");return l({},"",{}),l}catch{}}(),Hl=Of;function Ff(l,d,y){d=="__proto__"&&Hl?Hl(l,d,{configurable:!0,enumerable:!0,value:y,writable:!0}):l[d]=y}var Nf=Ff,Bf=Object.prototype,zf=Bf.hasOwnProperty;function kf(l,d,y){var w=l[d];(!(zf.call(l,d)&&Dl(w,y))||y===void 0&&!(d in l))&&Nf(l,d,y)}var Uf=kf,Vf=9007199254740991,Hf=/^(?:0|[1-9]\d*)$/;function Gf(l,d){var y=typeof l;return d=d==null?Vf:d,!!d&&(y=="number"||y!="symbol"&&Hf.test(l))&&l>-1&&l%1==0&&l<d}var Wf=Gf;function jf(l,d,y,w){if(!Te(l))return l;d=kl(d,l);for(var I=-1,G=d.length,oe=G-1,xe=l;xe!=null&&++I<G;){var Me=Ul(d[I]),Ee=y;if(Me==="__proto__"||Me==="constructor"||Me==="prototype")return l;if(I!=oe){var ke=xe[Me];Ee=w?w(ke,Me,xe):void 0,Ee===void 0&&(Ee=Te(ke)?ke:Wf(d[I+1])?[]:{})}Uf(xe,Me,Ee),xe=xe[Me]}return l}var qf=jf;function Xf(l,d,y){return l==null?l:qf(l,d,y)}var Yf=Xf,So=new WeakMap;function Jf(l){return To(l)}function To(l){if(So.has(l))return So.get(l);const d=l.type==="compound"?Zf(l):l.type==="enum"?$f(l):l.default;return So.set(l,d),d}function $f(l){const d={$case:l.defaultCase};for(const[y,w]of Object.entries(l.cases))d[y]=To(w);return d}function Zf(l){const d={};for(const[y,w]of Object.entries(l.props))d[y]=To(w);return d}var Qt=L(Mt),Kf={log:console.log,warn:console.warn,error:console.error,trace:console.trace},Gl=Kf,Qf=L(D());function ep(l,d){return(0,Qt.prism)(()=>{const y=(0,Qt.val)(l);return Qt.prism.memo("driver",()=>y?y.type==="BasicKeyframedTrack"?tp(y,d):(Gl.error("Track type not yet supported."),new Qt.ConstantDerivation(void 0)):new Qt.ConstantDerivation(void 0),[y]).getValue()})}function tp(l,d){return(0,Qt.prism)(()=>{let y=Qt.prism.ref("state",{started:!1}),w=y.current;const I=d.getValue();return(!w.started||I<w.validFrom||w.validTo<=I)&&(y.current=w=np(d,l)),w.der.getValue()})}var Wl=new Qt.ConstantDerivation(void 0),np=(l,d)=>{const y=l.getValue();if(d.keyframes.length===0)return{started:!0,validFrom:-1/0,validTo:1/0,der:Wl};let w=0;for(;;){const I=d.keyframes[w];if(!I)return oi.error;const G=w===d.keyframes.length-1;if(y<I.position)return w===0?oi.beforeFirstKeyframe(I):oi.error;if(I.position===y)return G?oi.lastKeyframe(I):oi.between(I,d.keyframes[w+1],l);if(w===d.keyframes.length-1)return oi.lastKeyframe(I);{const oe=w+1;if(d.keyframes[oe].position<=y){w=oe;continue}else return oi.between(I,d.keyframes[w+1],l)}}},oi={beforeFirstKeyframe(l){return{started:!0,validFrom:-1/0,validTo:l.position,der:new Qt.ConstantDerivation(l.value)}},lastKeyframe(l){return{started:!0,validFrom:l.position,validTo:1/0,der:new Qt.ConstantDerivation(l.value)}},between(l,d,y){if(!l.connectedRight)return{started:!0,validFrom:l.position,validTo:d.position,der:new Qt.ConstantDerivation(l.value)};const w=new Qf.default(l.handles[2],l.handles[3],d.handles[0],d.handles[1]),I=oe=>(oe-l.position)/(d.position-l.position),G=(0,Qt.prism)(()=>{const oe=I(y.getValue()),xe=w.solveSimple(oe);return l.value+xe*(d.value-l.value)});return{started:!0,validFrom:l.position,validTo:d.position,der:G}},error:{started:!0,validFrom:-1/0,validTo:1/0,der:Wl}};function us(l,d,y){const I=y.get(l);if(I&&I.override===d)return I.merged;const G=p({},l);for(const oe of Object.keys(d)){const xe=d[oe],Me=l[oe];G[oe]=typeof xe=="object"&&typeof Me=="object"?us(Me,xe,y):typeof xe=="undefined"?Me:xe}return y.set(l,{override:d,merged:G}),G}function jl(l,d){let y=l;for(const w of d)y=y[w];return y}var ql=L(Mt),ip=(l,d)=>{const y=ql.prism.memo(l,()=>new ql.Atom(d),[]);return y.setState(d),y},pt=L(Mt),rp=L(Mt),Xl=new rp.Ticker,Ar=Xl,Yl=l=>{Xl.tick(l),window.requestAnimationFrame(Yl)};window.requestAnimationFrame(Yl);var Jl=L(Mt),sp=class{constructor(l){M(this,"_cache",new Mo),j(this,l)}get type(){return"Theatre_SheetObject_PublicAPI"}get props(){return W(this).propsP}get sheet(){return W(this).sheet.publicApi}get project(){return W(this).sheet.project.publicApi}get address(){return p({},W(this).address)}_valuesDerivation(){return this._cache.get("onValuesChangeDerivation",()=>{const l=W(this);return(0,Jl.prism)(()=>(0,Jl.val)(l.getValues().getValue()))})}onValuesChange(l){return this._valuesDerivation().tapImmediate(Ar,l)}get value(){return this._valuesDerivation().getValue()}set initialValue(l){W(this).setInitialValue(l)}},op=class{constructor(l,d,y){this.sheet=l,this.template=d,this.nativeObject=y,M(this,"$$isIdentityDerivationProvider",!0),M(this,"address"),M(this,"publicApi"),M(this,"_initialValue",new pt.Atom({})),M(this,"_cache",new Mo),this.address=g(p({},d.address),{sheetInstanceId:l.address.sheetInstanceId}),this.publicApi=new sp(this)}get type(){return"Theatre_SheetObject"}getValues(){return this._cache.get("getValues()",()=>(0,pt.prism)(()=>{const l=(0,pt.val)(this.template.getDefaultValues()),d=(0,pt.val)(this._initialValue.pointer),y=pt.prism.memo("withInitialCache",()=>new WeakMap,[]),w=us(l,d,y),I=(0,pt.val)(this.template.getStaticValues()),G=pt.prism.memo("withStatics",()=>new WeakMap,[]);let xe=us(w,I,G),Me;{const ke=pt.prism.memo("seq",()=>this.getSequencedValues(),[]),$e=pt.prism.memo("withSeqsCache",()=>new WeakMap,[]);Me=(0,pt.val)((0,pt.val)(ke)),xe=us(xe,Me,$e)}return ip("finalAtom",xe).pointer}))}getValueByPointer(l){const d=(0,pt.val)(this.getValues()),{path:y}=(0,pt.getPointerParts)(l);return(0,pt.val)(jl(d,y))}getIdentityDerivation(l){return(0,pt.prism)(()=>{const d=(0,pt.val)(this.getValues());return(0,pt.val)(jl(d,l))})}getSequencedValues(){return(0,pt.prism)(()=>{const l=pt.prism.memo("tracksToProcess",()=>this.template.getArrayOfValidSequenceTracks(),[]),d=(0,pt.val)(l),y=new pt.Atom({});return pt.prism.effect("processTracks",()=>{const w=[];for(const{trackId:I,pathToProp:G}of d){const oe=this._trackIdToDerivation(I),xe=()=>{y.setIn(G,oe.getValue())},Me=oe.changesWithoutValues().tap(xe);xe(),w.push(Me)}return()=>{for(const I of w)I()}},d),y.pointer})}_trackIdToDerivation(l){const d=this.template.project.pointers.historic.sheetsById[this.address.sheetId].sequence.tracksByObject[this.address.objectKey].trackData[l],y=this.sheet.getSequence().positionDerivation;return ep(d,y)}get propsP(){return this._cache.get("propsP",()=>(0,pt.pointer)({root:this,path:[]}))}validateValue(l,d){}setInitialValue(l){this.validateValue(this.propsP,l),this._initialValue.setState(l)}},ap=class{constructor(l,d,y,w){this.sheetTemplate=l,M(this,"address"),M(this,"type","Theatre_SheetObjectTemplate"),M(this,"_config"),M(this,"_cache",new Mo),M(this,"project"),this.address=g(p({},l.address),{objectKey:d}),this._config=new Sn.Atom(w),this.project=l.project}get config(){return this._config.getState()}createInstance(l,d,y){return this._config.setState(y),new op(l,this,d)}overrideConfig(l){this._config.setState(l)}getDefaultValues(){return this._cache.get("getDefaultValues()",()=>(0,Sn.prism)(()=>{const l=(0,Sn.val)(this._config.pointer);return Jf(l)}))}getStaticValues(){return this._cache.get("getDerivationOfStatics",()=>(0,Sn.prism)(()=>{const l=this.sheetTemplate.project.pointers.historic.sheetsById[this.address.sheetId];return(0,Sn.val)(l.staticOverrides.byObject[this.address.objectKey])||{}}))}getArrayOfValidSequenceTracks(){return this._cache.get("getArrayOfValidSequenceTracks",()=>(0,Sn.prism)(()=>{const l=(0,Sn.val)(this.getDefaultValues()),d=this.project.pointers.historic.sheetsById[this.address.sheetId],y=(0,Sn.val)(d.sequence.tracksByObject[this.address.objectKey].trackIdByPropPath),w=[];if(y)for(const[I,G]of Object.entries(y)){let oe;try{oe=JSON.parse(I)}catch{Gl.warn(`property ${JSON.stringify(I)} cannot be parsed. Skipping.`);continue}typeof Vl(l,oe)=="number"&&w.push({pathToProp:oe,trackId:G})}else return te;return w.length===0?te:w}))}getMapOfValidSequenceTracks_forStudio(){return this._cache.get("getMapOfValidSequenceTracks_forStudio",()=>this.getArrayOfValidSequenceTracks().map(l=>{let d={};for(const{pathToProp:y,trackId:w}of l)Yf(d,y,w);return d}))}getDefaultsAtPointer(l){const{path:d}=(0,Sn.getPointerParts)(l),y=this.getDefaultValues().getValue();return If(y,d)}},$l=L(Mt);L(U());var lp=class extends Error{},ds=class extends lp{},cp=L(Mt),jt=L(Mt),hp=/\s/;function up(l){for(var d=l.length;d--&&hp.test(l.charAt(d)););return d}var dp=up,fp=/^\s+/;function pp(l){return l&&l.slice(0,dp(l)+1).replace(fp,"")}var mp=pp,Zl=0/0,gp=/^[-+]0x[0-9a-f]+$/i,_p=/^0b[01]+$/i,vp=/^0o[0-7]+$/i,yp=parseInt;function xp(l){if(typeof l=="number")return l;if(ge(l))return Zl;if(Te(l)){var d=typeof l.valueOf=="function"?l.valueOf():l;l=Te(d)?d+"":d}if(typeof l!="string")return l===0?l:+l;l=mp(l);var y=_p.test(l);return y||vp.test(l)?yp(l.slice(2),y?2:8):gp.test(l)?Zl:+l}var bp=xp,Kl=1/0,wp=17976931348623157e292;function Mp(l){if(!l)return l===0?l:0;if(l=bp(l),l===Kl||l===-Kl){var d=l<0?-1:1;return d*wp}return l===l?l:0}var Sp=Mp;function Tp(l){var d=Sp(l),y=d%1;return d===d?y?d-y:d:0}var Ep=Tp;function Ap(l,d){return function(y){return l(d(y))}}var Cp=Ap,Pp=Cp(Object.getPrototypeOf,Object),Rp=Pp,Lp="[object Object]",Dp=Function.prototype,Ip=Object.prototype,Ql=Dp.toString,Op=Ip.hasOwnProperty,Fp=Ql.call(Object);function Np(l){if(!S(l)||Qe(l)!=Lp)return!1;var d=Rp(l);if(d===null)return!0;var y=Op.call(d,"constructor")&&d.constructor;return typeof y=="function"&&y instanceof y&&Ql.call(y)==Fp}var Bp=Np;function zp(l,d,y){var w=-1,I=l.length;d<0&&(d=-d>I?0:I+d),y=y>I?I:y,y<0&&(y+=I),I=d>y?0:y-d>>>0,d>>>=0;for(var G=Array(I);++w<I;)G[w]=l[w+d];return G}var kp=zp;function Up(l,d,y){var w=l.length;return y=y===void 0?w:y,!d&&y>=w?l:kp(l,d,y)}var Vp=Up,Hp="\\ud800-\\udfff",Gp="\\u0300-\\u036f",Wp="\\ufe20-\\ufe2f",jp="\\u20d0-\\u20ff",qp=Gp+Wp+jp,Xp="\\ufe0e\\ufe0f",Yp="\\u200d",Jp=RegExp("["+Yp+Hp+qp+Xp+"]");function $p(l){return Jp.test(l)}var Eo=$p;function Zp(l){return l.split("")}var Kp=Zp,ec="\\ud800-\\udfff",Qp="\\u0300-\\u036f",em="\\ufe20-\\ufe2f",tm="\\u20d0-\\u20ff",nm=Qp+em+tm,im="\\ufe0e\\ufe0f",rm="["+ec+"]",Ao="["+nm+"]",Co="\\ud83c[\\udffb-\\udfff]",sm="(?:"+Ao+"|"+Co+")",tc="[^"+ec+"]",nc="(?:\\ud83c[\\udde6-\\uddff]){2}",ic="[\\ud800-\\udbff][\\udc00-\\udfff]",om="\\u200d",rc=sm+"?",sc="["+im+"]?",am="(?:"+om+"(?:"+[tc,nc,ic].join("|")+")"+sc+rc+")*",lm=sc+rc+am,cm="(?:"+[tc+Ao+"?",Ao,nc,ic,rm].join("|")+")",hm=RegExp(Co+"(?="+Co+")|"+cm+lm,"g");function um(l){return l.match(hm)||[]}var dm=um;function fm(l){return Eo(l)?dm(l):Kp(l)}var pm=fm;function mm(l){return function(d){return d==null?void 0:d[l]}}var gm=mm,_m=9007199254740991,vm=Math.floor;function ym(l,d){var y="";if(!l||d<1||d>_m)return y;do d%2&&(y+=l),d=vm(d/2),d&&(l+=l);while(d);return y}var oc=ym,xm=gm("length"),bm=xm,ac="\\ud800-\\udfff",wm="\\u0300-\\u036f",Mm="\\ufe20-\\ufe2f",Sm="\\u20d0-\\u20ff",Tm=wm+Mm+Sm,Em="\\ufe0e\\ufe0f",Am="["+ac+"]",Po="["+Tm+"]",Ro="\\ud83c[\\udffb-\\udfff]",Cm="(?:"+Po+"|"+Ro+")",lc="[^"+ac+"]",cc="(?:\\ud83c[\\udde6-\\uddff]){2}",hc="[\\ud800-\\udbff][\\udc00-\\udfff]",Pm="\\u200d",uc=Cm+"?",dc="["+Em+"]?",Rm="(?:"+Pm+"(?:"+[lc,cc,hc].join("|")+")"+dc+uc+")*",Lm=dc+uc+Rm,Dm="(?:"+[lc+Po+"?",Po,cc,hc,Am].join("|")+")",fc=RegExp(Ro+"(?="+Ro+")|"+Dm+Lm,"g");function Im(l){for(var d=fc.lastIndex=0;fc.test(l);)++d;return d}var Om=Im;function Fm(l){return Eo(l)?Om(l):bm(l)}var pc=Fm,Nm=Math.ceil;function Bm(l,d){d=d===void 0?" ":Bl(d);var y=d.length;if(y<2)return y?oc(d,l):d;var w=oc(d,Nm(l/pc(d)));return Eo(d)?Vp(pm(w),0,l).join(""):w.slice(0,l)}var zm=Bm;function km(l,d,y){l=zl(l),d=Ep(d);var w=d?pc(l):0;return d&&w<d?zm(d-w,y)+l:l}var Cr=km;function Pr(){let l,d;const y=new Promise((I,G)=>{l=oe=>{I(oe),w.status="resolved"},d=oe=>{G(oe),w.status="rejected"}}),w={resolve:l,reject:d,promise:y,status:"pending"};return w}var Um=()=>{},fs=Um,Vm=L(Mt),Hm=class{constructor(l){this._ticker=l,M(this,"_stopPlayCallback",fs),M(this,"_state",new Vm.Atom({position:0,playing:!1})),M(this,"statePointer"),this.statePointer=this._state.pointer}destroy(){}pause(){this._stopPlayCallback(),this.playing=!1,this._stopPlayCallback=fs}gotoPosition(l){this._updatePositionInState(l)}_updatePositionInState(l){this._state.reduceState(["position"],()=>l)}getCurrentPosition(){return this._state.getState().position}get playing(){return this._state.getState().playing}set playing(l){this._state.setIn(["playing"],l)}play(l,d,y,w){this.playing&&this.pause(),this.playing=!0;const I=this._ticker,G=d[1]-d[0];{const et=this.getCurrentPosition();et<d[0]||et>d[1]?w==="normal"||w==="alternate"?this._updatePositionInState(d[0]):(w==="reverse"||w==="alternateReverse")&&this._updatePositionInState(d[1]):w==="normal"||w==="alternate"?et===d[1]&&this._updatePositionInState(d[0]):et===d[0]&&this._updatePositionInState(d[1])}const oe=Pr(),xe=I.time,Me=G*l;let Ee=this.getCurrentPosition()-d[0];(w==="reverse"||w==="alternateReverse")&&(Ee=d[1]-this.getCurrentPosition());const ke=et=>{const tt=Math.max(et-xe,0)/1e3,kt=Math.min(tt*y+Ee,Me);if(kt!==Me){const Un=Math.floor(kt/G);let Ut=kt/G%1*G;if(w!=="normal")if(w==="reverse")Ut=G-Ut;else{const di=Un%2===0;w==="alternate"?di||(Ut=G-Ut):di&&(Ut=G-Ut)}this._updatePositionInState(Ut+d[0]),$e()}else{if(w==="normal")this._updatePositionInState(d[1]);else if(w==="reverse")this._updatePositionInState(d[0]);else{const Un=(l-1)%2===0;w==="alternate"?Un?this._updatePositionInState(d[1]):this._updatePositionInState(d[0]):Un?this._updatePositionInState(d[0]):this._updatePositionInState(d[1])}this.playing=!1,oe.resolve(!0)}};this._stopPlayCallback=()=>{I.offThisOrNextTick(ke),I.offNextTick(ke),this.playing&&oe.resolve(!1)};const $e=()=>I.onNextTick(ke);return I.onThisOrNextTick(ke),oe.promise}},Gm=L(Mt),Wm=class{constructor(l,d,y,w){this._ticker=l,this._decodedBuffer=d,this._audioContext=y,this._nodeDestination=w,M(this,"_mainGain"),M(this,"_state",new Gm.Atom({position:0,playing:!1})),M(this,"statePointer"),M(this,"_stopPlayCallback",fs),this.statePointer=this._state.pointer,this._mainGain=this._audioContext.createGain(),this._mainGain.connect(this._nodeDestination)}get _playing(){return this._state.getState().playing}set _playing(l){this._state.setIn(["playing"],l)}destroy(){}pause(){this._stopPlayCallback(),this._playing=!1,this._stopPlayCallback=fs}gotoPosition(l){this._updatePositionInState(l)}_updatePositionInState(l){this._state.reduceState(["position"],()=>l)}getCurrentPosition(){return this._state.getState().position}play(l,d,y,w){this._playing&&this.pause(),this._playing=!0;const I=this._ticker;let G=this.getCurrentPosition();const oe=d[1]-d[0];if(w!=="normal")throw new ds(`Audio-controlled sequences can only be played in the "normal" direction. '${w}' given.`);G<d[0]||G>d[1]?this._updatePositionInState(d[0]):G===d[1]&&this._updatePositionInState(d[0]),G=this.getCurrentPosition();const xe=Pr(),Me=this._audioContext.createBufferSource();Me.buffer=this._decodedBuffer,Me.connect(this._mainGain),Me.playbackRate.value=y,l>1e3&&(console.warn("Audio-controlled sequences cannot have an iterationCount larger than 1000. It has been clamped to 1000."),l=1e3),l>1&&(Me.loop=!0,Me.loopStart=d[0],Me.loopEnd=d[1]);const Ee=I.time;let ke=G-d[0];const $e=oe*l;Me.start(0,G,$e-ke);const et=kt=>{const Ut=Math.max(kt-Ee,0)/1e3,di=Math.min(Ut*y+ke,$e);if(di!==$e){let ys=di/oe%1*oe;this._updatePositionInState(ys+d[0]),tt()}else this._updatePositionInState(d[1]),this._playing=!1,ut(),xe.resolve(!0)},ut=()=>{Me.stop(),Me.disconnect()};this._stopPlayCallback=()=>{ut(),I.offThisOrNextTick(et),I.offNextTick(et),this._playing&&xe.resolve(!1)};const tt=()=>I.onNextTick(et);return I.onThisOrNextTick(et),xe.promise}},jm=class{get type(){return"Theatre_Sequence_PublicAPI"}constructor(l){j(this,l)}play(l){if(W(this)._project.isReady())return W(this).play(l);{const d=Pr();return d.resolve(!0),d.promise}}pause(){W(this).pause()}get position(){return W(this).position}set position(l){W(this).position=l}async attachAudio(l){const{audioContext:d,destinationNode:y,decodedBuffer:w,gainNode:I}=await qm(l),G=new Wm(Ar,w,d,I);return W(this).replacePlaybackController(G),{audioContext:d,destinationNode:y,decodedBuffer:w,gainNode:I}}get pointer(){return W(this).pointer}};async function qm(l){function d(){if(l.audioContext)return Promise.resolve(l.audioContext);const Ee=new AudioContext;return Ee.state==="running"?Promise.resolve(Ee):new Promise(ke=>{const $e=()=>{Ee.resume()},et=["mousedown","keydown","touchstart"],ut={capture:!0,passive:!1};et.forEach(tt=>{window.addEventListener(tt,$e,ut)}),Ee.addEventListener("statechange",()=>{Ee.state==="running"&&(et.forEach(tt=>{window.removeEventListener(tt,$e,ut)}),ke(Ee))})})}async function y(){if(l.source instanceof AudioBuffer)return l.source;const Ee=Pr();if(typeof l.source!="string")throw new Error("Error validating arguments to sequence.attachAudio(). args.source must either be a string or an instance of AudioBuffer.");let ke;try{ke=await fetch(l.source)}catch(tt){throw console.error(tt),new Error(`Could not fetch '${l.source}'. Network error logged above.`)}let $e;try{$e=await ke.arrayBuffer()}catch(tt){throw console.error(tt),new Error(`Could not read '${l.source}' as an arrayBuffer.`)}(await w).decodeAudioData($e,Ee.resolve,Ee.reject);let ut;try{ut=await Ee.promise}catch(tt){throw console.error(tt),new Error(`Could not decode ${l.source} as an audio file.`)}return ut}const w=d(),I=y(),[G,oe]=await Promise.all([w,I]),xe=l.destinationNode||G.destination,Me=G.createGain();return Me.connect(xe),{audioContext:G,decodedBuffer:oe,gainNode:Me,destinationNode:xe}}var Xm=class{constructor(l,d,y,w,I){this._project=l,this._sheet=d,this._lengthD=y,this._subUnitsPerUnitD=w,M(this,"address"),M(this,"publicApi"),M(this,"_playbackControllerBox"),M(this,"_statePointerDerivation"),M(this,"_positionD"),M(this,"_positionFormatterD"),M(this,"_playableRangeD"),M(this,"pointer",(0,cp.pointer)({root:this,path:[]})),M(this,"$$isIdentityDerivationProvider",!0),M(this,"closestGridPosition",G=>{const oe=this.subUnitsPerUnit,xe=1/oe;return parseFloat((Math.round(G/xe)*xe).toFixed(3))}),this.address=g(p({},this._sheet.address),{sequenceName:"default"}),this.publicApi=new jm(this),this._playbackControllerBox=new jt.Box(I!=null?I:new Hm(Ar)),this._statePointerDerivation=this._playbackControllerBox.derivation.map(G=>G.statePointer),this._positionD=this._statePointerDerivation.flatMap(G=>(0,jt.valueDerivation)(G.position)),this._positionFormatterD=this._subUnitsPerUnitD.map(G=>new Ym(G))}getIdentityDerivation(l){if(l.length===0)return(0,jt.prism)(()=>({length:(0,jt.val)(this.pointer.length),playing:(0,jt.val)(this.pointer.playing),position:(0,jt.val)(this.pointer.position)}));if(l.length>1)return(0,jt.prism)(()=>{});const[d]=l;return d==="length"?this._lengthD:d==="position"?this._positionD:d==="playing"?(0,jt.prism)(()=>(0,jt.val)(this._statePointerDerivation.getValue().playing)):(0,jt.prism)(()=>{})}get positionFormatter(){return this._positionFormatterD.getValue()}get derivationToStatePointer(){return this._statePointerDerivation}get length(){return this._lengthD.getValue()}get positionDerivation(){return this._positionD}get position(){return this._playbackControllerBox.get().getCurrentPosition()}get subUnitsPerUnit(){return this._subUnitsPerUnitD.getValue()}get positionSnappedToGrid(){return this.closestGridPosition(this.position)}set position(l){let d=l;this.pause(),d>this.length&&(d=this.length);const y=this.length;this._playbackControllerBox.get().gotoPosition(d>y?y:d)}getDurationCold(){return this._lengthD.getValue()}get playing(){return(0,jt.val)(this._playbackControllerBox.get().statePointer.playing)}_makeRangeFromSequenceTemplate(){return(0,jt.prism)(()=>[0,(0,jt.val)(this._lengthD)])}async play(l){const d=this.length,y=l&&l.range?l.range:[0,d],w=l&&typeof l.iterationCount=="number"?l.iterationCount:1,I=l&&typeof l.rate!="undefined"?l.rate:1,G=l&&l.direction?l.direction:"normal";return await this._play(w,[y[0],y[1]],I,G)}_play(l,d,y,w){return this._playbackControllerBox.get().play(l,d,y,w)}pause(){this._playbackControllerBox.get().pause()}replacePlaybackController(l){this.pause();const d=this._playbackControllerBox.get();this._playbackControllerBox.set(l);const y=d.getCurrentPosition();d.destroy(),l.gotoPosition(y)}},Ym=class{constructor(l){this._fps=l}formatSubUnitForGrid(l){const d=l%1,y=1/this._fps;return Math.round(d/y)+"f"}formatFullUnitForGrid(l){let d=l,y="";d>=Li&&(y+=Math.floor(d/Li)+"h",d=d%Li),d>=li&&(y+=Math.floor(d/li)+"m",d=d%li),d>=ai&&(y+=Math.floor(d/ai)+"s",d=d%ai);const w=1/this._fps;return d>=w&&(y+=Math.floor(d/w)+"f",d=d%w),y.length===0?"0s":y}formatForPlayhead(l){let d=l,y="";if(d>=Li){const I=Math.floor(d/Li);y+=Cr(I.toString(),2,"0")+"h",d=d%Li}if(d>=li){const I=Math.floor(d/li);y+=Cr(I.toString(),2,"0")+"m",d=d%li}else y.length>0&&(y+="00m");if(d>=ai){const I=Math.floor(d/ai);y+=Cr(I.toString(),2,"0")+"s",d=d%ai}else y+="00s";const w=1/this._fps;if(d>=w){const I=Math.round(d/w);y+=Cr(I.toString(),2,"0")+"f",d=d%w}else d/w>.98?(y+=Cr(1 .toString(),2,"0")+"f",d=d%w):y+="00f";return y.length===0?"00s00f":y}formatBasic(l){return l.toFixed(2)+"s"}},ai=1,li=ai*60,Li=li*60,Lo={};b(Lo,{boolean:()=>yc,compound:()=>Do,number:()=>vc,string:()=>xc,stringLiteral:()=>Km});function mc(l,d){return l.length<=d?l:l.substr(0,d-3)+"..."}var Jm=l=>typeof l=="string"?`string("${mc(l,10)}")`:typeof l=="number"?`number(${mc(String(l),10)})`:l===null?"null":l===void 0?"undefined":typeof l=="boolean"?String(l):Array.isArray(l)?"array":typeof l=="object"?"object":"unknown",gc=Jm,Di=Symbol("TheatrePropType_Basic");function _c(l){return typeof l=="object"&&!!l&&l[Di]==="TheatrePropType"}function $m(l){if(typeof l=="number")return vc(l);if(typeof l=="boolean")return yc(l);if(typeof l=="string")return xc(l);if(typeof l=="object"&&!!l){if(_c(l))return l;if(Bp(l))return Do(l);throw new ds(`This value is not a valid prop type: ${gc(l)}`)}else throw new ds(`This value is not a valid prop type: ${gc(l)}`)}function Zm(l){const d={};for(const y of Object.keys(l)){const w=l[y];_c(w)?d[y]=w:d[y]=$m(w)}return d}var Do=(l,d)=>({type:"compound",props:Zm(l),valueType:null,[Di]:"TheatrePropType",label:d==null?void 0:d.label}),vc=(l,d)=>{var y;return g(p({type:"number",valueType:0,default:l,[Di]:"TheatrePropType"},d||{}),{label:d==null?void 0:d.label,nudgeFn:(y=d==null?void 0:d.nudgeFn)!=null?y:Qm,nudgeMultiplier:typeof(d==null?void 0:d.nudgeMultiplier)=="number"?d.nudgeMultiplier:1})},yc=(l,d)=>({type:"boolean",default:l,valueType:null,[Di]:"TheatrePropType",label:d==null?void 0:d.label}),xc=(l,d)=>({type:"string",default:l,valueType:null,[Di]:"TheatrePropType",label:d==null?void 0:d.label});function Km(l,d,y){var w;return{type:"stringLiteral",default:l,options:p({},d),[Di]:"TheatrePropType",valueType:null,as:(w=y==null?void 0:y.as)!=null?w:"menu",label:y==null?void 0:y.label}}var Qm=({config:l,deltaX:d,deltaFraction:y,magnitude:w})=>{const{range:I}=l;return I?y*(I[1]-I[0])*w*l.nudgeMultiplier:d*w*l.nudgeMultiplier},eg=l=>l.replace(/^[\s\/]*/,"").replace(/[\s\/]*$/,"").replace(/\s*\/\s*/," / ");function bc(l,d){return eg(l)}L(T());var tg=class{get type(){return"Theatre_Sheet_PublicAPI"}constructor(l){j(this,l)}object(l,d){const y=W(this),w=bc(l),I=y.getObject(w),G=null;if(I)return I.publicApi;{const oe=Do(d);return y.createObject(w,G,oe).publicApi}}get sequence(){return W(this).getSequence().publicApi}get project(){return W(this).project.publicApi}get address(){return p({},W(this).address)}},Io=L(Mt),ng=class{constructor(l,d){this.template=l,this.instanceId=d,M(this,"_objects",new Io.Atom({})),M(this,"_sequence"),M(this,"address"),M(this,"publicApi"),M(this,"project"),M(this,"objectsP",this._objects.pointer),M(this,"type","Theatre_Sheet"),this.project=l.project,this.address=g(p({},l.address),{sheetInstanceId:this.instanceId}),this.publicApi=new tg(this)}createObject(l,d,y){const I=this.template.getObjectTemplate(l,d,y).createInstance(this,d,y);return this._objects.setIn([l],I),I}getObject(l){return this._objects.getState()[l]}getSequence(){if(!this._sequence){const l=(0,Io.valueDerivation)(this.project.pointers.historic.sheetsById[this.address.sheetId].sequence.length).map(y=>typeof y=="number"?y:10),d=(0,Io.valueDerivation)(this.project.pointers.historic.sheetsById[this.address.sheetId].sequence.subUnitsPerUnit).map(y=>typeof y=="number"?y:30);this._sequence=new Xm(this.template.project,this,l,d)}return this._sequence}},ig=class{constructor(l,d){this.project=l,M(this,"type","Theatre_SheetTemplate"),M(this,"address"),M(this,"_instances",new $l.Atom({})),M(this,"instancesP",this._instances.pointer),M(this,"_objectTemplates",new $l.Atom({})),M(this,"objectTemplatesP",this._objectTemplates.pointer),this.address=g(p({},l.address),{sheetId:d})}getInstance(l){let d=this._instances.getState()[l];return d||(d=new ng(this,l),this._instances.setIn([l],d)),d}getObjectTemplate(l,d,y){let w=this._objectTemplates.getState()[l];return w||(w=new ap(this,l,d,y),this._objectTemplates.setIn([l],w)),w}},Oo=L(Mt),wc=L(Mt),rg=l=>new Promise(d=>setTimeout(d,l)),sg=rg;function en(l){for(var d=arguments.length,y=Array(d>1?d-1:0),w=1;w<d;w++)y[w-1]=arguments[w];throw Error("[Immer] minified error nr: "+l+(y.length?" "+y.map(function(I){return"'"+I+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function ci(l){return!!l&&!!l[zt]}function hi(l){return!!l&&(function(d){if(!d||typeof d!="object")return!1;var y=Object.getPrototypeOf(d);if(y===null)return!0;var w=Object.hasOwnProperty.call(y,"constructor")&&y.constructor;return w===Object||typeof w=="function"&&Function.toString.call(w)===pg}(l)||Array.isArray(l)||!!l[Dc]||!!l.constructor[Dc]||No(l)||Bo(l))}function og(l){return ci(l)||en(23,l),l[zt].t}function Rr(l,d,y){y===void 0&&(y=!1),Ii(l)===0?(y?Object.keys:Jo)(l).forEach(function(w){y&&typeof w=="symbol"||d(w,l[w],l)}):l.forEach(function(w,I){return d(I,w,l)})}function Ii(l){var d=l[zt];return d?d.i>3?d.i-4:d.i:Array.isArray(l)?1:No(l)?2:Bo(l)?3:0}function Fo(l,d){return Ii(l)===2?l.has(d):Object.prototype.hasOwnProperty.call(l,d)}function ag(l,d){return Ii(l)===2?l.get(d):l[d]}function Mc(l,d,y){var w=Ii(l);w===2?l.set(d,y):w===3?(l.delete(d),l.add(y)):l[d]=y}function lg(l,d){return l===d?l!==0||1/l==1/d:l!=l&&d!=d}function No(l){return dg&&l instanceof Map}function Bo(l){return fg&&l instanceof Set}function ui(l){return l.o||l.t}function zo(l){if(Array.isArray(l))return Array.prototype.slice.call(l);var d=mg(l);delete d[zt];for(var y=Jo(d),w=0;w<y.length;w++){var I=y[w],G=d[I];G.writable===!1&&(G.writable=!0,G.configurable=!0),(G.get||G.set)&&(d[I]={configurable:!0,writable:!0,enumerable:G.enumerable,value:l[I]})}return Object.create(Object.getPrototypeOf(l),d)}function ko(l,d){return d===void 0&&(d=!1),Uo(l)||ci(l)||!hi(l)||(Ii(l)>1&&(l.set=l.add=l.clear=l.delete=cg),Object.freeze(l),d&&Rr(l,function(y,w){return ko(w,!0)},!0)),l}function cg(){en(2)}function Uo(l){return l==null||typeof l!="object"||Object.isFrozen(l)}function Tn(l){var d=gg[l];return d||en(18,l),d}function Sc(){return Lr}function Vo(l,d){d&&(Tn("Patches"),l.u=[],l.s=[],l.v=d)}function ps(l){Ho(l),l.p.forEach(hg),l.p=null}function Ho(l){l===Lr&&(Lr=l.l)}function Tc(l){return Lr={p:[],l:Lr,h:l,m:!0,_:0}}function hg(l){var d=l[zt];d.i===0||d.i===1?d.j():d.O=!0}function Go(l,d){d._=d.p.length;var y=d.p[0],w=l!==void 0&&l!==y;return d.h.g||Tn("ES5").S(d,l,w),w?(y[zt].P&&(ps(d),en(4)),hi(l)&&(l=ms(d,l),d.l||gs(d,l)),d.u&&Tn("Patches").M(y[zt],l,d.u,d.s)):l=ms(d,y,[]),ps(d),d.u&&d.v(d.u,d.s),l!==Lc?l:void 0}function ms(l,d,y){if(Uo(d))return d;var w=d[zt];if(!w)return Rr(d,function(G,oe){return Ec(l,w,d,G,oe,y)},!0),d;if(w.A!==l)return d;if(!w.P)return gs(l,w.t,!0),w.t;if(!w.I){w.I=!0,w.A._--;var I=w.i===4||w.i===5?w.o=zo(w.k):w.o;Rr(w.i===3?new Set(I):I,function(G,oe){return Ec(l,w,I,G,oe,y)}),gs(l,I,!1),y&&l.u&&Tn("Patches").R(w,y,l.u,l.s)}return w.o}function Ec(l,d,y,w,I,G){if(ci(I)){var oe=ms(l,I,G&&d&&d.i!==3&&!Fo(d.D,w)?G.concat(w):void 0);if(Mc(y,w,oe),!ci(oe))return;l.m=!1}if(hi(I)&&!Uo(I)){if(!l.h.F&&l._<1)return;ms(l,I),d&&d.A.l||gs(l,I)}}function gs(l,d,y){y===void 0&&(y=!1),l.h.F&&l.m&&ko(d,y)}function Wo(l,d){var y=l[zt];return(y?ui(y):l)[d]}function Ac(l,d){if(d in l)for(var y=Object.getPrototypeOf(l);y;){var w=Object.getOwnPropertyDescriptor(y,d);if(w)return w;y=Object.getPrototypeOf(y)}}function jo(l){l.P||(l.P=!0,l.l&&jo(l.l))}function qo(l){l.o||(l.o=zo(l.t))}function Xo(l,d,y){var w=No(d)?Tn("MapSet").N(d,y):Bo(d)?Tn("MapSet").T(d,y):l.g?function(I,G){var oe=Array.isArray(I),xe={i:oe?1:0,A:G?G.A:Sc(),P:!1,I:!1,D:{},l:G,t:I,k:null,o:null,j:null,C:!1},Me=xe,Ee=_s;oe&&(Me=[xe],Ee=vs);var ke=Proxy.revocable(Me,Ee),$e=ke.revoke,et=ke.proxy;return xe.k=et,xe.j=$e,et}(d,y):Tn("ES5").J(d,y);return(y?y.A:Sc()).p.push(w),w}function ug(l){return ci(l)||en(22,l),function d(y){if(!hi(y))return y;var w,I=y[zt],G=Ii(y);if(I){if(!I.P&&(I.i<4||!Tn("ES5").K(I)))return I.t;I.I=!0,w=Cc(y,G),I.I=!1}else w=Cc(y,G);return Rr(w,function(oe,xe){I&&ag(I.t,oe)===xe||Mc(w,oe,d(xe))}),G===3?new Set(w):w}(l)}function Cc(l,d){switch(d){case 2:return new Map(l);case 3:return Array.from(l)}return zo(l)}var Pc,Lr,Yo=typeof Symbol!="undefined"&&typeof Symbol("x")=="symbol",dg=typeof Map!="undefined",fg=typeof Set!="undefined",Rc=typeof Proxy!="undefined"&&Proxy.revocable!==void 0&&typeof Reflect!="undefined",Lc=Yo?Symbol.for("immer-nothing"):((Pc={})["immer-nothing"]=!0,Pc),Dc=Yo?Symbol.for("immer-draftable"):"__$immer_draftable",zt=Yo?Symbol.for("immer-state"):"__$immer_state",pg=""+Object.prototype.constructor,Jo=typeof Reflect!="undefined"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(l){return Object.getOwnPropertyNames(l).concat(Object.getOwnPropertySymbols(l))}:Object.getOwnPropertyNames,mg=Object.getOwnPropertyDescriptors||function(l){var d={};return Jo(l).forEach(function(y){d[y]=Object.getOwnPropertyDescriptor(l,y)}),d},gg={},_s={get:function(l,d){if(d===zt)return l;var y=ui(l);if(!Fo(y,d))return function(I,G,oe){var xe,Me=Ac(G,oe);return Me?"value"in Me?Me.value:(xe=Me.get)===null||xe===void 0?void 0:xe.call(I.k):void 0}(l,y,d);var w=y[d];return l.I||!hi(w)?w:w===Wo(l.t,d)?(qo(l),l.o[d]=Xo(l.A.h,w,l)):w},has:function(l,d){return d in ui(l)},ownKeys:function(l){return Reflect.ownKeys(ui(l))},set:function(l,d,y){var w=Ac(ui(l),d);if(w!=null&&w.set)return w.set.call(l.k,y),!0;if(!l.P){var I=Wo(ui(l),d),G=I==null?void 0:I[zt];if(G&&G.t===y)return l.o[d]=y,l.D[d]=!1,!0;if(lg(y,I)&&(y!==void 0||Fo(l.t,d)))return!0;qo(l),jo(l)}return l.o[d]===y&&typeof y!="number"&&(y!==void 0||d in l.o)||(l.o[d]=y,l.D[d]=!0,!0)},deleteProperty:function(l,d){return Wo(l.t,d)!==void 0||d in l.t?(l.D[d]=!1,qo(l),jo(l)):delete l.D[d],l.o&&delete l.o[d],!0},getOwnPropertyDescriptor:function(l,d){var y=ui(l),w=Reflect.getOwnPropertyDescriptor(y,d);return w&&{writable:!0,configurable:l.i!==1||d!=="length",enumerable:w.enumerable,value:y[d]}},defineProperty:function(){en(11)},getPrototypeOf:function(l){return Object.getPrototypeOf(l.t)},setPrototypeOf:function(){en(12)}},vs={};Rr(_s,function(l,d){vs[l]=function(){return arguments[0]=arguments[0][0],d.apply(this,arguments)}}),vs.deleteProperty=function(l,d){return _s.deleteProperty.call(this,l[0],d)},vs.set=function(l,d,y){return _s.set.call(this,l[0],d,y,l[0])};var _g=function(){function l(y){var w=this;this.g=Rc,this.F=!0,this.produce=function(I,G,oe){if(typeof I=="function"&&typeof G!="function"){var xe=G;G=I;var Me=w;return function(ut){var tt=this;ut===void 0&&(ut=xe);for(var kt=arguments.length,Un=Array(kt>1?kt-1:0),Ut=1;Ut<kt;Ut++)Un[Ut-1]=arguments[Ut];return Me.produce(ut,function(di){var ys;return(ys=G).call.apply(ys,[tt,di].concat(Un))})}}var Ee;if(typeof G!="function"&&en(6),oe!==void 0&&typeof oe!="function"&&en(7),hi(I)){var ke=Tc(w),$e=Xo(w,I,void 0),et=!0;try{Ee=G($e),et=!1}finally{et?ps(ke):Ho(ke)}return typeof Promise!="undefined"&&Ee instanceof Promise?Ee.then(function(ut){return Vo(ke,oe),Go(ut,ke)},function(ut){throw ps(ke),ut}):(Vo(ke,oe),Go(Ee,ke))}if(!I||typeof I!="object")return(Ee=G(I))===Lc?void 0:(Ee===void 0&&(Ee=I),w.F&&ko(Ee,!0),Ee);en(21,I)},this.produceWithPatches=function(I,G){return typeof I=="function"?function(Me){for(var Ee=arguments.length,ke=Array(Ee>1?Ee-1:0),$e=1;$e<Ee;$e++)ke[$e-1]=arguments[$e];return w.produceWithPatches(Me,function(et){return I.apply(void 0,[et].concat(ke))})}:[w.produce(I,G,function(Me,Ee){oe=Me,xe=Ee}),oe,xe];var oe,xe},typeof(y==null?void 0:y.useProxies)=="boolean"&&this.setUseProxies(y.useProxies),typeof(y==null?void 0:y.autoFreeze)=="boolean"&&this.setAutoFreeze(y.autoFreeze)}var d=l.prototype;return d.createDraft=function(y){hi(y)||en(8),ci(y)&&(y=ug(y));var w=Tc(this),I=Xo(this,y,void 0);return I[zt].C=!0,Ho(w),I},d.finishDraft=function(y,w){var I=y&&y[zt],G=I.A;return Vo(G,w),Go(void 0,G)},d.setAutoFreeze=function(y){this.F=y},d.setUseProxies=function(y){y&&!Rc&&en(20),this.g=y},d.applyPatches=function(y,w){var I;for(I=w.length-1;I>=0;I--){var G=w[I];if(G.path.length===0&&G.op==="replace"){y=G.value;break}}var oe=Tn("Patches").$;return ci(y)?oe(y,w):this.produce(y,function(xe){return oe(xe,w.slice(I+1))})},l}(),qt=new _g;qt.produce,qt.produceWithPatches.bind(qt),qt.setAutoFreeze.bind(qt),qt.setUseProxies.bind(qt),qt.applyPatches.bind(qt),qt.createDraft.bind(qt),qt.finishDraft.bind(qt);var vg={currentProjectStateDefinitionVersion:"0.4.0"},$o=vg;async function yg(l,d,y){await sg(0),l.transaction(({drafts:w})=>{var I;const G=d.address.projectId;w.ephemeral.coreByProject[G]={lastExportedObject:null,loadingState:{type:"loading"}},w.ahistoric.coreByProject[G]={ahistoricStuff:""};function oe(){w.ephemeral.coreByProject[G].loadingState={type:"loaded"},w.historic.coreByProject[G]={sheetsById:{},definitionVersion:$o.currentProjectStateDefinitionVersion,revisionHistory:[]}}function xe($e){w.ephemeral.coreByProject[G].loadingState={type:"loaded"},w.historic.coreByProject[G]=$e}function Me(){w.ephemeral.coreByProject[G].loadingState={type:"loaded"}}function Ee($e){w.ephemeral.coreByProject[G].loadingState={type:"browserStateIsNotBasedOnDiskState",onDiskState:$e}}const ke=(I=og(w.historic))==null?void 0:I.coreByProject[d.address.projectId];ke?y&&ke.revisionHistory.indexOf(y.revisionHistory[0])==-1?Ee(y):Me():y?xe(y):oe()})}var xg=class{constructor(l,d={},y){this.config=d,this.publicApi=y,M(this,"pointers"),M(this,"_pointerProxies"),M(this,"address"),M(this,"_readyDeferred"),M(this,"_sheetTemplates",new wc.Atom({})),M(this,"sheetTemplatesP",this._sheetTemplates.pointer),M(this,"_studio"),M(this,"type","Theatre_Project");var w;this.address={projectId:l};const I=new wc.Atom({ahistoric:{ahistoricStuff:""},historic:(w=d.state)!=null?w:{sheetsById:{},definitionVersion:$o.currentProjectStateDefinitionVersion,revisionHistory:[]},ephemeral:{loadingState:{type:"loaded"},lastExportedObject:null}});this._pointerProxies={historic:new Oo.PointerProxy(I.pointer.historic),ahistoric:new Oo.PointerProxy(I.pointer.ahistoric),ephemeral:new Oo.PointerProxy(I.pointer.ephemeral)},this.pointers={historic:this._pointerProxies.historic.pointer,ahistoric:this._pointerProxies.ahistoric.pointer,ephemeral:this._pointerProxies.ephemeral.pointer},ce.add(l,this),this._readyDeferred=Pr(),d.state?setTimeout(()=>{this._studio||this._readyDeferred.resolve(void 0)},0):setTimeout(()=>{if(!this._studio)throw new Error(`Argument config.state in Theatre.getProject("${l}", config) is empty. This is fine while you are using @theatre/core along with @theatre/sutdio. But since @theatre/studio is not loaded, the state of project "${l}" will be empty.

To fix this, you need to add @theatre/studio into the bundle and export the projet's state. Learn how to do that at https://docs.theatrejs.com/in-depth/#exporting`)},1e3)}attachToStudio(l){if(this._studio){if(this._studio!==l)throw new Error(`Project ${this.address.projectId} is already attached to studio ${this._studio.address.studioId}`);console.warn(`Project ${this.address.projectId} is already attached to studio ${this._studio.address.studioId}`);return}this._studio=l,l.initialized.then(async()=>{await yg(l,this,this.config.state),this._pointerProxies.historic.setPointer(l.atomP.historic.coreByProject[this.address.projectId]),this._pointerProxies.ahistoric.setPointer(l.atomP.ahistoric.coreByProject[this.address.projectId]),this._pointerProxies.ephemeral.setPointer(l.atomP.ephemeral.coreByProject[this.address.projectId]),this._readyDeferred.resolve(void 0)})}get isAttachedToStudio(){return!!this._studio}get ready(){return this._readyDeferred.promise}isReady(){return this._readyDeferred.status==="resolved"}getOrCreateSheet(l,d="default"){let y=this._sheetTemplates.getState()[l];return y||(y=new ig(this,l),this._sheetTemplates.setIn([l],y)),y.getInstance(d)}},bg=class{get type(){return"Theatre_Project_PublicAPI"}constructor(l,d={}){j(this,new xg(l,d,this))}get ready(){return W(this).ready}get isReady(){return W(this).isReady()}get address(){return p({},W(this).address)}sheet(l,d="default"){const y=bc(l);return W(this).getOrCreateSheet(y,d).publicApi}};L(T());var Ic=L(Mt),Zo=L(Mt);function Oc(l,d={}){const y=_(d,[]),w=ce.get(l);return w?w.publicApi:(d.state&&Mg(l,d.state),new bg(l,y))}var wg=(l,d)=>{if(Array.isArray(d)||d==null||d.definitionVersion!==$o.currentProjectStateDefinitionVersion)throw new ds(`Error validating conf.state in Theatre.getProject(${JSON.stringify(l)}, conf). The state seems to be formatted in a way that is unreadable to Theatre.js. Read more at https://docs.theatrejs.com`)},Mg=(l,d)=>{wg(l,d)};function Fc(l,d){if((0,Ic.isPointer)(l))return(0,Zo.valueDerivation)(l).tapImmediate(Ar,d);if((0,Zo.isDerivation)(l))return l.tapImmediate(Ar,d);throw new Error("Called onChange(p) where p is neither a pointer nor a derivation.")}function Nc(l){if((0,Ic.isPointer)(l))return(0,Zo.valueDerivation)(l).getValue();throw new Error("Called val(p) where p is not a pointer.")}var Sg="__TheatreJS_StudioBundle",Ko="__TheatreJS_CoreBundle",Tg=class{constructor(){M(this,"_studio")}get type(){return"Theatre_CoreBundle"}get version(){return"0.4.7"}getBitsForStudio(l,d){if(this._studio)throw new Error("@theatre/core is already attached to @theatre/studio");this._studio=l;const y={projectsP:ce.atom.pointer.projects,privateAPI:W,coreExports:O};d(y)}};Eg();function Eg(){if(typeof window=="undefined")return;const l=window[Ko];if(typeof l!="undefined")throw typeof l=="object"&&l&&typeof l.version=="string"?new Error(`It seems that the module '@theatre/core' is loaded more than once. This could have two possible causes:
1. You might have two separate versions of theatre in node_modules.
2. Or this might be a bundling misconfiguration, in case you're using a bundler like Webpack/ESBuild/Rollup.

Note that it **is okay** to import '@theatre/core' multiple times. But those imports should point to the same module.`):new Error(`The variable window.${Ko} seems to be already set by a module other than @theatre/core.`);const d=new Tg;window[Ko]=d;const y=window[Sg];y&&y!==null&&y.type==="Theatre_StudioBundle"&&y.registerCoreBundle(d)}/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */})(Tu);const x_={truck:{staticOverrides:{byObject:{bg:{bg:{x:-65,layer2:{x:59},layer3:{x:60},layer4:{x:110}},satellite:{x:-30,rotate:-53}},text:{text2:{opacity:1}}}},sequence:{subUnitsPerUnit:30,length:8,type:"PositionalSequence",tracksByObject:{"First Object":{trackData:{nqQOo_RXsN:{type:"BasicKeyframedTrack",keyframes:[{id:"FC4Wpq3T3O",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:0},{id:"KI6Kb-MQFU",position:4,connectedRight:!0,handles:[.5,1,.5,0],value:100}]}},trackIdByPropPath:{'["bg","x"]':"nqQOo_RXsN"}},bg:{trackData:{haDc3jqP6o:{type:"BasicKeyframedTrack",keyframes:[{id:"3M3eNJaqOT",position:0,connectedRight:!0,handles:[.5,1,0,0],value:150},{id:"K-UHKX727m",position:2,connectedRight:!0,handles:[1,.9409620991253644,0,.04591836734693877],value:80},{id:"YyPk8zWKq2",position:4,connectedRight:!0,handles:[.998098275461288,.9540816326530612,0,-.03935860058309035],value:20},{id:"YXZpPO5cvL",position:6,connectedRight:!0,handles:[.9995462355643716,1.0196793002915452,.0019017245387136783,-.05903790087463557],value:-50},{id:"LHP3jprSBr",position:8,connectedRight:!0,handles:[.9995462355643714,1.0393586005830904,.5,0],value:-120}]},"ps_SetQ-4t":{type:"BasicKeyframedTrack",keyframes:[{id:"KR3bxs8Qhe",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:100},{id:"ufPUsurO3J",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:50}]},YUAlKMiMmh:{type:"BasicKeyframedTrack",keyframes:[{id:"xAvG8Lq7C8",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:100},{id:"hV-bQodEsy",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:50}]},PXEfN_TuDK:{type:"BasicKeyframedTrack",keyframes:[{id:"QTS0OZZbVc",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:100},{id:"3NgZ3yXTlm",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:50}]},o2f8zYP45D:{type:"BasicKeyframedTrack",keyframes:[{id:"mh7EYUPtBc",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:100},{id:"yiLpEzga41",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:50}]},"8NUMHf9tOy":{type:"BasicKeyframedTrack",keyframes:[{id:"EC6Ioudwnn",position:0,connectedRight:!0,handles:[.5,1,.00024100457388259722,0],value:.5},{id:"OGpTVBwsJE",position:2,connectedRight:!0,handles:[.9997589954261172,1.0051020408163265,.5,0],value:1}]},oaEDCspGnS:{type:"BasicKeyframedTrack",keyframes:[{id:"esvvc2-vSk",position:0,connectedRight:!0,handles:[.5,1,.0037731213145063003,.0051020408163265085],value:0},{id:"-oww6GYfP8",position:2,connectedRight:!0,handles:[1,.9948979591836735,.5,0],value:.3}]},Gr0LdOhQIE:{type:"BasicKeyframedTrack",keyframes:[{id:"ZWYNjVdcQs",position:1,connectedRight:!0,handles:[.5,1,.5,0],value:1}]},"5bJf8NY_YH":{type:"BasicKeyframedTrack",keyframes:[{id:"G-g4TXugBR",position:2.933,connectedRight:!0,handles:[.5,1,0,.01020408163265306],value:1},{id:"DZbtKT2sdk",position:3.033,connectedRight:!0,handles:[1,1.0204081632653061,.5,0],value:.3},{id:"22M_XlH0zY",position:5.267,connectedRight:!0,handles:[.5,1,.005701201906002318,.010412328196584757],value:.3},{id:"L8-oVLxMVE",position:5.433,connectedRight:!0,handles:[1,1.0052061640982923,.5,0],value:1}]},eCXD9ex29X:{type:"BasicKeyframedTrack",keyframes:[{id:"MnajZ2KWhj",position:2.833,connectedRight:!0,handles:[.5,1,.0022841669868194914,-.011194029850746268],value:1},{id:"hoeWJInyGW",position:2.933,connectedRight:!0,handles:[1,.9924537758966362,.5,0],value:.3},{id:"vRUejPb5iq",position:5.433,connectedRight:!0,handles:[.5,1,0,0],value:.3},{id:"AGjBTQo1o1",position:5.633,connectedRight:!0,handles:[1,1.0103183064270485,.5,0],value:1}]},kNnqAVNC17:{type:"BasicKeyframedTrack",keyframes:[{id:"R1vKImrTyT",position:2.4,connectedRight:!0,handles:[.5,1,.03125,-.003731343283582089],value:1.0026119402985074},{id:"hzRuURakxz",position:2.5,connectedRight:!0,handles:[1,.988764201381154,.5,0],value:.3},{id:"oCz6JEoVz1",position:5.633,connectedRight:!0,handles:[.5,1,0,-.010280373566223104],value:.3},{id:"smfGDocM5F",position:5.9,connectedRight:!0,handles:[.993499510789315,.9886482260291397,.5,0],value:1}]},IPSdPYL7DN:{type:"BasicKeyframedTrack",keyframes:[{id:"zdUcgOWoiz",position:2.8,connectedRight:!0,handles:[.5,1,.5,0],value:255},{id:"EgmzEP8Sl_",position:3.167,connectedRight:!0,handles:[.5,1,.5,0],value:255},{id:"tIDDCb0LEg",position:5,connectedRight:!0,handles:[.5,1,.0020033737158165477,0],value:255},{id:"sC10hPgvF4",position:5.633,connectedRight:!0,handles:[1,.9897959183673469,.5,0],value:0}]},N5eaqswyHt:{type:"BasicKeyframedTrack",keyframes:[{id:"3SwOrYM9_G",position:2.8,connectedRight:!0,handles:[.5,1,0,.005154102457309453],value:255},{id:"hkkLBXDnn2",position:3.167,connectedRight:!0,handles:[1,1,.5,0],value:0},{id:"DwdCf1qBor",position:5,connectedRight:!0,handles:[.5,1,0,0],value:0},{id:"kXw62ec1GF",position:5.633,connectedRight:!0,handles:[1,1.010204081632653,.5,0],value:255}]},cP1FwHRSrS:{type:"BasicKeyframedTrack",keyframes:[{id:"oTfewSWoWU",position:2.8,connectedRight:!0,handles:[.5,1,.0006039404554925576,-.02040816326530612],value:255},{id:"Xp6R9QAr3J",position:3.167,connectedRight:!0,handles:[1,1,.5,0],value:0}]},mxtbk8nV4P:{type:"BasicKeyframedTrack",keyframes:[{id:"wZ4ZhIJopz",position:3,connectedRight:!0,handles:[.5,1,0,-.00510204081632653],value:0},{id:"FSOG0xs9t1",position:4,connectedRight:!0,handles:[.999313856332815,.989743856726364,.0018980705029443823,0],value:1},{id:"v1mTk-ZVGD",position:5,connectedRight:!0,handles:[1,1.005128071636818,.5,0],value:0}]},J4qFprbHc9:{type:"BasicKeyframedTrack",keyframes:[{id:"5Jaq6LC9Nh",position:3,connectedRight:!0,handles:[.5,1,0,.010256408894253246],value:0},{id:"JxwnUXKuH3",position:4,connectedRight:!0,handles:[.9956780758255357,1.005128071636818,.0006861436671862786,-.005102040816326529],value:.8},{id:"S8JRDawXeg",position:5,connectedRight:!0,handles:[1,.9897959183673469,.5,0],value:0}]},diUqDYmBHs:{type:"BasicKeyframedTrack",keyframes:[{id:"YmA2-G9Vbx",position:6,connectedRight:!0,handles:[.5,1,.5,0],value:-16}]},e8hn74xke5:{type:"BasicKeyframedTrack",keyframes:[{id:"hEnNSh5X5L",position:5.067,connectedRight:!0,handles:[.5,1,0,.08673406177264933],value:37},{id:"wqBWch7H5G",position:6,connectedRight:!0,handles:[.9995963058725759,.9566329691136752,0,.00510204081632653],value:19},{id:"09fFal8R1E",position:7.933,connectedRight:!0,handles:[1,.9948979591836735,.5,0],value:88.99950442975708}]},"7V87-30kg6":{type:"BasicKeyframedTrack",keyframes:[{id:"qnc23OmShy",position:3.9,connectedRight:!0,handles:[.5,1,.5,0],value:-61},{id:"Y3EF2j0Gqv",position:6,connectedRight:!0,handles:[1,1,.5,0],value:0}]},bgVoZWSXmO:{type:"BasicKeyframedTrack",keyframes:[{id:"DdxISnz42D",position:4.567,connectedRight:!0,handles:[.5,1,0,.02040816326530612],value:.5},{id:"urFzo-cbBQ",position:6,connectedRight:!0,handles:[1,1.010204081632653,.5,0],value:1}]},"-qYzz3Vu3A":{type:"BasicKeyframedTrack",keyframes:[{id:"Pg3ykmKvhV",position:4.567,connectedRight:!0,handles:[.5,1,0,.005154102457309453],value:0},{id:"rMcZA-KVcf",position:6,connectedRight:!0,handles:[.998813244729391,1.010204081632653,.5,0],value:.5}]},"4_AQOxmcX4":{type:"BasicKeyframedTrack",keyframes:[{id:"vBlLrphc3T",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:70},{id:"24knHEdQnZ",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:0}]},"1Oeg-AqynO":{type:"BasicKeyframedTrack",keyframes:[{id:"VVKv_FSKOu",position:0,connectedRight:!0,handles:[.5,1,19230674933779076e-21,.010828821324448176],value:28},{id:"zpz7WmAr67",position:2,connectedRight:!0,handles:[.9998350664639172,.9948979591836734,.5,0],value:0}]},"PrOxr8-JWH":{type:"BasicKeyframedTrack",keyframes:[{id:"kW8TP0_TE1",position:0,connectedRight:!0,handles:[.5,1,.0008102929531224046,-.00510204081632653],value:.5},{id:"eragaxGOi5",position:2,connectedRight:!0,handles:[1,.969231570179092,.5,0],value:1},{id:"ueshd0eZHB",position:6,connectedRight:!0,handles:[.5,1,0,.005128071636817992],value:1},{id:"jZRNmhY3Dd",position:8,connectedRight:!0,handles:[.9970287126440771,.979487713452728,.5,0],value:.5}]},aqtAzUUGPI:{type:"BasicKeyframedTrack",keyframes:[{id:"rw5DBGUorT",position:0,connectedRight:!0,handles:[.5,1,.5,0],value:2},{id:"4pK5T2pyPR",position:2,connectedRight:!0,handles:[.5,1,.5,0],value:2}]},Z6rctwGlUh:{type:"BasicKeyframedTrack",keyframes:[{id:"kEwDDpVEY7",position:0,connectedRight:!0,handles:[.5,1,0,-.01020408163265306],value:0},{id:"G8l8l442R6",position:2,connectedRight:!0,handles:[.9988065115645506,1.0107525882072945,.5,0],value:1},{id:"urgW6VxP2z",position:6,connectedRight:!0,handles:[.5,1,0,-.005154102457309453],value:1},{id:"lnmZnDMYx3",position:8,connectedRight:!0,handles:[1,1.0051803988984183,.5,0],value:0}]}},trackIdByPropPath:{'["bg","x"]':"haDc3jqP6o",'["bg","layer1","x"]':"ps_SetQ-4t",'["bg","layer4","x"]':"YUAlKMiMmh",'["bg","layer3","x"]':"PXEfN_TuDK",'["bg","layer2","x"]':"o2f8zYP45D",'["signals1","scale"]':"8NUMHf9tOy",'["signals1","opacity"]':"oaEDCspGnS",'["bars","bar1","opacity"]':"Gr0LdOhQIE",'["bars","bar2","opacity"]':"5bJf8NY_YH",'["bars","bar3","opacity"]':"eCXD9ex29X",'["bars","bar4","opacity"]':"kNnqAVNC17",'["bars","fill","r"]':"IPSdPYL7DN",'["bars","fill","g"]':"N5eaqswyHt",'["bars","fill","b"]':"cP1FwHRSrS",'["bg","night"]':"mxtbk8nV4P",'["bg","fog"]':"J4qFprbHc9",'["satellite","y"]':"diUqDYmBHs",'["satellite","x"]':"e8hn74xke5",'["satellite","rotate"]':"7V87-30kg6",'["signals2","scale"]':"bgVoZWSXmO",'["signals2","opacity"]':"-qYzz3Vu3A",'["bg","y"]':"4_AQOxmcX4",'["forGround","y"]':"1Oeg-AqynO",'["bg","scale"]':"PrOxr8-JWH",'["bg","day","scale"]':"aqtAzUUGPI",'["alpha"]':"Z6rctwGlUh"}},text:{trackData:{"3YAZ9pphlF":{type:"BasicKeyframedTrack",keyframes:[{id:"HcdzSwOhd7",position:.533,connectedRight:!0,handles:[.5,1,.000609638546057778,0],value:0},{id:"iCwj3LzFcx",position:2,connectedRight:!0,handles:[1,1,.5,0],value:1},{id:"0p3CEBienX",position:2.567,connectedRight:!0,handles:[.5,1,.5,0],value:0}]},"aUHApO-dGq":{type:"BasicKeyframedTrack",keyframes:[{id:"APEJziHN5C",position:.533,connectedRight:!0,handles:[.5,1,0,-.010230112453144523],value:2.5},{id:"gEbN7GBibD",position:2,connectedRight:!0,handles:[1,.9742288236619095,.5,0],value:0}]},"5MAVxwZGci":{type:"BasicKeyframedTrack",keyframes:[{id:"uNPRCMfZSU",position:2.567,connectedRight:!0,handles:[.5,1,0,.003967704728950403],value:0},{id:"fW8en6jSCT",position:4,connectedRight:!0,handles:[1,1.011764705882353,.5,0],value:1},{id:"9rABSVhUyT",position:4.567,connectedRight:!0,handles:[.5,1,.5,0],value:0}]},RnRgtI7VRv:{type:"BasicKeyframedTrack",keyframes:[{id:"44X8eMjELD",position:2.567,connectedRight:!0,handles:[.5,1,0,-.00392156862745098],value:2.5},{id:"_TL8wAQsqs",position:4,connectedRight:!0,handles:[1,.9881891580161476,.5,0],value:0}]},"zBQX_-ZKyB":{type:"BasicKeyframedTrack",keyframes:[{id:"7ibLrdhfNz",position:4.567,connectedRight:!0,handles:[.5,1,0,0],value:0},{id:"lvUeOxcelk",position:6,connectedRight:!0,handles:[.9987811223672056,1.003921568627451,.5,0],value:1}]},"7yl7_SOyLx":{type:"BasicKeyframedTrack",keyframes:[{id:"HcRSaMFp2D",position:4.567,connectedRight:!0,handles:[.5,1,.0007813387969600738,-.01568627450980392],value:2.5},{id:"eEw2VpV52t",position:6,connectedRight:!0,handles:[.9999909588590895,.9880507497116494,.5,0],value:0}]},UeKtE3Lvmm:{type:"BasicKeyframedTrack",keyframes:[{id:"RykC0oTJPW",position:0,connectedRight:!0,handles:[.5,1,0,.024217766153250022],value:0},{id:"QomnW18VYU",position:2,connectedRight:!0,handles:[1,1,0,0],value:.333},{id:"pz4Un5-HQV",position:4,connectedRight:!0,handles:[.9909101255311498,1.02421776615325,0,.02414525787135407],value:.666},{id:"S5zCmbGYJU",position:6,connectedRight:!0,handles:[1,.975854742128646,.5,0],value:1}]}},trackIdByPropPath:{'["text1","opacity"]':"3YAZ9pphlF",'["text1","y"]':"aUHApO-dGq",'["text2","opacity"]':"5MAVxwZGci",'["text2","y"]':"RnRgtI7VRv",'["text3","opacity"]':"zBQX_-ZKyB",'["text3","y"]':"7yl7_SOyLx",'["progress"]':"UeKtE3Lvmm"}}}}}},b_="0.4.0",w_=["1giQ-ZcumW3yN3BA","mD5jw4EO6MNunxLO","YJl9zaWpC6abzwhS","PWRU5S4QWj84lqnt","TWUvq_OPiAbL6rkM","z6Vvv_gkJyWqoJ8s","YeIF34GTO1gT2U4o","PGEy0kz0o_Ol2Ypm","Qeh7hkykW1GqbZJ1"];var M_={sheetsById:x_,definitionVersion:b_,revisionHistory:w_};class rn{}tn(rn,"theatre",Tu.getProject("skylo",{state:M_})),tn(rn,"html",document.documentElement),tn(rn,"time",0),tn(rn,"deltaTime",0),tn(rn,"radius",570);const xn=class{static async init(){this.w=innerWidth,this.h=innerHeight,this.aspect=1,this.mouse={x:innerWidth/2,y:innerHeight/2},this.addListeners(),await Lg(200),this.onResize()}static addListeners(){addEventListener("resize",this.onResize,{passive:!0}),addEventListener("mousemove",this.onMouseMove)}static calculateLayout(){let e=window.innerHeight*.01;rn.html.style.setProperty("--vh",`${e}px`)}};let Jn=xn;tn(Jn,"onResize",()=>{clearTimeout(xn.resizeTl),xn.resizeTl=setTimeout(()=>{const{innerWidth:e,innerHeight:t}=window;xn.w=e,xn.h=t,xn.aspect=e/t,xn.calculateLayout(),Rg.emit("RESIZE")},100)}),tn(Jn,"onMouseMove",({clientX:e,clientY:t})=>{xn.mouse.x=e,xn.mouse.y=t});class s1{static init(){this.frames=[],this.render=e=>this.frame(e)}static start(){this.stopped=!1,this.now=performance.now(),this.id=window.requestAnimationFrame(this.render)}static stop(e=!1){e&&window.cancelAnimationFrame(this.id),this.stopped=!0}static frame(e){if(this.frames.length<1)return!1;for(let t=0;t<this.frames.length&&this.frames.length>0;t++)this.frames.length&&this.frames[t].handler(e);this.stopped||(this.id=window.requestAnimationFrame(this.render))}static add(e,t){if(typeof e!="function")throw new Error("Expected function as handler");return typeof t=="undefined"&&(t=`h_${++this.uidCounter}`),this.frames.push({id:t,handler:e}),this.frames.length===1&&this.start(),t}static moveToFirst(e){if(typeof e=="undefined")throw new Error("Expected id");const t=this.frames.findIndex(n=>n.id===e);t<0||this.frames.unshift(this.frames.splice(t,1)[0])}static remove(e){if(typeof e=="undefined")throw new Error("Expected id");const t=this.frames.findIndex(n=>n.id===e);t<0||(this.frames.splice(t,1),this.frames.length<=0&&this.stop())}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const sl="140",S_=0,Vc=1,T_=2,Du=1,E_=2,Vr=3,Yr=0,fn=1,ar=2,Iu=1,Zn=0,rr=1,Hc=2,Gc=3,Wc=4,A_=5,Ki=100,C_=101,P_=102,jc=103,qc=104,R_=200,L_=201,D_=202,I_=203,Ou=204,Fu=205,O_=206,F_=207,N_=208,B_=209,z_=210,k_=0,U_=1,V_=2,Ua=3,H_=4,G_=5,W_=6,j_=7,co=0,q_=1,X_=2,Fn=0,Y_=1,J_=2,$_=3,Z_=4,K_=5,Nu=300,lr=301,cr=302,Va=303,Ha=304,ho=306,Ga=1e3,dn=1001,Wa=1002,St=1003,Xc=1004,Yc=1005,Vt=1006,Q_=1007,uo=1008,wi=1009,ev=1010,tv=1011,Jr=1012,nv=1013,Ks=1014,$n=1015,$r=1016,iv=1017,rv=1018,sr=1020,sv=1021,ov=1022,sn=1023,av=1024,lv=1025,yi=1026,hr=1027,cv=1028,hv=1029,uv=1030,dv=1031,fv=1033,ea=33776,ta=33777,na=33778,ia=33779,Jc=35840,$c=35841,Zc=35842,Kc=35843,pv=36196,Qc=37492,eh=37496,th=37808,nh=37809,ih=37810,rh=37811,sh=37812,oh=37813,ah=37814,lh=37815,ch=37816,hh=37817,uh=37818,dh=37819,fh=37820,ph=37821,mh=36492,mv=2200,gv=2201,_v=2202,eo=2300,to=2301,ra=2302,Qi=2400,er=2401,no=2402,ol=2500,Bu=2501,vv=0,o1=1,a1=2,ei=3e3,dt=3001,yv=3200,xv=3201,pr=0,bv=1,Dn="srgb",vi="srgb-linear",sa=7680,wv=519,Zr=35044,io=35048,gh="300 es",ja=1035;class Si{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Ct=[];for(let r=0;r<256;r++)Ct[r]=(r<16?"0":"")+r.toString(16);let _h=1234567;const Gr=Math.PI/180,Kr=180/Math.PI;function on(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ct[r&255]+Ct[r>>8&255]+Ct[r>>16&255]+Ct[r>>24&255]+"-"+Ct[e&255]+Ct[e>>8&255]+"-"+Ct[e>>16&15|64]+Ct[e>>24&255]+"-"+Ct[t&63|128]+Ct[t>>8&255]+"-"+Ct[t>>16&255]+Ct[t>>24&255]+Ct[n&255]+Ct[n>>8&255]+Ct[n>>16&255]+Ct[n>>24&255]).toLowerCase()}function Pt(r,e,t){return Math.max(e,Math.min(t,r))}function al(r,e){return(r%e+e)%e}function Mv(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Sv(r,e,t){return r!==e?(t-r)/(e-r):0}function Wr(r,e,t){return(1-t)*r+t*e}function Tv(r,e,t,n){return Wr(r,e,1-Math.exp(-t*n))}function Ev(r,e=1){return e-Math.abs(al(r,e*2)-e)}function Av(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Cv(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Pv(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Rv(r,e){return r+Math.random()*(e-r)}function Lv(r){return r*(.5-Math.random())}function Dv(r){r!==void 0&&(_h=r);let e=_h+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Iv(r){return r*Gr}function Ov(r){return r*Kr}function qa(r){return(r&r-1)===0&&r!==0}function zu(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ro(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Fv(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),c=o(t/2),h=s((e+n)/2),u=o((e+n)/2),f=s((e-n)/2),p=o((e-n)/2),g=s((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":r.set(a*u,c*f,c*p,a*h);break;case"YZY":r.set(c*p,a*u,c*f,a*h);break;case"ZXZ":r.set(c*f,c*p,a*u,a*h);break;case"XZX":r.set(a*u,c*v,c*g,a*h);break;case"YXY":r.set(c*g,a*u,c*v,a*h);break;case"ZYZ":r.set(c*v,c*g,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Nv(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Bv(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var oa=Object.freeze({__proto__:null,DEG2RAD:Gr,RAD2DEG:Kr,generateUUID:on,clamp:Pt,euclideanModulo:al,mapLinear:Mv,inverseLerp:Sv,lerp:Wr,damp:Tv,pingpong:Ev,smoothstep:Av,smootherstep:Cv,randInt:Pv,randFloat:Rv,randFloatSpread:Lv,seededRandom:Dv,degToRad:Iv,radToDeg:Ov,isPowerOfTwo:qa,ceilPowerOfTwo:zu,floorPowerOfTwo:ro,setQuaternionFromProperEuler:Fv,normalize:Bv,denormalize:Nv});class le{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}le.prototype.isVector2=!0;class Rt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=c,u[6]=n,u[7]=o,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],c=n[6],h=n[1],u=n[4],f=n[7],p=n[2],g=n[5],v=n[8],_=i[0],m=i[3],b=i[6],P=i[1],L=i[4],M=i[7],D=i[2],N=i[5],U=i[8];return s[0]=o*_+a*P+c*D,s[3]=o*m+a*L+c*N,s[6]=o*b+a*M+c*U,s[1]=h*_+u*P+f*D,s[4]=h*m+u*L+f*N,s[7]=h*b+u*M+f*U,s[2]=p*_+g*P+v*D,s[5]=p*m+g*L+v*N,s[8]=p*b+g*M+v*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8];return t*o*u-t*a*h-n*s*u+n*a*c+i*s*h-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=u*o-a*h,p=a*c-u*s,g=h*s-o*c,v=t*f+n*p+i*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/v;return e[0]=f*_,e[1]=(i*h-u*n)*_,e[2]=(a*n-i*o)*_,e[3]=p*_,e[4]=(u*t-i*c)*_,e[5]=(i*s-a*t)*_,e[6]=g*_,e[7]=(n*c-h*t)*_,e[8]=(o*t-n*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const c=Math.cos(s),h=Math.sin(s);return this.set(n*c,n*h,-n*(c*o+h*a)+o+e,-i*h,i*c,-i*(-h*o+c*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],c=i[1],h=i[4],u=i[7];return i[0]=t*s+n*c,i[3]=t*o+n*h,i[6]=t*a+n*u,i[1]=-n*s+t*c,i[4]=-n*o+t*h,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Rt.prototype.isMatrix3=!0;function ku(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}function Qr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function xi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Qs(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const aa={[Dn]:{[vi]:xi},[vi]:{[Dn]:Qs}},ln={legacyMode:!0,get workingColorSpace(){return vi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(aa[e]&&aa[e][t]!==void 0){const n=aa[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Uu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},yt={r:0,g:0,b:0},cn={h:0,s:0,l:0},xs={h:0,s:0,l:0};function la(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function bs(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class Le{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Dn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ln.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=vi){return this.r=e,this.g=t,this.b=n,ln.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=vi){if(e=al(e,1),t=Pt(t,0,1),n=Pt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=la(o,s,e+1/3),this.g=la(o,s,e),this.b=la(o,s,e-1/3)}return ln.toWorkingColorSpace(this,i),this}setStyle(e,t=Dn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,ln.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,ln.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const c=parseFloat(s[1])/360,h=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(c,h,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,ln.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,ln.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Dn){const n=Uu[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=xi(e.r),this.g=xi(e.g),this.b=xi(e.b),this}copyLinearToSRGB(e){return this.r=Qs(e.r),this.g=Qs(e.g),this.b=Qs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Dn){return ln.fromWorkingColorSpace(bs(this,yt),e),Pt(yt.r*255,0,255)<<16^Pt(yt.g*255,0,255)<<8^Pt(yt.b*255,0,255)<<0}getHexString(e=Dn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=vi){ln.fromWorkingColorSpace(bs(this,yt),t);const n=yt.r,i=yt.g,s=yt.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let c,h;const u=(a+o)/2;if(a===o)c=0,h=0;else{const f=o-a;switch(h=u<=.5?f/(o+a):f/(2-o-a),o){case n:c=(i-s)/f+(i<s?6:0);break;case i:c=(s-n)/f+2;break;case s:c=(n-i)/f+4;break}c/=6}return e.h=c,e.s=h,e.l=u,e}getRGB(e,t=vi){return ln.fromWorkingColorSpace(bs(this,yt),t),e.r=yt.r,e.g=yt.g,e.b=yt.b,e}getStyle(e=Dn){return ln.fromWorkingColorSpace(bs(this,yt),e),e!==Dn?`color(${e} ${yt.r} ${yt.g} ${yt.b})`:`rgb(${yt.r*255|0},${yt.g*255|0},${yt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(cn),cn.h+=e,cn.s+=t,cn.l+=n,this.setHSL(cn.h,cn.s,cn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(cn),e.getHSL(xs);const n=Wr(cn.h,xs.h,t),i=Wr(cn.s,xs.s,t),s=Wr(cn.l,xs.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Le.NAMES=Uu;Le.prototype.isColor=!0;Le.prototype.r=1;Le.prototype.g=1;Le.prototype.b=1;let Oi;class Ti{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Oi===void 0&&(Oi=Qr("canvas")),Oi.width=e.width,Oi.height=e.height;const n=Oi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Oi}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Qr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=xi(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(xi(t[n]/255)*255):t[n]=xi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ll{constructor(e=null){this.uuid=on(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(ca(i[o].image)):s.push(ca(i[o]))}else s=ca(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function ca(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?Ti.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ll.prototype.isSource=!0;let zv=0;class Tt extends Si{constructor(e=Tt.DEFAULT_IMAGE,t=Tt.DEFAULT_MAPPING,n=dn,i=dn,s=Vt,o=uo,a=sn,c=wi,h=1,u=ei){super(),Object.defineProperty(this,"id",{value:zv++}),this.uuid=on(),this.name="",this.source=new ll(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=c,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Rt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Nu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ga:e.x=e.x-Math.floor(e.x);break;case dn:e.x=e.x<0?0:1;break;case Wa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ga:e.y=e.y-Math.floor(e.y);break;case dn:e.y=e.y<0?0:1;break;case Wa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Tt.DEFAULT_IMAGE=null;Tt.DEFAULT_MAPPING=Nu;Tt.prototype.isTexture=!0;class at{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,h=c[0],u=c[4],f=c[8],p=c[1],g=c[5],v=c[9],_=c[2],m=c[6],b=c[10];if(Math.abs(u-p)<.01&&Math.abs(f-_)<.01&&Math.abs(v-m)<.01){if(Math.abs(u+p)<.1&&Math.abs(f+_)<.1&&Math.abs(v+m)<.1&&Math.abs(h+g+b-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const L=(h+1)/2,M=(g+1)/2,D=(b+1)/2,N=(u+p)/4,U=(f+_)/4,T=(v+m)/4;return L>M&&L>D?L<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(L),i=N/n,s=U/n):M>D?M<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(M),n=N/i,s=T/i):D<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(D),n=U/s,i=T/s),this.set(n,i,s,t),this}let P=Math.sqrt((m-v)*(m-v)+(f-_)*(f-_)+(p-u)*(p-u));return Math.abs(P)<.001&&(P=1),this.x=(m-v)/P,this.y=(f-_)/P,this.z=(p-u)/P,this.w=Math.acos((h+g+b-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}at.prototype.isVector4=!0;class Jt extends Si{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new at(0,0,e,t),this.scissorTest=!1,this.viewport=new at(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new Tt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Vt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ll(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Jt.prototype.isWebGLRenderTarget=!0;class fo extends Tt{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=St,this.minFilter=St,this.wrapR=dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}fo.prototype.isDataArrayTexture=!0;class kv extends Jt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new fo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}kv.prototype.isWebGLArrayRenderTarget=!0;class cl extends Tt{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=St,this.minFilter=St,this.wrapR=dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}cl.prototype.isData3DTexture=!0;class Uv extends Jt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new cl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}Uv.prototype.isWebGL3DRenderTarget=!0;class Vv extends Jt{constructor(e,t,n,i={}){super(e,t,i);const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}Vv.prototype.isWebGLMultipleRenderTargets=!0;class Gt{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let c=n[i+0],h=n[i+1],u=n[i+2],f=n[i+3];const p=s[o+0],g=s[o+1],v=s[o+2],_=s[o+3];if(a===0){e[t+0]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=p,e[t+1]=g,e[t+2]=v,e[t+3]=_;return}if(f!==_||c!==p||h!==g||u!==v){let m=1-a;const b=c*p+h*g+u*v+f*_,P=b>=0?1:-1,L=1-b*b;if(L>Number.EPSILON){const D=Math.sqrt(L),N=Math.atan2(D,b*P);m=Math.sin(m*N)/D,a=Math.sin(a*N)/D}const M=a*P;if(c=c*m+p*M,h=h*m+g*M,u=u*m+v*M,f=f*m+_*M,m===1-a){const D=1/Math.sqrt(c*c+h*h+u*u+f*f);c*=D,h*=D,u*=D,f*=D}}e[t]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],c=n[i+1],h=n[i+2],u=n[i+3],f=s[o],p=s[o+1],g=s[o+2],v=s[o+3];return e[t]=a*v+u*f+c*g-h*p,e[t+1]=c*v+u*p+h*f-a*g,e[t+2]=h*v+u*g+a*p-c*f,e[t+3]=u*v-a*f-c*p-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,c=Math.sin,h=a(n/2),u=a(i/2),f=a(s/2),p=c(n/2),g=c(i/2),v=c(s/2);switch(o){case"XYZ":this._x=p*u*f+h*g*v,this._y=h*g*f-p*u*v,this._z=h*u*v+p*g*f,this._w=h*u*f-p*g*v;break;case"YXZ":this._x=p*u*f+h*g*v,this._y=h*g*f-p*u*v,this._z=h*u*v-p*g*f,this._w=h*u*f+p*g*v;break;case"ZXY":this._x=p*u*f-h*g*v,this._y=h*g*f+p*u*v,this._z=h*u*v+p*g*f,this._w=h*u*f-p*g*v;break;case"ZYX":this._x=p*u*f-h*g*v,this._y=h*g*f+p*u*v,this._z=h*u*v-p*g*f,this._w=h*u*f+p*g*v;break;case"YZX":this._x=p*u*f+h*g*v,this._y=h*g*f+p*u*v,this._z=h*u*v-p*g*f,this._w=h*u*f-p*g*v;break;case"XZY":this._x=p*u*f-h*g*v,this._y=h*g*f-p*u*v,this._z=h*u*v+p*g*f,this._w=h*u*f+p*g*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],c=t[9],h=t[2],u=t[6],f=t[10],p=n+a+f;if(p>0){const g=.5/Math.sqrt(p+1);this._w=.25/g,this._x=(u-c)*g,this._y=(s-h)*g,this._z=(o-i)*g}else if(n>a&&n>f){const g=2*Math.sqrt(1+n-a-f);this._w=(u-c)/g,this._x=.25*g,this._y=(i+o)/g,this._z=(s+h)/g}else if(a>f){const g=2*Math.sqrt(1+a-n-f);this._w=(s-h)/g,this._x=(i+o)/g,this._y=.25*g,this._z=(c+u)/g}else{const g=2*Math.sqrt(1+f-n-a);this._w=(o-i)/g,this._x=(s+h)/g,this._y=(c+u)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Pt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,c=t._y,h=t._z,u=t._w;return this._x=n*u+o*a+i*h-s*c,this._y=i*u+o*c+s*a-n*h,this._z=s*u+o*h+n*c-i*a,this._w=o*u-n*a-i*c-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),u=Math.atan2(h,a),f=Math.sin((1-t)*u)/h,p=Math.sin(t*u)/h;return this._w=o*f+this._w*p,this._x=n*f+this._x*p,this._y=i*f+this._y*p,this._z=s*f+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}Gt.prototype.isQuaternion=!0;class C{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(vh.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(vh.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,c=e.w,h=c*t+o*i-a*n,u=c*n+a*t-s*i,f=c*i+s*n-o*t,p=-s*t-o*n-a*i;return this.x=h*c+p*-s+u*-a-f*-o,this.y=u*c+p*-o+f*-s-h*-a,this.z=f*c+p*-a+h*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-s*a,this.y=s*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ha.copy(this).projectOnVector(e),this.sub(ha)}reflect(e){return this.sub(ha.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Pt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}C.prototype.isVector3=!0;const ha=new C,vh=new Gt;class mn{constructor(e=new C(1/0,1/0,1/0),t=new C(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.length;c<h;c+=3){const u=e[c],f=e[c+1],p=e[c+2];u<t&&(t=u),f<n&&(n=f),p<i&&(i=p),u>s&&(s=u),f>o&&(o=f),p>a&&(a=p)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.count;c<h;c++){const u=e.getX(c),f=e.getY(c),p=e.getZ(c);u<t&&(t=u),f<n&&(n=f),p<i&&(i=p),u>s&&(s=u),f>o&&(o=f),p>a&&(a=p)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=fi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)fi.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(fi)}else n.boundingBox===null&&n.computeBoundingBox(),ua.copy(n.boundingBox),ua.applyMatrix4(e.matrixWorld),this.union(ua);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,fi),fi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ir),ws.subVectors(this.max,Ir),Fi.subVectors(e.a,Ir),Ni.subVectors(e.b,Ir),Bi.subVectors(e.c,Ir),Vn.subVectors(Ni,Fi),Hn.subVectors(Bi,Ni),pi.subVectors(Fi,Bi);let t=[0,-Vn.z,Vn.y,0,-Hn.z,Hn.y,0,-pi.z,pi.y,Vn.z,0,-Vn.x,Hn.z,0,-Hn.x,pi.z,0,-pi.x,-Vn.y,Vn.x,0,-Hn.y,Hn.x,0,-pi.y,pi.x,0];return!da(t,Fi,Ni,Bi,ws)||(t=[1,0,0,0,1,0,0,0,1],!da(t,Fi,Ni,Bi,ws))?!1:(Ms.crossVectors(Vn,Hn),t=[Ms.x,Ms.y,Ms.z],da(t,Fi,Ni,Bi,ws))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return fi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(fi).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(En[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),En[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),En[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),En[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),En[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),En[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),En[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),En[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(En),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}mn.prototype.isBox3=!0;const En=[new C,new C,new C,new C,new C,new C,new C,new C],fi=new C,ua=new mn,Fi=new C,Ni=new C,Bi=new C,Vn=new C,Hn=new C,pi=new C,Ir=new C,ws=new C,Ms=new C,mi=new C;function da(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){mi.fromArray(r,s);const a=i.x*Math.abs(mi.x)+i.y*Math.abs(mi.y)+i.z*Math.abs(mi.z),c=e.dot(mi),h=t.dot(mi),u=n.dot(mi);if(Math.max(-Math.max(c,h,u),Math.min(c,h,u))>a)return!1}return!0}const Hv=new mn,yh=new C,Ss=new C,fa=new C;class mr{constructor(e=new C,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Hv.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){fa.subVectors(e,this.center);const t=fa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(fa.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Ss.set(0,0,1).multiplyScalar(e.radius):Ss.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(yh.copy(e.center).add(Ss)),this.expandByPoint(yh.copy(e.center).sub(Ss)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const An=new C,pa=new C,Ts=new C,Gn=new C,ma=new C,Es=new C,ga=new C;class gr{constructor(e=new C,t=new C(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,An)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=An.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(An.copy(this.direction).multiplyScalar(t).add(this.origin),An.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){pa.copy(e).add(t).multiplyScalar(.5),Ts.copy(t).sub(e).normalize(),Gn.copy(this.origin).sub(pa);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Ts),a=Gn.dot(this.direction),c=-Gn.dot(Ts),h=Gn.lengthSq(),u=Math.abs(1-o*o);let f,p,g,v;if(u>0)if(f=o*c-a,p=o*a-c,v=s*u,f>=0)if(p>=-v)if(p<=v){const _=1/u;f*=_,p*=_,g=f*(f+o*p+2*a)+p*(o*f+p+2*c)+h}else p=s,f=Math.max(0,-(o*p+a)),g=-f*f+p*(p+2*c)+h;else p=-s,f=Math.max(0,-(o*p+a)),g=-f*f+p*(p+2*c)+h;else p<=-v?(f=Math.max(0,-(-o*s+a)),p=f>0?-s:Math.min(Math.max(-s,-c),s),g=-f*f+p*(p+2*c)+h):p<=v?(f=0,p=Math.min(Math.max(-s,-c),s),g=p*(p+2*c)+h):(f=Math.max(0,-(o*s+a)),p=f>0?s:Math.min(Math.max(-s,-c),s),g=-f*f+p*(p+2*c)+h);else p=o>0?-s:s,f=Math.max(0,-(o*p+a)),g=-f*f+p*(p+2*c)+h;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),i&&i.copy(Ts).multiplyScalar(p).add(pa),g}intersectSphere(e,t){An.subVectors(e.center,this.origin);const n=An.dot(this.direction),i=An.dot(An)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,c=n+o;return a<0&&c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,c;const h=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,p=this.origin;return h>=0?(n=(e.min.x-p.x)*h,i=(e.max.x-p.x)*h):(n=(e.max.x-p.x)*h,i=(e.min.x-p.x)*h),u>=0?(s=(e.min.y-p.y)*u,o=(e.max.y-p.y)*u):(s=(e.max.y-p.y)*u,o=(e.min.y-p.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),f>=0?(a=(e.min.z-p.z)*f,c=(e.max.z-p.z)*f):(a=(e.max.z-p.z)*f,c=(e.min.z-p.z)*f),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,An)!==null}intersectTriangle(e,t,n,i,s){ma.subVectors(t,e),Es.subVectors(n,e),ga.crossVectors(ma,Es);let o=this.direction.dot(ga),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Gn.subVectors(this.origin,e);const c=a*this.direction.dot(Es.crossVectors(Gn,Es));if(c<0)return null;const h=a*this.direction.dot(ma.cross(Gn));if(h<0||c+h>o)return null;const u=-a*Gn.dot(ga);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ie{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h,u,f,p,g,v,_,m){const b=this.elements;return b[0]=e,b[4]=t,b[8]=n,b[12]=i,b[1]=s,b[5]=o,b[9]=a,b[13]=c,b[2]=h,b[6]=u,b[10]=f,b[14]=p,b[3]=g,b[7]=v,b[11]=_,b[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ie().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/zi.setFromMatrixColumn(e,0).length(),s=1/zi.setFromMatrixColumn(e,1).length(),o=1/zi.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),h=Math.sin(i),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const p=o*u,g=o*f,v=a*u,_=a*f;t[0]=c*u,t[4]=-c*f,t[8]=h,t[1]=g+v*h,t[5]=p-_*h,t[9]=-a*c,t[2]=_-p*h,t[6]=v+g*h,t[10]=o*c}else if(e.order==="YXZ"){const p=c*u,g=c*f,v=h*u,_=h*f;t[0]=p+_*a,t[4]=v*a-g,t[8]=o*h,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=g*a-v,t[6]=_+p*a,t[10]=o*c}else if(e.order==="ZXY"){const p=c*u,g=c*f,v=h*u,_=h*f;t[0]=p-_*a,t[4]=-o*f,t[8]=v+g*a,t[1]=g+v*a,t[5]=o*u,t[9]=_-p*a,t[2]=-o*h,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const p=o*u,g=o*f,v=a*u,_=a*f;t[0]=c*u,t[4]=v*h-g,t[8]=p*h+_,t[1]=c*f,t[5]=_*h+p,t[9]=g*h-v,t[2]=-h,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const p=o*c,g=o*h,v=a*c,_=a*h;t[0]=c*u,t[4]=_-p*f,t[8]=v*f+g,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-h*u,t[6]=g*f+v,t[10]=p-_*f}else if(e.order==="XZY"){const p=o*c,g=o*h,v=a*c,_=a*h;t[0]=c*u,t[4]=-f,t[8]=h*u,t[1]=p*f+_,t[5]=o*u,t[9]=g*f-v,t[2]=v*f-g,t[6]=a*u,t[10]=_*f+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Gv,e,Wv)}lookAt(e,t,n){const i=this.elements;return Xt.subVectors(e,t),Xt.lengthSq()===0&&(Xt.z=1),Xt.normalize(),Wn.crossVectors(n,Xt),Wn.lengthSq()===0&&(Math.abs(n.z)===1?Xt.x+=1e-4:Xt.z+=1e-4,Xt.normalize(),Wn.crossVectors(n,Xt)),Wn.normalize(),As.crossVectors(Xt,Wn),i[0]=Wn.x,i[4]=As.x,i[8]=Xt.x,i[1]=Wn.y,i[5]=As.y,i[9]=Xt.y,i[2]=Wn.z,i[6]=As.z,i[10]=Xt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],c=n[8],h=n[12],u=n[1],f=n[5],p=n[9],g=n[13],v=n[2],_=n[6],m=n[10],b=n[14],P=n[3],L=n[7],M=n[11],D=n[15],N=i[0],U=i[4],T=i[8],O=i[12],H=i[1],V=i[5],se=i[9],ce=i[13],z=i[2],W=i[6],j=i[10],te=i[14],ie=i[3],Y=i[7],K=i[11],he=i[15];return s[0]=o*N+a*H+c*z+h*ie,s[4]=o*U+a*V+c*W+h*Y,s[8]=o*T+a*se+c*j+h*K,s[12]=o*O+a*ce+c*te+h*he,s[1]=u*N+f*H+p*z+g*ie,s[5]=u*U+f*V+p*W+g*Y,s[9]=u*T+f*se+p*j+g*K,s[13]=u*O+f*ce+p*te+g*he,s[2]=v*N+_*H+m*z+b*ie,s[6]=v*U+_*V+m*W+b*Y,s[10]=v*T+_*se+m*j+b*K,s[14]=v*O+_*ce+m*te+b*he,s[3]=P*N+L*H+M*z+D*ie,s[7]=P*U+L*V+M*W+D*Y,s[11]=P*T+L*se+M*j+D*K,s[15]=P*O+L*ce+M*te+D*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],c=e[9],h=e[13],u=e[2],f=e[6],p=e[10],g=e[14],v=e[3],_=e[7],m=e[11],b=e[15];return v*(+s*c*f-i*h*f-s*a*p+n*h*p+i*a*g-n*c*g)+_*(+t*c*g-t*h*p+s*o*p-i*o*g+i*h*u-s*c*u)+m*(+t*h*f-t*a*g-s*o*f+n*o*g+s*a*u-n*h*u)+b*(-i*a*u-t*c*f+t*a*p+i*o*f-n*o*p+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=e[9],p=e[10],g=e[11],v=e[12],_=e[13],m=e[14],b=e[15],P=f*m*h-_*p*h+_*c*g-a*m*g-f*c*b+a*p*b,L=v*p*h-u*m*h-v*c*g+o*m*g+u*c*b-o*p*b,M=u*_*h-v*f*h+v*a*g-o*_*g-u*a*b+o*f*b,D=v*f*c-u*_*c-v*a*p+o*_*p+u*a*m-o*f*m,N=t*P+n*L+i*M+s*D;if(N===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/N;return e[0]=P*U,e[1]=(_*p*s-f*m*s-_*i*g+n*m*g+f*i*b-n*p*b)*U,e[2]=(a*m*s-_*c*s+_*i*h-n*m*h-a*i*b+n*c*b)*U,e[3]=(f*c*s-a*p*s-f*i*h+n*p*h+a*i*g-n*c*g)*U,e[4]=L*U,e[5]=(u*m*s-v*p*s+v*i*g-t*m*g-u*i*b+t*p*b)*U,e[6]=(v*c*s-o*m*s-v*i*h+t*m*h+o*i*b-t*c*b)*U,e[7]=(o*p*s-u*c*s+u*i*h-t*p*h-o*i*g+t*c*g)*U,e[8]=M*U,e[9]=(v*f*s-u*_*s-v*n*g+t*_*g+u*n*b-t*f*b)*U,e[10]=(o*_*s-v*a*s+v*n*h-t*_*h-o*n*b+t*a*b)*U,e[11]=(u*a*s-o*f*s-u*n*h+t*f*h+o*n*g-t*a*g)*U,e[12]=D*U,e[13]=(u*_*i-v*f*i+v*n*p-t*_*p-u*n*m+t*f*m)*U,e[14]=(v*a*i-o*_*i-v*n*c+t*_*c+o*n*m-t*a*m)*U,e[15]=(o*f*i-u*a*i+u*n*c-t*f*c-o*n*p+t*a*p)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,c=e.z,h=s*o,u=s*a;return this.set(h*o+n,h*a-i*c,h*c+i*a,0,h*a+i*c,u*a+n,u*c-i*o,0,h*c-i*a,u*c+i*o,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,c=t._w,h=s+s,u=o+o,f=a+a,p=s*h,g=s*u,v=s*f,_=o*u,m=o*f,b=a*f,P=c*h,L=c*u,M=c*f,D=n.x,N=n.y,U=n.z;return i[0]=(1-(_+b))*D,i[1]=(g+M)*D,i[2]=(v-L)*D,i[3]=0,i[4]=(g-M)*N,i[5]=(1-(p+b))*N,i[6]=(m+P)*N,i[7]=0,i[8]=(v+L)*U,i[9]=(m-P)*U,i[10]=(1-(p+_))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=zi.set(i[0],i[1],i[2]).length();const o=zi.set(i[4],i[5],i[6]).length(),a=zi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],hn.copy(this);const h=1/s,u=1/o,f=1/a;return hn.elements[0]*=h,hn.elements[1]*=h,hn.elements[2]*=h,hn.elements[4]*=u,hn.elements[5]*=u,hn.elements[6]*=u,hn.elements[8]*=f,hn.elements[9]*=f,hn.elements[10]*=f,t.setFromRotationMatrix(hn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),f=(n+i)/(n-i),p=-(o+s)/(o-s),g=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=p,a[14]=g,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,c=1/(t-e),h=1/(n-i),u=1/(o-s),f=(t+e)*c,p=(n+i)*h,g=(o+s)*u;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*h,a[9]=0,a[13]=-p,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-g,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Ie.prototype.isMatrix4=!0;const zi=new C,hn=new Ie,Gv=new C(0,0,0),Wv=new C(1,1,1),Wn=new C,As=new C,Xt=new C,xh=new Ie,bh=new Gt;class Ei{constructor(e=0,t=0,n=0,i=Ei.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],c=i[1],h=i[5],u=i[9],f=i[2],p=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(Pt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,g),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(p,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Pt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,g),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(Pt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-f,g),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-Pt(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(p,g),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(Pt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,g));break;case"XZY":this._z=Math.asin(-Pt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,h),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return xh.makeRotationFromQuaternion(e),this.setFromRotationMatrix(xh,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return bh.setFromEuler(this),this.setFromQuaternion(bh,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ei.prototype.isEuler=!0;Ei.DefaultOrder="XYZ";Ei.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Vu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let jv=0;const wh=new C,ki=new Gt,Cn=new Ie,Cs=new C,Or=new C,qv=new C,Xv=new Gt,Mh=new C(1,0,0),Sh=new C(0,1,0),Th=new C(0,0,1),Yv={type:"added"},Eh={type:"removed"};class st extends Si{constructor(){super(),Object.defineProperty(this,"id",{value:jv++}),this.uuid=on(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=st.DefaultUp.clone();const e=new C,t=new Ei,n=new Gt,i=new C(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ie},normalMatrix:{value:new Rt}}),this.matrix=new Ie,this.matrixWorld=new Ie,this.matrixAutoUpdate=st.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Vu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ki.setFromAxisAngle(e,t),this.quaternion.multiply(ki),this}rotateOnWorldAxis(e,t){return ki.setFromAxisAngle(e,t),this.quaternion.premultiply(ki),this}rotateX(e){return this.rotateOnAxis(Mh,e)}rotateY(e){return this.rotateOnAxis(Sh,e)}rotateZ(e){return this.rotateOnAxis(Th,e)}translateOnAxis(e,t){return wh.copy(e).applyQuaternion(this.quaternion),this.position.add(wh.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Mh,e)}translateY(e){return this.translateOnAxis(Sh,e)}translateZ(e){return this.translateOnAxis(Th,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Cn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Cs.copy(e):Cs.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Or.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Cn.lookAt(Or,Cs,this.up):Cn.lookAt(Cs,Or,this.up),this.quaternion.setFromRotationMatrix(Cn),i&&(Cn.extractRotation(i.matrixWorld),ki.setFromRotationMatrix(Cn),this.quaternion.premultiply(ki.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Yv)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Eh)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Eh)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Cn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Cn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Cn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Or,e,qv),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Or,Xv,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let h=0,u=c.length;h<u;h++){const f=c[h];s(e.shapes,f)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,h=this.material.length;c<h;c++)a.push(s(e.materials,this.material[c]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(s(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),h=o(e.textures),u=o(e.images),f=o(e.shapes),p=o(e.skeletons),g=o(e.animations),v=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),h.length>0&&(n.textures=h),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),p.length>0&&(n.skeletons=p),g.length>0&&(n.animations=g),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(a){const c=[];for(const h in a){const u=a[h];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}st.DefaultUp=new C(0,1,0);st.DefaultMatrixAutoUpdate=!0;st.prototype.isObject3D=!0;const un=new C,Pn=new C,_a=new C,Rn=new C,Ui=new C,Vi=new C,Ah=new C,va=new C,ya=new C,xa=new C;class vt{constructor(e=new C,t=new C,n=new C){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),un.subVectors(e,t),i.cross(un);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){un.subVectors(i,t),Pn.subVectors(n,t),_a.subVectors(e,t);const o=un.dot(un),a=un.dot(Pn),c=un.dot(_a),h=Pn.dot(Pn),u=Pn.dot(_a),f=o*h-a*a;if(f===0)return s.set(-2,-1,-1);const p=1/f,g=(h*c-a*u)*p,v=(o*u-a*c)*p;return s.set(1-g-v,v,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Rn),Rn.x>=0&&Rn.y>=0&&Rn.x+Rn.y<=1}static getUV(e,t,n,i,s,o,a,c){return this.getBarycoord(e,t,n,i,Rn),c.set(0,0),c.addScaledVector(s,Rn.x),c.addScaledVector(o,Rn.y),c.addScaledVector(a,Rn.z),c}static isFrontFacing(e,t,n,i){return un.subVectors(n,t),Pn.subVectors(e,t),un.cross(Pn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return un.subVectors(this.c,this.b),Pn.subVectors(this.a,this.b),un.cross(Pn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return vt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return vt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return vt.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return vt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return vt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;Ui.subVectors(i,n),Vi.subVectors(s,n),va.subVectors(e,n);const c=Ui.dot(va),h=Vi.dot(va);if(c<=0&&h<=0)return t.copy(n);ya.subVectors(e,i);const u=Ui.dot(ya),f=Vi.dot(ya);if(u>=0&&f<=u)return t.copy(i);const p=c*f-u*h;if(p<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(Ui,o);xa.subVectors(e,s);const g=Ui.dot(xa),v=Vi.dot(xa);if(v>=0&&g<=v)return t.copy(s);const _=g*h-c*v;if(_<=0&&h>=0&&v<=0)return a=h/(h-v),t.copy(n).addScaledVector(Vi,a);const m=u*v-g*f;if(m<=0&&f-u>=0&&g-v>=0)return Ah.subVectors(s,i),a=(f-u)/(f-u+(g-v)),t.copy(i).addScaledVector(Ah,a);const b=1/(m+_+p);return o=_*b,a=p*b,t.copy(n).addScaledVector(Ui,o).addScaledVector(Vi,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Jv=0;class bt extends Si{constructor(){super(),Object.defineProperty(this,"id",{value:Jv++}),this.uuid=on(),this.name="",this.type="Material",this.blending=rr,this.side=Yr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ou,this.blendDst=Fu,this.blendEquation=Ki,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ua,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=wv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=sa,this.stencilZFail=sa,this.stencilZPass=sa,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Iu;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==rr&&(n.blending=this.blending),this.side!==Yr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const c=s[a];delete c.metadata,o.push(c)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}bt.prototype.isMaterial=!0;bt.fromType=function(){return null};class po extends bt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=co,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}po.prototype.isMeshBasicMaterial=!0;const _t=new C,Ps=new le;class xt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Zr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Le),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new le),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new C),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new at),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ps.fromBufferAttribute(this,t),Ps.applyMatrix3(e),this.setXY(t,Ps.x,Ps.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyMatrix3(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyMatrix4(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyNormalMatrix(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.transformDirection(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Zr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}xt.prototype.isBufferAttribute=!0;class Hu extends xt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Gu extends xt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class $v extends xt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}$v.prototype.isFloat16BufferAttribute=!0;class lt extends xt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Zv=0;const nn=new Ie,ba=new st,Hi=new C,Yt=new mn,Fr=new mn,wt=new C;class ct extends Si{constructor(){super(),Object.defineProperty(this,"id",{value:Zv++}),this.uuid=on(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ku(e)?Gu:Hu)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Rt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return nn.makeRotationFromQuaternion(e),this.applyMatrix4(nn),this}rotateX(e){return nn.makeRotationX(e),this.applyMatrix4(nn),this}rotateY(e){return nn.makeRotationY(e),this.applyMatrix4(nn),this}rotateZ(e){return nn.makeRotationZ(e),this.applyMatrix4(nn),this}translate(e,t,n){return nn.makeTranslation(e,t,n),this.applyMatrix4(nn),this}scale(e,t,n){return nn.makeScale(e,t,n),this.applyMatrix4(nn),this}lookAt(e){return ba.lookAt(e),ba.updateMatrix(),this.applyMatrix4(ba.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hi).negate(),this.translate(Hi.x,Hi.y,Hi.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new lt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Yt.setFromBufferAttribute(s),this.morphTargetsRelative?(wt.addVectors(this.boundingBox.min,Yt.min),this.boundingBox.expandByPoint(wt),wt.addVectors(this.boundingBox.max,Yt.max),this.boundingBox.expandByPoint(wt)):(this.boundingBox.expandByPoint(Yt.min),this.boundingBox.expandByPoint(Yt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new mr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new C,1/0);return}if(e){const n=this.boundingSphere.center;if(Yt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Fr.setFromBufferAttribute(a),this.morphTargetsRelative?(wt.addVectors(Yt.min,Fr.min),Yt.expandByPoint(wt),wt.addVectors(Yt.max,Fr.max),Yt.expandByPoint(wt)):(Yt.expandByPoint(Fr.min),Yt.expandByPoint(Fr.max))}Yt.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)wt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(wt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],c=this.morphTargetsRelative;for(let h=0,u=a.count;h<u;h++)wt.fromBufferAttribute(a,h),c&&(Hi.fromBufferAttribute(e,h),wt.add(Hi)),i=Math.max(i,n.distanceToSquared(wt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xt(new Float32Array(4*a),4));const c=this.getAttribute("tangent").array,h=[],u=[];for(let H=0;H<a;H++)h[H]=new C,u[H]=new C;const f=new C,p=new C,g=new C,v=new le,_=new le,m=new le,b=new C,P=new C;function L(H,V,se){f.fromArray(i,H*3),p.fromArray(i,V*3),g.fromArray(i,se*3),v.fromArray(o,H*2),_.fromArray(o,V*2),m.fromArray(o,se*2),p.sub(f),g.sub(f),_.sub(v),m.sub(v);const ce=1/(_.x*m.y-m.x*_.y);!isFinite(ce)||(b.copy(p).multiplyScalar(m.y).addScaledVector(g,-_.y).multiplyScalar(ce),P.copy(g).multiplyScalar(_.x).addScaledVector(p,-m.x).multiplyScalar(ce),h[H].add(b),h[V].add(b),h[se].add(b),u[H].add(P),u[V].add(P),u[se].add(P))}let M=this.groups;M.length===0&&(M=[{start:0,count:n.length}]);for(let H=0,V=M.length;H<V;++H){const se=M[H],ce=se.start,z=se.count;for(let W=ce,j=ce+z;W<j;W+=3)L(n[W+0],n[W+1],n[W+2])}const D=new C,N=new C,U=new C,T=new C;function O(H){U.fromArray(s,H*3),T.copy(U);const V=h[H];D.copy(V),D.sub(U.multiplyScalar(U.dot(V))).normalize(),N.crossVectors(T,V);const ce=N.dot(u[H])<0?-1:1;c[H*4]=D.x,c[H*4+1]=D.y,c[H*4+2]=D.z,c[H*4+3]=ce}for(let H=0,V=M.length;H<V;++H){const se=M[H],ce=se.start,z=se.count;for(let W=ce,j=ce+z;W<j;W+=3)O(n[W+0]),O(n[W+1]),O(n[W+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,g=n.count;p<g;p++)n.setXYZ(p,0,0,0);const i=new C,s=new C,o=new C,a=new C,c=new C,h=new C,u=new C,f=new C;if(e)for(let p=0,g=e.count;p<g;p+=3){const v=e.getX(p+0),_=e.getX(p+1),m=e.getX(p+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,_),o.fromBufferAttribute(t,m),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),a.fromBufferAttribute(n,v),c.fromBufferAttribute(n,_),h.fromBufferAttribute(n,m),a.add(u),c.add(u),h.add(u),n.setXYZ(v,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(m,h.x,h.y,h.z)}else for(let p=0,g=t.count;p<g;p+=3)i.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),o.fromBufferAttribute(t,p+2),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),n.setXYZ(p+0,u.x,u.y,u.z),n.setXYZ(p+1,u.x,u.y,u.z),n.setXYZ(p+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],c=a.array,h=a.itemSize*t,u=Math.min(c.length,o.length-h);for(let f=0,p=h;f<u;f++,p++)o[p]=c[f]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)wt.fromBufferAttribute(e,t),wt.normalize(),e.setXYZ(t,wt.x,wt.y,wt.z)}toNonIndexed(){function e(a,c){const h=a.array,u=a.itemSize,f=a.normalized,p=new h.constructor(c.length*u);let g=0,v=0;for(let _=0,m=c.length;_<m;_++){a.isInterleavedBufferAttribute?g=c[_]*a.data.stride+a.offset:g=c[_]*u;for(let b=0;b<u;b++)p[v++]=h[g++]}return new xt(p,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ct,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],h=e(c,n);t.setAttribute(a,h)}const s=this.morphAttributes;for(const a in s){const c=[],h=s[a];for(let u=0,f=h.length;u<f;u++){const p=h[u],g=e(p,n);c.push(g)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const h=o[a];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const h in c)c[h]!==void 0&&(e[h]=c[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const h=n[c];e.data.attributes[c]=h.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const h=this.morphAttributes[c],u=[];for(let f=0,p=h.length;f<p;f++){const g=h[f];u.push(g.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const u=i[h];this.setAttribute(h,u.clone(t))}const s=e.morphAttributes;for(const h in s){const u=[],f=s[h];for(let p=0,g=f.length;p<g;p++)u.push(f[p].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,u=o.length;h<u;h++){const f=o[h];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ct.prototype.isBufferGeometry=!0;const Ch=new Ie,Gi=new gr,wa=new mr,jn=new C,qn=new C,Xn=new C,Ma=new C,Sa=new C,Ta=new C,Rs=new C,Ls=new C,Ds=new C,Is=new le,Os=new le,Fs=new le,Ea=new C,Ns=new C;class Ht extends st{constructor(e=new ct,t=new po){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),wa.copy(n.boundingSphere),wa.applyMatrix4(s),e.ray.intersectsSphere(wa)===!1)||(Ch.copy(s).invert(),Gi.copy(e.ray).applyMatrix4(Ch),n.boundingBox!==null&&Gi.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position,h=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,p=n.attributes.uv2,g=n.groups,v=n.drawRange;if(a!==null)if(Array.isArray(i))for(let _=0,m=g.length;_<m;_++){const b=g[_],P=i[b.materialIndex],L=Math.max(b.start,v.start),M=Math.min(a.count,Math.min(b.start+b.count,v.start+v.count));for(let D=L,N=M;D<N;D+=3){const U=a.getX(D),T=a.getX(D+1),O=a.getX(D+2);o=Bs(this,P,e,Gi,c,h,u,f,p,U,T,O),o&&(o.faceIndex=Math.floor(D/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const _=Math.max(0,v.start),m=Math.min(a.count,v.start+v.count);for(let b=_,P=m;b<P;b+=3){const L=a.getX(b),M=a.getX(b+1),D=a.getX(b+2);o=Bs(this,i,e,Gi,c,h,u,f,p,L,M,D),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(i))for(let _=0,m=g.length;_<m;_++){const b=g[_],P=i[b.materialIndex],L=Math.max(b.start,v.start),M=Math.min(c.count,Math.min(b.start+b.count,v.start+v.count));for(let D=L,N=M;D<N;D+=3){const U=D,T=D+1,O=D+2;o=Bs(this,P,e,Gi,c,h,u,f,p,U,T,O),o&&(o.faceIndex=Math.floor(D/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const _=Math.max(0,v.start),m=Math.min(c.count,v.start+v.count);for(let b=_,P=m;b<P;b+=3){const L=b,M=b+1,D=b+2;o=Bs(this,i,e,Gi,c,h,u,f,p,L,M,D),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}Ht.prototype.isMesh=!0;function Kv(r,e,t,n,i,s,o,a){let c;if(e.side===fn?c=n.intersectTriangle(o,s,i,!0,a):c=n.intersectTriangle(i,s,o,e.side!==ar,a),c===null)return null;Ns.copy(a),Ns.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Ns);return h<t.near||h>t.far?null:{distance:h,point:Ns.clone(),object:r}}function Bs(r,e,t,n,i,s,o,a,c,h,u,f){jn.fromBufferAttribute(i,h),qn.fromBufferAttribute(i,u),Xn.fromBufferAttribute(i,f);const p=r.morphTargetInfluences;if(s&&p){Rs.set(0,0,0),Ls.set(0,0,0),Ds.set(0,0,0);for(let v=0,_=s.length;v<_;v++){const m=p[v],b=s[v];m!==0&&(Ma.fromBufferAttribute(b,h),Sa.fromBufferAttribute(b,u),Ta.fromBufferAttribute(b,f),o?(Rs.addScaledVector(Ma,m),Ls.addScaledVector(Sa,m),Ds.addScaledVector(Ta,m)):(Rs.addScaledVector(Ma.sub(jn),m),Ls.addScaledVector(Sa.sub(qn),m),Ds.addScaledVector(Ta.sub(Xn),m)))}jn.add(Rs),qn.add(Ls),Xn.add(Ds)}r.isSkinnedMesh&&(r.boneTransform(h,jn),r.boneTransform(u,qn),r.boneTransform(f,Xn));const g=Kv(r,e,t,n,jn,qn,Xn,Ea);if(g){a&&(Is.fromBufferAttribute(a,h),Os.fromBufferAttribute(a,u),Fs.fromBufferAttribute(a,f),g.uv=vt.getUV(Ea,jn,qn,Xn,Is,Os,Fs,new le)),c&&(Is.fromBufferAttribute(c,h),Os.fromBufferAttribute(c,u),Fs.fromBufferAttribute(c,f),g.uv2=vt.getUV(Ea,jn,qn,Xn,Is,Os,Fs,new le));const v={a:h,b:u,c:f,normal:new C,materialIndex:0};vt.getNormal(jn,qn,Xn,v.normal),g.face=v}return g}class rs extends ct{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const c=[],h=[],u=[],f=[];let p=0,g=0;v("z","y","x",-1,-1,n,t,e,o,s,0),v("z","y","x",1,-1,n,t,-e,o,s,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new lt(h,3)),this.setAttribute("normal",new lt(u,3)),this.setAttribute("uv",new lt(f,2));function v(_,m,b,P,L,M,D,N,U,T,O){const H=M/U,V=D/T,se=M/2,ce=D/2,z=N/2,W=U+1,j=T+1;let te=0,ie=0;const Y=new C;for(let K=0;K<j;K++){const he=K*V-ce;for(let re=0;re<W;re++){const _e=re*H-se;Y[_]=_e*P,Y[m]=he*L,Y[b]=z,h.push(Y.x,Y.y,Y.z),Y[_]=0,Y[m]=0,Y[b]=N>0?1:-1,u.push(Y.x,Y.y,Y.z),f.push(re/U),f.push(1-K/T),te+=1}}for(let K=0;K<T;K++)for(let he=0;he<U;he++){const re=p+he+W*K,_e=p+he+W*(K+1),Ce=p+(he+1)+W*(K+1),De=p+(he+1)+W*K;c.push(re,_e,De),c.push(_e,Ce,De),ie+=6}a.addGroup(g,ie,O),g+=ie,p+=te}}static fromJSON(e){return new rs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ur(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Dt(r){const e={};for(let t=0;t<r.length;t++){const n=ur(r[t]);for(const i in n)e[i]=n[i]}return e}const Qv={clone:ur,merge:Dt};var ey=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,ty=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class pn extends bt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=ey,this.fragmentShader=ty,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ur(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}pn.prototype.isShaderMaterial=!0;class hl extends st{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Ie,this.projectionMatrix=new Ie,this.projectionMatrixInverse=new Ie}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}hl.prototype.isCamera=!0;class Ft extends hl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Kr*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Gr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Kr*2*Math.atan(Math.tan(Gr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Gr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/c,t-=o.offsetY*n/h,i*=o.width/c,n*=o.height/h}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ft.prototype.isPerspectiveCamera=!0;const Wi=90,ji=1;class ul extends st{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Ft(Wi,ji,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new C(1,0,0)),this.add(i);const s=new Ft(Wi,ji,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new C(-1,0,0)),this.add(s);const o=new Ft(Wi,ji,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new C(0,1,0)),this.add(o);const a=new Ft(Wi,ji,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new C(0,-1,0)),this.add(a);const c=new Ft(Wi,ji,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new C(0,0,1)),this.add(c);const h=new Ft(Wi,ji,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new C(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,c,h]=this.children,u=e.getRenderTarget(),f=e.toneMapping,p=e.xr.enabled;e.toneMapping=Fn,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class mo extends Tt{constructor(e,t,n,i,s,o,a,c,h,u){e=e!==void 0?e:[],t=t!==void 0?t:lr,super(e,t,n,i,s,o,a,c,h,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}mo.prototype.isCubeTexture=!0;class Wu extends Jt{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new mo(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Vt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new rs(5,5,5),s=new pn({name:"CubemapFromEquirect",uniforms:ur(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:fn,blending:Zn});s.uniforms.tEquirect.value=t;const o=new Ht(i,s),a=t.minFilter;return t.minFilter===uo&&(t.minFilter=Vt),new ul(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}Wu.prototype.isWebGLCubeRenderTarget=!0;const Aa=new C,ny=new C,iy=new Rt;class In{constructor(e=new C(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Aa.subVectors(n,t).cross(ny.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Aa),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||iy.getNormalMatrix(e),i=this.coplanarPoint(Aa).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}In.prototype.isPlane=!0;const qi=new mr,zs=new C;class go{constructor(e=new In,t=new In,n=new In,i=new In,s=new In,o=new In){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],c=n[4],h=n[5],u=n[6],f=n[7],p=n[8],g=n[9],v=n[10],_=n[11],m=n[12],b=n[13],P=n[14],L=n[15];return t[0].setComponents(a-i,f-c,_-p,L-m).normalize(),t[1].setComponents(a+i,f+c,_+p,L+m).normalize(),t[2].setComponents(a+s,f+h,_+g,L+b).normalize(),t[3].setComponents(a-s,f-h,_-g,L-b).normalize(),t[4].setComponents(a-o,f-u,_-v,L-P).normalize(),t[5].setComponents(a+o,f+u,_+v,L+P).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),qi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(qi)}intersectsSprite(e){return qi.center.set(0,0,0),qi.radius=.7071067811865476,qi.applyMatrix4(e.matrixWorld),this.intersectsSphere(qi)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(zs.x=i.normal.x>0?e.max.x:e.min.x,zs.y=i.normal.y>0?e.max.y:e.min.y,zs.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(zs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function ju(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function ry(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,u){const f=h.array,p=h.usage,g=r.createBuffer();r.bindBuffer(u,g),r.bufferData(u,f,p),h.onUploadCallback();let v;if(f instanceof Float32Array)v=5126;else if(f instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=5123;else if(f instanceof Int16Array)v=5122;else if(f instanceof Uint32Array)v=5125;else if(f instanceof Int32Array)v=5124;else if(f instanceof Int8Array)v=5120;else if(f instanceof Uint8Array)v=5121;else if(f instanceof Uint8ClampedArray)v=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:h.version}}function s(h,u,f){const p=u.array,g=u.updateRange;r.bindBuffer(f,h),g.count===-1?r.bufferSubData(f,0,p):(t?r.bufferSubData(f,g.offset*p.BYTES_PER_ELEMENT,p,g.offset,g.count):r.bufferSubData(f,g.offset*p.BYTES_PER_ELEMENT,p.subarray(g.offset,g.offset+g.count)),g.count=-1)}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function a(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=n.get(h);u&&(r.deleteBuffer(u.buffer),n.delete(h))}function c(h,u){if(h.isGLBufferAttribute){const p=n.get(h);(!p||p.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f===void 0?n.set(h,i(h,u)):f.version<h.version&&(s(f.buffer,h,u),f.version=h.version)}return{get:o,remove:a,update:c}}class dl extends ct{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),h=a+1,u=c+1,f=e/a,p=t/c,g=[],v=[],_=[],m=[];for(let b=0;b<u;b++){const P=b*p-o;for(let L=0;L<h;L++){const M=L*f-s;v.push(M,-P,0),_.push(0,0,1),m.push(L/a),m.push(1-b/c)}}for(let b=0;b<c;b++)for(let P=0;P<a;P++){const L=P+h*b,M=P+h*(b+1),D=P+1+h*(b+1),N=P+1+h*b;g.push(L,M,N),g.push(M,D,N)}this.setIndex(g),this.setAttribute("position",new lt(v,3)),this.setAttribute("normal",new lt(_,3)),this.setAttribute("uv",new lt(m,2))}static fromJSON(e){return new dl(e.width,e.height,e.widthSegments,e.heightSegments)}}var sy=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,oy=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ay=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,ly=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,cy=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,hy=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,uy="vec3 transformed = vec3( position );",dy=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,fy=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,py=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,my=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,gy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,_y=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,vy=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,yy=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,xy=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,by=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,wy=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,My=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Sy=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ty=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Ey=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ay=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Cy=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Py=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Ry="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ly=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Dy=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Iy=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Oy=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Fy=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Ny=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,By=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,zy=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ky=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Uy=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Vy=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Hy=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Gy=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Wy=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,jy=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,qy=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Xy=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Yy=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Jy=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,$y=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Zy=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Ky=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Qy=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ex=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,tx=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,nx=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ix=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,rx=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,sx=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,ox=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,ax=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,lx=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,cx=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,hx=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ux=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,dx=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,fx=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,px=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,mx=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,gx=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,_x=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,vx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,xx=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,bx=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,wx=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Mx=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Sx=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Tx=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Ex=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Ax=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Cx=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Px=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Rx=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Lx=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Dx=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Ix=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Ox=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Fx=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Nx=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Bx=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,zx=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,kx=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ux=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Vx=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Hx=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Gx=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Wx=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,jx=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,qx=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Xx=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Yx=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Jx=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,$x=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Zx=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Kx=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Qx=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const eb=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,tb=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ib=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,rb=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,sb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ob=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ab=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,lb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,cb=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,hb=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ub=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,db=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,fb=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pb=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mb=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gb=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,_b=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vb=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,yb=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,xb=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bb=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wb=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Mb=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sb=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Tb=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Eb=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Ab=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cb=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pb=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Rb=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Lb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ze={alphamap_fragment:sy,alphamap_pars_fragment:oy,alphatest_fragment:ay,alphatest_pars_fragment:ly,aomap_fragment:cy,aomap_pars_fragment:hy,begin_vertex:uy,beginnormal_vertex:dy,bsdfs:fy,bumpmap_pars_fragment:py,clipping_planes_fragment:my,clipping_planes_pars_fragment:gy,clipping_planes_pars_vertex:_y,clipping_planes_vertex:vy,color_fragment:yy,color_pars_fragment:xy,color_pars_vertex:by,color_vertex:wy,common:My,cube_uv_reflection_fragment:Sy,defaultnormal_vertex:Ty,displacementmap_pars_vertex:Ey,displacementmap_vertex:Ay,emissivemap_fragment:Cy,emissivemap_pars_fragment:Py,encodings_fragment:Ry,encodings_pars_fragment:Ly,envmap_fragment:Dy,envmap_common_pars_fragment:Iy,envmap_pars_fragment:Oy,envmap_pars_vertex:Fy,envmap_physical_pars_fragment:qy,envmap_vertex:Ny,fog_vertex:By,fog_pars_vertex:zy,fog_fragment:ky,fog_pars_fragment:Uy,gradientmap_pars_fragment:Vy,lightmap_fragment:Hy,lightmap_pars_fragment:Gy,lights_lambert_vertex:Wy,lights_pars_begin:jy,lights_toon_fragment:Xy,lights_toon_pars_fragment:Yy,lights_phong_fragment:Jy,lights_phong_pars_fragment:$y,lights_physical_fragment:Zy,lights_physical_pars_fragment:Ky,lights_fragment_begin:Qy,lights_fragment_maps:ex,lights_fragment_end:tx,logdepthbuf_fragment:nx,logdepthbuf_pars_fragment:ix,logdepthbuf_pars_vertex:rx,logdepthbuf_vertex:sx,map_fragment:ox,map_pars_fragment:ax,map_particle_fragment:lx,map_particle_pars_fragment:cx,metalnessmap_fragment:hx,metalnessmap_pars_fragment:ux,morphcolor_vertex:dx,morphnormal_vertex:fx,morphtarget_pars_vertex:px,morphtarget_vertex:mx,normal_fragment_begin:gx,normal_fragment_maps:_x,normal_pars_fragment:vx,normal_pars_vertex:yx,normal_vertex:xx,normalmap_pars_fragment:bx,clearcoat_normal_fragment_begin:wx,clearcoat_normal_fragment_maps:Mx,clearcoat_pars_fragment:Sx,output_fragment:Tx,packing:Ex,premultiplied_alpha_fragment:Ax,project_vertex:Cx,dithering_fragment:Px,dithering_pars_fragment:Rx,roughnessmap_fragment:Lx,roughnessmap_pars_fragment:Dx,shadowmap_pars_fragment:Ix,shadowmap_pars_vertex:Ox,shadowmap_vertex:Fx,shadowmask_pars_fragment:Nx,skinbase_vertex:Bx,skinning_pars_vertex:zx,skinning_vertex:kx,skinnormal_vertex:Ux,specularmap_fragment:Vx,specularmap_pars_fragment:Hx,tonemapping_fragment:Gx,tonemapping_pars_fragment:Wx,transmission_fragment:jx,transmission_pars_fragment:qx,uv_pars_fragment:Xx,uv_pars_vertex:Yx,uv_vertex:Jx,uv2_pars_fragment:$x,uv2_pars_vertex:Zx,uv2_vertex:Kx,worldpos_vertex:Qx,background_vert:eb,background_frag:tb,cube_vert:nb,cube_frag:ib,depth_vert:rb,depth_frag:sb,distanceRGBA_vert:ob,distanceRGBA_frag:ab,equirect_vert:lb,equirect_frag:cb,linedashed_vert:hb,linedashed_frag:ub,meshbasic_vert:db,meshbasic_frag:fb,meshlambert_vert:pb,meshlambert_frag:mb,meshmatcap_vert:gb,meshmatcap_frag:_b,meshnormal_vert:vb,meshnormal_frag:yb,meshphong_vert:xb,meshphong_frag:bb,meshphysical_vert:wb,meshphysical_frag:Mb,meshtoon_vert:Sb,meshtoon_frag:Tb,points_vert:Eb,points_frag:Ab,shadow_vert:Cb,shadow_frag:Pb,sprite_vert:Rb,sprite_frag:Lb},be={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Rt},uv2Transform:{value:new Rt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Rt}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Rt}}},bn={basic:{uniforms:Dt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.fog]),vertexShader:Ze.meshbasic_vert,fragmentShader:Ze.meshbasic_frag},lambert:{uniforms:Dt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.fog,be.lights,{emissive:{value:new Le(0)}}]),vertexShader:Ze.meshlambert_vert,fragmentShader:Ze.meshlambert_frag},phong:{uniforms:Dt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.fog,be.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:Ze.meshphong_vert,fragmentShader:Ze.meshphong_frag},standard:{uniforms:Dt([be.common,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.roughnessmap,be.metalnessmap,be.fog,be.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag},toon:{uniforms:Dt([be.common,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.gradientmap,be.fog,be.lights,{emissive:{value:new Le(0)}}]),vertexShader:Ze.meshtoon_vert,fragmentShader:Ze.meshtoon_frag},matcap:{uniforms:Dt([be.common,be.bumpmap,be.normalmap,be.displacementmap,be.fog,{matcap:{value:null}}]),vertexShader:Ze.meshmatcap_vert,fragmentShader:Ze.meshmatcap_frag},points:{uniforms:Dt([be.points,be.fog]),vertexShader:Ze.points_vert,fragmentShader:Ze.points_frag},dashed:{uniforms:Dt([be.common,be.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ze.linedashed_vert,fragmentShader:Ze.linedashed_frag},depth:{uniforms:Dt([be.common,be.displacementmap]),vertexShader:Ze.depth_vert,fragmentShader:Ze.depth_frag},normal:{uniforms:Dt([be.common,be.bumpmap,be.normalmap,be.displacementmap,{opacity:{value:1}}]),vertexShader:Ze.meshnormal_vert,fragmentShader:Ze.meshnormal_frag},sprite:{uniforms:Dt([be.sprite,be.fog]),vertexShader:Ze.sprite_vert,fragmentShader:Ze.sprite_frag},background:{uniforms:{uvTransform:{value:new Rt},t2D:{value:null}},vertexShader:Ze.background_vert,fragmentShader:Ze.background_frag},cube:{uniforms:Dt([be.envmap,{opacity:{value:1}}]),vertexShader:Ze.cube_vert,fragmentShader:Ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ze.equirect_vert,fragmentShader:Ze.equirect_frag},distanceRGBA:{uniforms:Dt([be.common,be.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ze.distanceRGBA_vert,fragmentShader:Ze.distanceRGBA_frag},shadow:{uniforms:Dt([be.lights,be.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:Ze.shadow_vert,fragmentShader:Ze.shadow_frag}};bn.physical={uniforms:Dt([bn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new le(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag};function Db(r,e,t,n,i,s){const o=new Le(0);let a=i===!0?0:1,c,h,u=null,f=0,p=null;function g(_,m){let b=!1,P=m.isScene===!0?m.background:null;P&&P.isTexture&&(P=e.get(P));const L=r.xr,M=L.getSession&&L.getSession();M&&M.environmentBlendMode==="additive"&&(P=null),P===null?v(o,a):P&&P.isColor&&(v(P,1),b=!0),(r.autoClear||b)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),P&&(P.isCubeTexture||P.mapping===ho)?(h===void 0&&(h=new Ht(new rs(1,1,1),new pn({name:"BackgroundCubeMaterial",uniforms:ur(bn.cube.uniforms),vertexShader:bn.cube.vertexShader,fragmentShader:bn.cube.fragmentShader,side:fn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(D,N,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=P,h.material.uniforms.flipEnvMap.value=P.isCubeTexture&&P.isRenderTargetTexture===!1?-1:1,(u!==P||f!==P.version||p!==r.toneMapping)&&(h.material.needsUpdate=!0,u=P,f=P.version,p=r.toneMapping),h.layers.enableAll(),_.unshift(h,h.geometry,h.material,0,0,null)):P&&P.isTexture&&(c===void 0&&(c=new Ht(new dl(2,2),new pn({name:"BackgroundMaterial",uniforms:ur(bn.background.uniforms),vertexShader:bn.background.vertexShader,fragmentShader:bn.background.fragmentShader,side:Yr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=P,P.matrixAutoUpdate===!0&&P.updateMatrix(),c.material.uniforms.uvTransform.value.copy(P.matrix),(u!==P||f!==P.version||p!==r.toneMapping)&&(c.material.needsUpdate=!0,u=P,f=P.version,p=r.toneMapping),c.layers.enableAll(),_.unshift(c,c.geometry,c.material,0,0,null))}function v(_,m){t.buffers.color.setClear(_.r,_.g,_.b,m,s)}return{getClearColor:function(){return o},setClearColor:function(_,m=1){o.set(_),a=m,v(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(_){a=_,v(o,a)},render:g}}function Ib(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},c=m(null);let h=c,u=!1;function f(z,W,j,te,ie){let Y=!1;if(o){const K=_(te,j,W);h!==K&&(h=K,g(h.object)),Y=b(z,te,j,ie),Y&&P(z,te,j,ie)}else{const K=W.wireframe===!0;(h.geometry!==te.id||h.program!==j.id||h.wireframe!==K)&&(h.geometry=te.id,h.program=j.id,h.wireframe=K,Y=!0)}ie!==null&&t.update(ie,34963),(Y||u)&&(u=!1,T(z,W,j,te),ie!==null&&r.bindBuffer(34963,t.get(ie).buffer))}function p(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function g(z){return n.isWebGL2?r.bindVertexArray(z):s.bindVertexArrayOES(z)}function v(z){return n.isWebGL2?r.deleteVertexArray(z):s.deleteVertexArrayOES(z)}function _(z,W,j){const te=j.wireframe===!0;let ie=a[z.id];ie===void 0&&(ie={},a[z.id]=ie);let Y=ie[W.id];Y===void 0&&(Y={},ie[W.id]=Y);let K=Y[te];return K===void 0&&(K=m(p()),Y[te]=K),K}function m(z){const W=[],j=[],te=[];for(let ie=0;ie<i;ie++)W[ie]=0,j[ie]=0,te[ie]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:j,attributeDivisors:te,object:z,attributes:{},index:null}}function b(z,W,j,te){const ie=h.attributes,Y=W.attributes;let K=0;const he=j.getAttributes();for(const re in he)if(he[re].location>=0){const Ce=ie[re];let De=Y[re];if(De===void 0&&(re==="instanceMatrix"&&z.instanceMatrix&&(De=z.instanceMatrix),re==="instanceColor"&&z.instanceColor&&(De=z.instanceColor)),Ce===void 0||Ce.attribute!==De||De&&Ce.data!==De.data)return!0;K++}return h.attributesNum!==K||h.index!==te}function P(z,W,j,te){const ie={},Y=W.attributes;let K=0;const he=j.getAttributes();for(const re in he)if(he[re].location>=0){let Ce=Y[re];Ce===void 0&&(re==="instanceMatrix"&&z.instanceMatrix&&(Ce=z.instanceMatrix),re==="instanceColor"&&z.instanceColor&&(Ce=z.instanceColor));const De={};De.attribute=Ce,Ce&&Ce.data&&(De.data=Ce.data),ie[re]=De,K++}h.attributes=ie,h.attributesNum=K,h.index=te}function L(){const z=h.newAttributes;for(let W=0,j=z.length;W<j;W++)z[W]=0}function M(z){D(z,0)}function D(z,W){const j=h.newAttributes,te=h.enabledAttributes,ie=h.attributeDivisors;j[z]=1,te[z]===0&&(r.enableVertexAttribArray(z),te[z]=1),ie[z]!==W&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,W),ie[z]=W)}function N(){const z=h.newAttributes,W=h.enabledAttributes;for(let j=0,te=W.length;j<te;j++)W[j]!==z[j]&&(r.disableVertexAttribArray(j),W[j]=0)}function U(z,W,j,te,ie,Y){n.isWebGL2===!0&&(j===5124||j===5125)?r.vertexAttribIPointer(z,W,j,ie,Y):r.vertexAttribPointer(z,W,j,te,ie,Y)}function T(z,W,j,te){if(n.isWebGL2===!1&&(z.isInstancedMesh||te.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;L();const ie=te.attributes,Y=j.getAttributes(),K=W.defaultAttributeValues;for(const he in Y){const re=Y[he];if(re.location>=0){let _e=ie[he];if(_e===void 0&&(he==="instanceMatrix"&&z.instanceMatrix&&(_e=z.instanceMatrix),he==="instanceColor"&&z.instanceColor&&(_e=z.instanceColor)),_e!==void 0){const Ce=_e.normalized,De=_e.itemSize,Z=t.get(_e);if(Z===void 0)continue;const Ke=Z.buffer,Ne=Z.type,We=Z.bytesPerElement;if(_e.isInterleavedBufferAttribute){const de=_e.data,Ye=de.stride,ne=_e.offset;if(de.isInstancedInterleavedBuffer){for(let ee=0;ee<re.locationSize;ee++)D(re.location+ee,de.meshPerAttribute);z.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let ee=0;ee<re.locationSize;ee++)M(re.location+ee);r.bindBuffer(34962,Ke);for(let ee=0;ee<re.locationSize;ee++)U(re.location+ee,De/re.locationSize,Ne,Ce,Ye*We,(ne+De/re.locationSize*ee)*We)}else{if(_e.isInstancedBufferAttribute){for(let de=0;de<re.locationSize;de++)D(re.location+de,_e.meshPerAttribute);z.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let de=0;de<re.locationSize;de++)M(re.location+de);r.bindBuffer(34962,Ke);for(let de=0;de<re.locationSize;de++)U(re.location+de,De/re.locationSize,Ne,Ce,De*We,De/re.locationSize*de*We)}}else if(K!==void 0){const Ce=K[he];if(Ce!==void 0)switch(Ce.length){case 2:r.vertexAttrib2fv(re.location,Ce);break;case 3:r.vertexAttrib3fv(re.location,Ce);break;case 4:r.vertexAttrib4fv(re.location,Ce);break;default:r.vertexAttrib1fv(re.location,Ce)}}}}N()}function O(){se();for(const z in a){const W=a[z];for(const j in W){const te=W[j];for(const ie in te)v(te[ie].object),delete te[ie];delete W[j]}delete a[z]}}function H(z){if(a[z.id]===void 0)return;const W=a[z.id];for(const j in W){const te=W[j];for(const ie in te)v(te[ie].object),delete te[ie];delete W[j]}delete a[z.id]}function V(z){for(const W in a){const j=a[W];if(j[z.id]===void 0)continue;const te=j[z.id];for(const ie in te)v(te[ie].object),delete te[ie];delete j[z.id]}}function se(){ce(),u=!0,h!==c&&(h=c,g(h.object))}function ce(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:f,reset:se,resetDefaultState:ce,dispose:O,releaseStatesOfGeometry:H,releaseStatesOfProgram:V,initAttributes:L,enableAttribute:M,disableUnusedAttributes:N}}function Ob(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function a(h,u){r.drawArrays(s,h,u),t.update(u,s,1)}function c(h,u,f){if(f===0)return;let p,g;if(i)p=r,g="drawArraysInstanced";else if(p=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[g](s,h,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=c}function Fb(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(U){if(U==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const h=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=r.getParameter(34930),p=r.getParameter(35660),g=r.getParameter(3379),v=r.getParameter(34076),_=r.getParameter(34921),m=r.getParameter(36347),b=r.getParameter(36348),P=r.getParameter(36349),L=p>0,M=o||e.has("OES_texture_float"),D=L&&M,N=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:v,maxAttributes:_,maxVertexUniforms:m,maxVaryings:b,maxFragmentUniforms:P,vertexTextures:L,floatFragmentTextures:M,floatVertexTextures:D,maxSamples:N}}function Nb(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new In,a=new Rt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(f,p,g){const v=f.length!==0||p||n!==0||i;return i=p,t=u(f,g,0),n=f.length,v},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(f,p,g){const v=f.clippingPlanes,_=f.clipIntersection,m=f.clipShadows,b=r.get(f);if(!i||v===null||v.length===0||s&&!m)s?u(null):h();else{const P=s?0:n,L=P*4;let M=b.clippingState||null;c.value=M,M=u(v,p,L,g);for(let D=0;D!==L;++D)M[D]=t[D];b.clippingState=M,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=P}};function h(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,p,g,v){const _=f!==null?f.length:0;let m=null;if(_!==0){if(m=c.value,v!==!0||m===null){const b=g+_*4,P=p.matrixWorldInverse;a.getNormalMatrix(P),(m===null||m.length<b)&&(m=new Float32Array(b));for(let L=0,M=g;L!==_;++L,M+=4)o.copy(f[L]).applyMatrix4(P,a),o.normal.toArray(m,M),m[M+3]=o.constant}c.value=m,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,m}}function Bb(r){let e=new WeakMap;function t(o,a){return a===Va?o.mapping=lr:a===Ha&&(o.mapping=cr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Va||a===Ha)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const h=new Wu(c.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class fl extends hl{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}fl.prototype.isOrthographicCamera=!0;const tr=4,Ph=[.125,.215,.35,.446,.526,.582],_i=20,Ca=new fl,Rh=new Le;let Pa=null;const gi=(1+Math.sqrt(5))/2,Xi=1/gi,Lh=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,gi,Xi),new C(0,gi,-Xi),new C(Xi,0,gi),new C(-Xi,0,gi),new C(gi,Xi,0),new C(-gi,Xi,0)];class Dh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Pa=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Fh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Oh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pa),e.scissorTest=!1,ks(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===lr||e.mapping===cr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pa=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Vt,minFilter:Vt,generateMipmaps:!1,type:$r,format:sn,encoding:ei,depthBuffer:!1},i=Ih(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ih(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=zb(s)),this._blurMaterial=kb(s,e,t)}return i}_compileMaterial(e){const t=new Ht(this._lodPlanes[0],e);this._renderer.compile(t,Ca)}_sceneToCubeUV(e,t,n,i){const a=new Ft(90,1,t,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,p=u.toneMapping;u.getClearColor(Rh),u.toneMapping=Fn,u.autoClear=!1;const g=new po({name:"PMREM.Background",side:fn,depthWrite:!1,depthTest:!1}),v=new Ht(new rs,g);let _=!1;const m=e.background;m?m.isColor&&(g.color.copy(m),e.background=null,_=!0):(g.color.copy(Rh),_=!0);for(let b=0;b<6;b++){const P=b%3;P===0?(a.up.set(0,c[b],0),a.lookAt(h[b],0,0)):P===1?(a.up.set(0,0,c[b]),a.lookAt(0,h[b],0)):(a.up.set(0,c[b],0),a.lookAt(0,0,h[b]));const L=this._cubeSize;ks(i,P*L,b>2?L:0,L,L),u.setRenderTarget(i),_&&u.render(v,a),u.render(e,a)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=p,u.autoClear=f,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===lr||e.mapping===cr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Fh()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Oh());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new Ht(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const c=this._cubeSize;ks(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,Ca)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Lh[(i-1)%Lh.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const c=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new Ht(this._lodPlanes[i],h),p=h.uniforms,g=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*_i-1),_=s/v,m=isFinite(s)?1+Math.floor(u*_):_i;m>_i&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${_i}`);const b=[];let P=0;for(let U=0;U<_i;++U){const T=U/_,O=Math.exp(-T*T/2);b.push(O),U===0?P+=O:U<m&&(P+=2*O)}for(let U=0;U<b.length;U++)b[U]=b[U]/P;p.envMap.value=e.texture,p.samples.value=m,p.weights.value=b,p.latitudinal.value=o==="latitudinal",a&&(p.poleAxis.value=a);const{_lodMax:L}=this;p.dTheta.value=v,p.mipInt.value=L-n;const M=this._sizeLods[i],D=3*M*(i>L-tr?i-L+tr:0),N=4*(this._cubeSize-M);ks(t,D,N,3*M,2*M),c.setRenderTarget(t),c.render(f,Ca)}}function zb(r){const e=[],t=[],n=[];let i=r;const s=r-tr+1+Ph.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>r-tr?c=Ph[o-r+tr-1]:o===0&&(c=0),n.push(c);const h=1/(a-2),u=-h,f=1+h,p=[u,u,f,u,f,f,u,u,f,f,u,f],g=6,v=6,_=3,m=2,b=1,P=new Float32Array(_*v*g),L=new Float32Array(m*v*g),M=new Float32Array(b*v*g);for(let N=0;N<g;N++){const U=N%3*2/3-1,T=N>2?0:-1,O=[U,T,0,U+2/3,T,0,U+2/3,T+1,0,U,T,0,U+2/3,T+1,0,U,T+1,0];P.set(O,_*v*N),L.set(p,m*v*N);const H=[N,N,N,N,N,N];M.set(H,b*v*N)}const D=new ct;D.setAttribute("position",new xt(P,_)),D.setAttribute("uv",new xt(L,m)),D.setAttribute("faceIndex",new xt(M,b)),e.push(D),i>tr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Ih(r,e,t){const n=new Jt(r,e,t);return n.texture.mapping=ho,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ks(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function kb(r,e,t){const n=new Float32Array(_i),i=new C(0,1,0);return new pn({name:"SphericalGaussianBlur",defines:{n:_i,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:pl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function Oh(){return new pn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:pl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function Fh(){return new pn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:pl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function pl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ub(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,h=c===Va||c===Ha,u=c===lr||c===cr;if(h||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new Dh(r)),f=h?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(h&&f&&f.height>0||u&&f&&i(f)){t===null&&(t=new Dh(r));const p=h?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,p),a.addEventListener("dispose",s),p.texture}else return null}}}return a}function i(a){let c=0;const h=6;for(let u=0;u<h;u++)a[u]!==void 0&&c++;return c===h}function s(a){const c=a.target;c.removeEventListener("dispose",s);const h=e.get(c);h!==void 0&&(e.delete(c),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Vb(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Hb(r,e,t,n){const i={},s=new WeakMap;function o(f){const p=f.target;p.index!==null&&e.remove(p.index);for(const v in p.attributes)e.remove(p.attributes[v]);p.removeEventListener("dispose",o),delete i[p.id];const g=s.get(p);g&&(e.remove(g),s.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function a(f,p){return i[p.id]===!0||(p.addEventListener("dispose",o),i[p.id]=!0,t.memory.geometries++),p}function c(f){const p=f.attributes;for(const v in p)e.update(p[v],34962);const g=f.morphAttributes;for(const v in g){const _=g[v];for(let m=0,b=_.length;m<b;m++)e.update(_[m],34962)}}function h(f){const p=[],g=f.index,v=f.attributes.position;let _=0;if(g!==null){const P=g.array;_=g.version;for(let L=0,M=P.length;L<M;L+=3){const D=P[L+0],N=P[L+1],U=P[L+2];p.push(D,N,N,U,U,D)}}else{const P=v.array;_=v.version;for(let L=0,M=P.length/3-1;L<M;L+=3){const D=L+0,N=L+1,U=L+2;p.push(D,N,N,U,U,D)}}const m=new(ku(p)?Gu:Hu)(p,1);m.version=_;const b=s.get(f);b&&e.remove(b),s.set(f,m)}function u(f){const p=s.get(f);if(p){const g=f.index;g!==null&&p.version<g.version&&h(f)}else h(f);return s.get(f)}return{get:a,update:c,getWireframeAttribute:u}}function Gb(r,e,t,n){const i=n.isWebGL2;let s;function o(p){s=p}let a,c;function h(p){a=p.type,c=p.bytesPerElement}function u(p,g){r.drawElements(s,g,a,p*c),t.update(g,s,1)}function f(p,g,v){if(v===0)return;let _,m;if(i)_=r,m="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[m](s,g,a,p*c,v),t.update(g,s,v)}this.setMode=o,this.setIndex=h,this.render=u,this.renderInstances=f}function Wb(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function jb(r,e){return r[0]-e[0]}function qb(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ra(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function Xb(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new at,a=[];for(let h=0;h<8;h++)a[h]=[h,0];function c(h,u,f,p){const g=h.morphTargetInfluences;if(e.isWebGL2===!0){const v=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,_=v!==void 0?v.length:0;let m=s.get(u);if(m===void 0||m.count!==_){let W=function(){ce.dispose(),s.delete(u),u.removeEventListener("dispose",W)};m!==void 0&&m.texture.dispose();const L=u.morphAttributes.position!==void 0,M=u.morphAttributes.normal!==void 0,D=u.morphAttributes.color!==void 0,N=u.morphAttributes.position||[],U=u.morphAttributes.normal||[],T=u.morphAttributes.color||[];let O=0;L===!0&&(O=1),M===!0&&(O=2),D===!0&&(O=3);let H=u.attributes.position.count*O,V=1;H>e.maxTextureSize&&(V=Math.ceil(H/e.maxTextureSize),H=e.maxTextureSize);const se=new Float32Array(H*V*4*_),ce=new fo(se,H,V,_);ce.type=$n,ce.needsUpdate=!0;const z=O*4;for(let j=0;j<_;j++){const te=N[j],ie=U[j],Y=T[j],K=H*V*4*j;for(let he=0;he<te.count;he++){const re=he*z;L===!0&&(o.fromBufferAttribute(te,he),te.normalized===!0&&Ra(o,te),se[K+re+0]=o.x,se[K+re+1]=o.y,se[K+re+2]=o.z,se[K+re+3]=0),M===!0&&(o.fromBufferAttribute(ie,he),ie.normalized===!0&&Ra(o,ie),se[K+re+4]=o.x,se[K+re+5]=o.y,se[K+re+6]=o.z,se[K+re+7]=0),D===!0&&(o.fromBufferAttribute(Y,he),Y.normalized===!0&&Ra(o,Y),se[K+re+8]=o.x,se[K+re+9]=o.y,se[K+re+10]=o.z,se[K+re+11]=Y.itemSize===4?o.w:1)}}m={count:_,texture:ce,size:new le(H,V)},s.set(u,m),u.addEventListener("dispose",W)}let b=0;for(let L=0;L<g.length;L++)b+=g[L];const P=u.morphTargetsRelative?1:1-b;p.getUniforms().setValue(r,"morphTargetBaseInfluence",P),p.getUniforms().setValue(r,"morphTargetInfluences",g),p.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}else{const v=g===void 0?0:g.length;let _=n[u.id];if(_===void 0||_.length!==v){_=[];for(let M=0;M<v;M++)_[M]=[M,0];n[u.id]=_}for(let M=0;M<v;M++){const D=_[M];D[0]=M,D[1]=g[M]}_.sort(qb);for(let M=0;M<8;M++)M<v&&_[M][1]?(a[M][0]=_[M][0],a[M][1]=_[M][1]):(a[M][0]=Number.MAX_SAFE_INTEGER,a[M][1]=0);a.sort(jb);const m=u.morphAttributes.position,b=u.morphAttributes.normal;let P=0;for(let M=0;M<8;M++){const D=a[M],N=D[0],U=D[1];N!==Number.MAX_SAFE_INTEGER&&U?(m&&u.getAttribute("morphTarget"+M)!==m[N]&&u.setAttribute("morphTarget"+M,m[N]),b&&u.getAttribute("morphNormal"+M)!==b[N]&&u.setAttribute("morphNormal"+M,b[N]),i[M]=U,P+=U):(m&&u.hasAttribute("morphTarget"+M)===!0&&u.deleteAttribute("morphTarget"+M),b&&u.hasAttribute("morphNormal"+M)===!0&&u.deleteAttribute("morphNormal"+M),i[M]=0)}const L=u.morphTargetsRelative?1:1-P;p.getUniforms().setValue(r,"morphTargetBaseInfluence",L),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function Yb(r,e,t,n){let i=new WeakMap;function s(c){const h=n.render.frame,u=c.geometry,f=e.get(c,u);return i.get(f)!==h&&(e.update(f),i.set(f,h)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),f}function o(){i=new WeakMap}function a(c){const h=c.target;h.removeEventListener("dispose",a),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const qu=new Tt,Xu=new fo,Yu=new cl,Ju=new mo,Nh=[],Bh=[],zh=new Float32Array(16),kh=new Float32Array(9),Uh=new Float32Array(4);function _r(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Nh[i];if(s===void 0&&(s=new Float32Array(i),Nh[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Nt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Bt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function _o(r,e){let t=Bh[e];t===void 0&&(t=new Int32Array(e),Bh[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Jb(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function $b(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nt(t,e))return;r.uniform2fv(this.addr,e),Bt(t,e)}}function Zb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Nt(t,e))return;r.uniform3fv(this.addr,e),Bt(t,e)}}function Kb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nt(t,e))return;r.uniform4fv(this.addr,e),Bt(t,e)}}function Qb(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Bt(t,e)}else{if(Nt(t,n))return;Uh.set(n),r.uniformMatrix2fv(this.addr,!1,Uh),Bt(t,n)}}function ew(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Bt(t,e)}else{if(Nt(t,n))return;kh.set(n),r.uniformMatrix3fv(this.addr,!1,kh),Bt(t,n)}}function tw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Bt(t,e)}else{if(Nt(t,n))return;zh.set(n),r.uniformMatrix4fv(this.addr,!1,zh),Bt(t,n)}}function nw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function iw(r,e){const t=this.cache;Nt(t,e)||(r.uniform2iv(this.addr,e),Bt(t,e))}function rw(r,e){const t=this.cache;Nt(t,e)||(r.uniform3iv(this.addr,e),Bt(t,e))}function sw(r,e){const t=this.cache;Nt(t,e)||(r.uniform4iv(this.addr,e),Bt(t,e))}function ow(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function aw(r,e){const t=this.cache;Nt(t,e)||(r.uniform2uiv(this.addr,e),Bt(t,e))}function lw(r,e){const t=this.cache;Nt(t,e)||(r.uniform3uiv(this.addr,e),Bt(t,e))}function cw(r,e){const t=this.cache;Nt(t,e)||(r.uniform4uiv(this.addr,e),Bt(t,e))}function hw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||qu,i)}function uw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Yu,i)}function dw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ju,i)}function fw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Xu,i)}function pw(r){switch(r){case 5126:return Jb;case 35664:return $b;case 35665:return Zb;case 35666:return Kb;case 35674:return Qb;case 35675:return ew;case 35676:return tw;case 5124:case 35670:return nw;case 35667:case 35671:return iw;case 35668:case 35672:return rw;case 35669:case 35673:return sw;case 5125:return ow;case 36294:return aw;case 36295:return lw;case 36296:return cw;case 35678:case 36198:case 36298:case 36306:case 35682:return hw;case 35679:case 36299:case 36307:return uw;case 35680:case 36300:case 36308:case 36293:return dw;case 36289:case 36303:case 36311:case 36292:return fw}}function mw(r,e){r.uniform1fv(this.addr,e)}function gw(r,e){const t=_r(e,this.size,2);r.uniform2fv(this.addr,t)}function _w(r,e){const t=_r(e,this.size,3);r.uniform3fv(this.addr,t)}function vw(r,e){const t=_r(e,this.size,4);r.uniform4fv(this.addr,t)}function yw(r,e){const t=_r(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function xw(r,e){const t=_r(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function bw(r,e){const t=_r(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function ww(r,e){r.uniform1iv(this.addr,e)}function Mw(r,e){r.uniform2iv(this.addr,e)}function Sw(r,e){r.uniform3iv(this.addr,e)}function Tw(r,e){r.uniform4iv(this.addr,e)}function Ew(r,e){r.uniform1uiv(this.addr,e)}function Aw(r,e){r.uniform2uiv(this.addr,e)}function Cw(r,e){r.uniform3uiv(this.addr,e)}function Pw(r,e){r.uniform4uiv(this.addr,e)}function Rw(r,e,t){const n=e.length,i=_o(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||qu,i[s])}function Lw(r,e,t){const n=e.length,i=_o(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Yu,i[s])}function Dw(r,e,t){const n=e.length,i=_o(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Ju,i[s])}function Iw(r,e,t){const n=e.length,i=_o(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Xu,i[s])}function Ow(r){switch(r){case 5126:return mw;case 35664:return gw;case 35665:return _w;case 35666:return vw;case 35674:return yw;case 35675:return xw;case 35676:return bw;case 5124:case 35670:return ww;case 35667:case 35671:return Mw;case 35668:case 35672:return Sw;case 35669:case 35673:return Tw;case 5125:return Ew;case 36294:return Aw;case 36295:return Cw;case 36296:return Pw;case 35678:case 36198:case 36298:case 36306:case 35682:return Rw;case 35679:case 36299:case 36307:return Lw;case 35680:case 36300:case 36308:case 36293:return Dw;case 36289:case 36303:case 36311:case 36292:return Iw}}function Fw(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=pw(e.type)}function Nw(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=Ow(e.type)}function $u(r){this.id=r,this.seq=[],this.map={}}$u.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const La=/(\w+)(\])?(\[|\.)?/g;function Vh(r,e){r.seq.push(e),r.map[e.id]=e}function Bw(r,e,t){const n=r.name,i=n.length;for(La.lastIndex=0;;){const s=La.exec(n),o=La.lastIndex;let a=s[1];const c=s[2]==="]",h=s[3];if(c&&(a=a|0),h===void 0||h==="["&&o+2===i){Vh(t,h===void 0?new Fw(a,r,e):new Nw(a,r,e));break}else{let f=t.map[a];f===void 0&&(f=new $u(a),Vh(t,f)),t=f}}}function Kn(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);Bw(i,s,this)}}Kn.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};Kn.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};Kn.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(r,a.value,n)}};Kn.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function Hh(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let zw=0;function kw(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function Uw(r){switch(r){case ei:return["Linear","( value )"];case dt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Gh(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[0]);return t.toUpperCase()+`

`+i+`

`+kw(r.getShaderSource(e),o)}else return i}function Vw(r,e){const t=Uw(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Hw(r,e){let t;switch(e){case Y_:t="Linear";break;case J_:t="Reinhard";break;case $_:t="OptimizedCineon";break;case Z_:t="ACESFilmic";break;case K_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Gw(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Hr).join(`
`)}function Ww(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function jw(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function Hr(r){return r!==""}function Wh(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function jh(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const qw=/^[ \t]*#include +<([\w\d./]+)>/gm;function Xa(r){return r.replace(qw,Xw)}function Xw(r,e){const t=Ze[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Xa(t)}const Yw=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Jw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function qh(r){return r.replace(Jw,Zu).replace(Yw,$w)}function $w(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Zu(r,e,t,n)}function Zu(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Xh(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Zw(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Du?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===E_?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Vr&&(e="SHADOWMAP_TYPE_VSM"),e}function Kw(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case lr:case cr:e="ENVMAP_TYPE_CUBE";break;case ho:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Qw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case cr:e="ENVMAP_MODE_REFRACTION";break}return e}function eM(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case co:e="ENVMAP_BLENDING_MULTIPLY";break;case q_:e="ENVMAP_BLENDING_MIX";break;case X_:e="ENVMAP_BLENDING_ADD";break}return e}function tM(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function nM(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=Zw(t),h=Kw(t),u=Qw(t),f=eM(t),p=tM(t),g=t.isWebGL2?"":Gw(t),v=Ww(s),_=i.createProgram();let m,b,P=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[v].filter(Hr).join(`
`),m.length>0&&(m+=`
`),b=[g,v].filter(Hr).join(`
`),b.length>0&&(b+=`
`)):(m=[Xh(t),"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Hr).join(`
`),b=[g,Xh(t),"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Fn?"#define TONE_MAPPING":"",t.toneMapping!==Fn?Ze.tonemapping_pars_fragment:"",t.toneMapping!==Fn?Hw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ze.encodings_pars_fragment,Vw("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Hr).join(`
`)),o=Xa(o),o=Wh(o,t),o=jh(o,t),a=Xa(a),a=Wh(a,t),a=jh(a,t),o=qh(o),a=qh(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(P=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,b=["#define varying in",t.glslVersion===gh?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===gh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+b);const L=P+m+o,M=P+b+a,D=Hh(i,35633,L),N=Hh(i,35632,M);if(i.attachShader(_,D),i.attachShader(_,N),t.index0AttributeName!==void 0?i.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),r.debug.checkShaderErrors){const O=i.getProgramInfoLog(_).trim(),H=i.getShaderInfoLog(D).trim(),V=i.getShaderInfoLog(N).trim();let se=!0,ce=!0;if(i.getProgramParameter(_,35714)===!1){se=!1;const z=Gh(i,D,"vertex"),W=Gh(i,N,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,35715)+`

Program Info Log: `+O+`
`+z+`
`+W)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(H===""||V==="")&&(ce=!1);ce&&(this.diagnostics={runnable:se,programLog:O,vertexShader:{log:H,prefix:m},fragmentShader:{log:V,prefix:b}})}i.deleteShader(D),i.deleteShader(N);let U;this.getUniforms=function(){return U===void 0&&(U=new Kn(i,_)),U};let T;return this.getAttributes=function(){return T===void 0&&(T=jw(i,_)),T},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.name=t.shaderName,this.id=zw++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=D,this.fragmentShader=N,this}let iM=0;class rM{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new sM(e);t.set(e,n)}return t.get(e)}}class sM{constructor(e){this.id=iM++,this.code=e,this.usedTimes=0}}function oM(r,e,t,n,i,s,o){const a=new Vu,c=new rM,h=[],u=i.isWebGL2,f=i.logarithmicDepthBuffer,p=i.vertexTextures;let g=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(T,O,H,V,se){const ce=V.fog,z=se.geometry,W=T.isMeshStandardMaterial?V.environment:null,j=(T.isMeshStandardMaterial?t:e).get(T.envMap||W),te=!!j&&j.mapping===ho?j.image.height:null,ie=v[T.type];T.precision!==null&&(g=i.getMaxPrecision(T.precision),g!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",g,"instead."));const Y=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,K=Y!==void 0?Y.length:0;let he=0;z.morphAttributes.position!==void 0&&(he=1),z.morphAttributes.normal!==void 0&&(he=2),z.morphAttributes.color!==void 0&&(he=3);let re,_e,Ce,De;if(ie){const de=bn[ie];re=de.vertexShader,_e=de.fragmentShader}else re=T.vertexShader,_e=T.fragmentShader,c.update(T),Ce=c.getVertexShaderID(T),De=c.getFragmentShaderID(T);const Z=r.getRenderTarget(),Ke=T.alphaTest>0,Ne=T.clearcoat>0;return{isWebGL2:u,shaderID:ie,shaderName:T.type,vertexShader:re,fragmentShader:_e,defines:T.defines,customVertexShaderID:Ce,customFragmentShaderID:De,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:g,instancing:se.isInstancedMesh===!0,instancingColor:se.isInstancedMesh===!0&&se.instanceColor!==null,supportsVertexTextures:p,outputEncoding:Z===null?r.outputEncoding:Z.isXRRenderTarget===!0?Z.texture.encoding:ei,map:!!T.map,matcap:!!T.matcap,envMap:!!j,envMapMode:j&&j.mapping,envMapCubeUVHeight:te,lightMap:!!T.lightMap,aoMap:!!T.aoMap,emissiveMap:!!T.emissiveMap,bumpMap:!!T.bumpMap,normalMap:!!T.normalMap,objectSpaceNormalMap:T.normalMapType===bv,tangentSpaceNormalMap:T.normalMapType===pr,decodeVideoTexture:!!T.map&&T.map.isVideoTexture===!0&&T.map.encoding===dt,clearcoat:Ne,clearcoatMap:Ne&&!!T.clearcoatMap,clearcoatRoughnessMap:Ne&&!!T.clearcoatRoughnessMap,clearcoatNormalMap:Ne&&!!T.clearcoatNormalMap,displacementMap:!!T.displacementMap,roughnessMap:!!T.roughnessMap,metalnessMap:!!T.metalnessMap,specularMap:!!T.specularMap,specularIntensityMap:!!T.specularIntensityMap,specularColorMap:!!T.specularColorMap,opaque:T.transparent===!1&&T.blending===rr,alphaMap:!!T.alphaMap,alphaTest:Ke,gradientMap:!!T.gradientMap,sheen:T.sheen>0,sheenColorMap:!!T.sheenColorMap,sheenRoughnessMap:!!T.sheenRoughnessMap,transmission:T.transmission>0,transmissionMap:!!T.transmissionMap,thicknessMap:!!T.thicknessMap,combine:T.combine,vertexTangents:!!T.normalMap&&!!z.attributes.tangent,vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUvs:!!T.map||!!T.bumpMap||!!T.normalMap||!!T.specularMap||!!T.alphaMap||!!T.emissiveMap||!!T.roughnessMap||!!T.metalnessMap||!!T.clearcoatMap||!!T.clearcoatRoughnessMap||!!T.clearcoatNormalMap||!!T.displacementMap||!!T.transmissionMap||!!T.thicknessMap||!!T.specularIntensityMap||!!T.specularColorMap||!!T.sheenColorMap||!!T.sheenRoughnessMap,uvsVertexOnly:!(!!T.map||!!T.bumpMap||!!T.normalMap||!!T.specularMap||!!T.alphaMap||!!T.emissiveMap||!!T.roughnessMap||!!T.metalnessMap||!!T.clearcoatNormalMap||T.transmission>0||!!T.transmissionMap||!!T.thicknessMap||!!T.specularIntensityMap||!!T.specularColorMap||T.sheen>0||!!T.sheenColorMap||!!T.sheenRoughnessMap)&&!!T.displacementMap,fog:!!ce,useFog:T.fog===!0,fogExp2:ce&&ce.isFogExp2,flatShading:!!T.flatShading,sizeAttenuation:T.sizeAttenuation,logarithmicDepthBuffer:f,skinning:se.isSkinnedMesh===!0,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:K,morphTextureStride:he,numDirLights:O.directional.length,numPointLights:O.point.length,numSpotLights:O.spot.length,numRectAreaLights:O.rectArea.length,numHemiLights:O.hemi.length,numDirLightShadows:O.directionalShadowMap.length,numPointLightShadows:O.pointShadowMap.length,numSpotLightShadows:O.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&H.length>0,shadowMapType:r.shadowMap.type,toneMapping:T.toneMapped?r.toneMapping:Fn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===ar,flipSided:T.side===fn,useDepthPacking:!!T.depthPacking,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:T.extensions&&T.extensions.derivatives,extensionFragDepth:T.extensions&&T.extensions.fragDepth,extensionDrawBuffers:T.extensions&&T.extensions.drawBuffers,extensionShaderTextureLOD:T.extensions&&T.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function m(T){const O=[];if(T.shaderID?O.push(T.shaderID):(O.push(T.customVertexShaderID),O.push(T.customFragmentShaderID)),T.defines!==void 0)for(const H in T.defines)O.push(H),O.push(T.defines[H]);return T.isRawShaderMaterial===!1&&(b(O,T),P(O,T),O.push(r.outputEncoding)),O.push(T.customProgramCacheKey),O.join()}function b(T,O){T.push(O.precision),T.push(O.outputEncoding),T.push(O.envMapMode),T.push(O.envMapCubeUVHeight),T.push(O.combine),T.push(O.vertexUvs),T.push(O.fogExp2),T.push(O.sizeAttenuation),T.push(O.morphTargetsCount),T.push(O.morphAttributeCount),T.push(O.numDirLights),T.push(O.numPointLights),T.push(O.numSpotLights),T.push(O.numHemiLights),T.push(O.numRectAreaLights),T.push(O.numDirLightShadows),T.push(O.numPointLightShadows),T.push(O.numSpotLightShadows),T.push(O.shadowMapType),T.push(O.toneMapping),T.push(O.numClippingPlanes),T.push(O.numClipIntersection),T.push(O.depthPacking)}function P(T,O){a.disableAll(),O.isWebGL2&&a.enable(0),O.supportsVertexTextures&&a.enable(1),O.instancing&&a.enable(2),O.instancingColor&&a.enable(3),O.map&&a.enable(4),O.matcap&&a.enable(5),O.envMap&&a.enable(6),O.lightMap&&a.enable(7),O.aoMap&&a.enable(8),O.emissiveMap&&a.enable(9),O.bumpMap&&a.enable(10),O.normalMap&&a.enable(11),O.objectSpaceNormalMap&&a.enable(12),O.tangentSpaceNormalMap&&a.enable(13),O.clearcoat&&a.enable(14),O.clearcoatMap&&a.enable(15),O.clearcoatRoughnessMap&&a.enable(16),O.clearcoatNormalMap&&a.enable(17),O.displacementMap&&a.enable(18),O.specularMap&&a.enable(19),O.roughnessMap&&a.enable(20),O.metalnessMap&&a.enable(21),O.gradientMap&&a.enable(22),O.alphaMap&&a.enable(23),O.alphaTest&&a.enable(24),O.vertexColors&&a.enable(25),O.vertexAlphas&&a.enable(26),O.vertexUvs&&a.enable(27),O.vertexTangents&&a.enable(28),O.uvsVertexOnly&&a.enable(29),O.fog&&a.enable(30),T.push(a.mask),a.disableAll(),O.useFog&&a.enable(0),O.flatShading&&a.enable(1),O.logarithmicDepthBuffer&&a.enable(2),O.skinning&&a.enable(3),O.morphTargets&&a.enable(4),O.morphNormals&&a.enable(5),O.morphColors&&a.enable(6),O.premultipliedAlpha&&a.enable(7),O.shadowMapEnabled&&a.enable(8),O.physicallyCorrectLights&&a.enable(9),O.doubleSided&&a.enable(10),O.flipSided&&a.enable(11),O.useDepthPacking&&a.enable(12),O.dithering&&a.enable(13),O.specularIntensityMap&&a.enable(14),O.specularColorMap&&a.enable(15),O.transmission&&a.enable(16),O.transmissionMap&&a.enable(17),O.thicknessMap&&a.enable(18),O.sheen&&a.enable(19),O.sheenColorMap&&a.enable(20),O.sheenRoughnessMap&&a.enable(21),O.decodeVideoTexture&&a.enable(22),O.opaque&&a.enable(23),T.push(a.mask)}function L(T){const O=v[T.type];let H;if(O){const V=bn[O];H=Qv.clone(V.uniforms)}else H=T.uniforms;return H}function M(T,O){let H;for(let V=0,se=h.length;V<se;V++){const ce=h[V];if(ce.cacheKey===O){H=ce,++H.usedTimes;break}}return H===void 0&&(H=new nM(r,O,T,s),h.push(H)),H}function D(T){if(--T.usedTimes===0){const O=h.indexOf(T);h[O]=h[h.length-1],h.pop(),T.destroy()}}function N(T){c.remove(T)}function U(){c.dispose()}return{getParameters:_,getProgramCacheKey:m,getUniforms:L,acquireProgram:M,releaseProgram:D,releaseShaderCache:N,programs:h,dispose:U}}function aM(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function lM(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Yh(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Jh(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(f,p,g,v,_,m){let b=r[e];return b===void 0?(b={id:f.id,object:f,geometry:p,material:g,groupOrder:v,renderOrder:f.renderOrder,z:_,group:m},r[e]=b):(b.id=f.id,b.object=f,b.geometry=p,b.material=g,b.groupOrder=v,b.renderOrder=f.renderOrder,b.z=_,b.group=m),e++,b}function a(f,p,g,v,_,m){const b=o(f,p,g,v,_,m);g.transmission>0?n.push(b):g.transparent===!0?i.push(b):t.push(b)}function c(f,p,g,v,_,m){const b=o(f,p,g,v,_,m);g.transmission>0?n.unshift(b):g.transparent===!0?i.unshift(b):t.unshift(b)}function h(f,p){t.length>1&&t.sort(f||lM),n.length>1&&n.sort(p||Yh),i.length>1&&i.sort(p||Yh)}function u(){for(let f=e,p=r.length;f<p;f++){const g=r[f];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:c,finish:u,sort:h}}function cM(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new Jh,r.set(n,[s])):i>=r.get(n).length?(s=new Jh,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function hM(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new C,color:new Le};break;case"SpotLight":t={position:new C,direction:new C,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new C,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new C,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new C,halfWidth:new C,halfHeight:new C};break}return r[e.id]=t,t}}}function uM(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let dM=0;function fM(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function pM(r,e){const t=new hM,n=uM(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new C);const s=new C,o=new Ie,a=new Ie;function c(u,f){let p=0,g=0,v=0;for(let O=0;O<9;O++)i.probe[O].set(0,0,0);let _=0,m=0,b=0,P=0,L=0,M=0,D=0,N=0;u.sort(fM);const U=f!==!0?Math.PI:1;for(let O=0,H=u.length;O<H;O++){const V=u[O],se=V.color,ce=V.intensity,z=V.distance,W=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)p+=se.r*ce*U,g+=se.g*ce*U,v+=se.b*ce*U;else if(V.isLightProbe)for(let j=0;j<9;j++)i.probe[j].addScaledVector(V.sh.coefficients[j],ce);else if(V.isDirectionalLight){const j=t.get(V);if(j.color.copy(V.color).multiplyScalar(V.intensity*U),V.castShadow){const te=V.shadow,ie=n.get(V);ie.shadowBias=te.bias,ie.shadowNormalBias=te.normalBias,ie.shadowRadius=te.radius,ie.shadowMapSize=te.mapSize,i.directionalShadow[_]=ie,i.directionalShadowMap[_]=W,i.directionalShadowMatrix[_]=V.shadow.matrix,M++}i.directional[_]=j,_++}else if(V.isSpotLight){const j=t.get(V);if(j.position.setFromMatrixPosition(V.matrixWorld),j.color.copy(se).multiplyScalar(ce*U),j.distance=z,j.coneCos=Math.cos(V.angle),j.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),j.decay=V.decay,V.castShadow){const te=V.shadow,ie=n.get(V);ie.shadowBias=te.bias,ie.shadowNormalBias=te.normalBias,ie.shadowRadius=te.radius,ie.shadowMapSize=te.mapSize,i.spotShadow[b]=ie,i.spotShadowMap[b]=W,i.spotShadowMatrix[b]=V.shadow.matrix,N++}i.spot[b]=j,b++}else if(V.isRectAreaLight){const j=t.get(V);j.color.copy(se).multiplyScalar(ce),j.halfWidth.set(V.width*.5,0,0),j.halfHeight.set(0,V.height*.5,0),i.rectArea[P]=j,P++}else if(V.isPointLight){const j=t.get(V);if(j.color.copy(V.color).multiplyScalar(V.intensity*U),j.distance=V.distance,j.decay=V.decay,V.castShadow){const te=V.shadow,ie=n.get(V);ie.shadowBias=te.bias,ie.shadowNormalBias=te.normalBias,ie.shadowRadius=te.radius,ie.shadowMapSize=te.mapSize,ie.shadowCameraNear=te.camera.near,ie.shadowCameraFar=te.camera.far,i.pointShadow[m]=ie,i.pointShadowMap[m]=W,i.pointShadowMatrix[m]=V.shadow.matrix,D++}i.point[m]=j,m++}else if(V.isHemisphereLight){const j=t.get(V);j.skyColor.copy(V.color).multiplyScalar(ce*U),j.groundColor.copy(V.groundColor).multiplyScalar(ce*U),i.hemi[L]=j,L++}}P>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=be.LTC_FLOAT_1,i.rectAreaLTC2=be.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=be.LTC_HALF_1,i.rectAreaLTC2=be.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=g,i.ambient[2]=v;const T=i.hash;(T.directionalLength!==_||T.pointLength!==m||T.spotLength!==b||T.rectAreaLength!==P||T.hemiLength!==L||T.numDirectionalShadows!==M||T.numPointShadows!==D||T.numSpotShadows!==N)&&(i.directional.length=_,i.spot.length=b,i.rectArea.length=P,i.point.length=m,i.hemi.length=L,i.directionalShadow.length=M,i.directionalShadowMap.length=M,i.pointShadow.length=D,i.pointShadowMap.length=D,i.spotShadow.length=N,i.spotShadowMap.length=N,i.directionalShadowMatrix.length=M,i.pointShadowMatrix.length=D,i.spotShadowMatrix.length=N,T.directionalLength=_,T.pointLength=m,T.spotLength=b,T.rectAreaLength=P,T.hemiLength=L,T.numDirectionalShadows=M,T.numPointShadows=D,T.numSpotShadows=N,i.version=dM++)}function h(u,f){let p=0,g=0,v=0,_=0,m=0;const b=f.matrixWorldInverse;for(let P=0,L=u.length;P<L;P++){const M=u[P];if(M.isDirectionalLight){const D=i.directional[p];D.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),D.direction.sub(s),D.direction.transformDirection(b),p++}else if(M.isSpotLight){const D=i.spot[v];D.position.setFromMatrixPosition(M.matrixWorld),D.position.applyMatrix4(b),D.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),D.direction.sub(s),D.direction.transformDirection(b),v++}else if(M.isRectAreaLight){const D=i.rectArea[_];D.position.setFromMatrixPosition(M.matrixWorld),D.position.applyMatrix4(b),a.identity(),o.copy(M.matrixWorld),o.premultiply(b),a.extractRotation(o),D.halfWidth.set(M.width*.5,0,0),D.halfHeight.set(0,M.height*.5,0),D.halfWidth.applyMatrix4(a),D.halfHeight.applyMatrix4(a),_++}else if(M.isPointLight){const D=i.point[g];D.position.setFromMatrixPosition(M.matrixWorld),D.position.applyMatrix4(b),g++}else if(M.isHemisphereLight){const D=i.hemi[m];D.direction.setFromMatrixPosition(M.matrixWorld),D.direction.transformDirection(b),m++}}}return{setup:c,setupView:h,state:i}}function $h(r,e){const t=new pM(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(f){n.push(f)}function a(f){i.push(f)}function c(f){t.setup(n,f)}function h(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:h,pushLight:o,pushShadow:a}}function mM(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new $h(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new $h(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class ml extends bt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=yv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ml.prototype.isMeshDepthMaterial=!0;class gl extends bt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}gl.prototype.isMeshDistanceMaterial=!0;const gM=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,_M=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ku(r,e,t){let n=new go;const i=new le,s=new le,o=new at,a=new ml({depthPacking:xv}),c=new gl,h={},u=t.maxTextureSize,f={0:fn,1:Yr,2:ar},p=new pn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new le},radius:{value:4}},vertexShader:gM,fragmentShader:_M}),g=p.clone();g.defines.HORIZONTAL_PASS=1;const v=new ct;v.setAttribute("position",new xt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Ht(v,p),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Du,this.render=function(M,D,N){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||M.length===0)return;const U=r.getRenderTarget(),T=r.getActiveCubeFace(),O=r.getActiveMipmapLevel(),H=r.state;H.setBlending(Zn),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);for(let V=0,se=M.length;V<se;V++){const ce=M[V],z=ce.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",ce,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const W=z.getFrameExtents();if(i.multiply(W),s.copy(z.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/W.x),i.x=s.x*W.x,z.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/W.y),i.y=s.y*W.y,z.mapSize.y=s.y)),z.map===null&&!z.isPointLightShadow&&this.type===Vr&&(z.map=new Jt(i.x,i.y),z.map.texture.name=ce.name+".shadowMap",z.mapPass=new Jt(i.x,i.y),z.camera.updateProjectionMatrix()),z.map===null){const te={minFilter:St,magFilter:St,format:sn};z.map=new Jt(i.x,i.y,te),z.map.texture.name=ce.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const j=z.getViewportCount();for(let te=0;te<j;te++){const ie=z.getViewport(te);o.set(s.x*ie.x,s.y*ie.y,s.x*ie.z,s.y*ie.w),H.viewport(o),z.updateMatrices(ce,te),n=z.getFrustum(),L(D,N,z.camera,ce,this.type)}!z.isPointLightShadow&&this.type===Vr&&b(z,N),z.needsUpdate=!1}m.needsUpdate=!1,r.setRenderTarget(U,T,O)};function b(M,D){const N=e.update(_);p.defines.VSM_SAMPLES!==M.blurSamples&&(p.defines.VSM_SAMPLES=M.blurSamples,g.defines.VSM_SAMPLES=M.blurSamples,p.needsUpdate=!0,g.needsUpdate=!0),p.uniforms.shadow_pass.value=M.map.texture,p.uniforms.resolution.value=M.mapSize,p.uniforms.radius.value=M.radius,r.setRenderTarget(M.mapPass),r.clear(),r.renderBufferDirect(D,null,N,p,_,null),g.uniforms.shadow_pass.value=M.mapPass.texture,g.uniforms.resolution.value=M.mapSize,g.uniforms.radius.value=M.radius,r.setRenderTarget(M.map),r.clear(),r.renderBufferDirect(D,null,N,g,_,null)}function P(M,D,N,U,T,O){let H=null;const V=N.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(V!==void 0?H=V:H=N.isPointLight===!0?c:a,r.localClippingEnabled&&D.clipShadows===!0&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0){const se=H.uuid,ce=D.uuid;let z=h[se];z===void 0&&(z={},h[se]=z);let W=z[ce];W===void 0&&(W=H.clone(),z[ce]=W),H=W}return H.visible=D.visible,H.wireframe=D.wireframe,O===Vr?H.side=D.shadowSide!==null?D.shadowSide:D.side:H.side=D.shadowSide!==null?D.shadowSide:f[D.side],H.alphaMap=D.alphaMap,H.alphaTest=D.alphaTest,H.clipShadows=D.clipShadows,H.clippingPlanes=D.clippingPlanes,H.clipIntersection=D.clipIntersection,H.displacementMap=D.displacementMap,H.displacementScale=D.displacementScale,H.displacementBias=D.displacementBias,H.wireframeLinewidth=D.wireframeLinewidth,H.linewidth=D.linewidth,N.isPointLight===!0&&H.isMeshDistanceMaterial===!0&&(H.referencePosition.setFromMatrixPosition(N.matrixWorld),H.nearDistance=U,H.farDistance=T),H}function L(M,D,N,U,T){if(M.visible===!1)return;if(M.layers.test(D.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&T===Vr)&&(!M.frustumCulled||n.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,M.matrixWorld);const V=e.update(M),se=M.material;if(Array.isArray(se)){const ce=V.groups;for(let z=0,W=ce.length;z<W;z++){const j=ce[z],te=se[j.materialIndex];if(te&&te.visible){const ie=P(M,te,U,N.near,N.far,T);r.renderBufferDirect(N,null,V,ie,M,j)}}}else if(se.visible){const ce=P(M,se,U,N.near,N.far,T);r.renderBufferDirect(N,null,V,ce,M,null)}}const H=M.children;for(let V=0,se=H.length;V<se;V++)L(H[V],D,N,U,T)}}function vM(r,e,t){const n=t.isWebGL2;function i(){let F=!1;const ye=new at;let me=null;const Ue=new at(0,0,0,0);return{setMask:function(Se){me!==Se&&!F&&(r.colorMask(Se,Se,Se,Se),me=Se)},setLocked:function(Se){F=Se},setClear:function(Se,ze,pe,Oe,je){je===!0&&(Se*=Oe,ze*=Oe,pe*=Oe),ye.set(Se,ze,pe,Oe),Ue.equals(ye)===!1&&(r.clearColor(Se,ze,pe,Oe),Ue.copy(ye))},reset:function(){F=!1,me=null,Ue.set(-1,0,0,0)}}}function s(){let F=!1,ye=null,me=null,Ue=null;return{setTest:function(Se){Se?De(2929):Z(2929)},setMask:function(Se){ye!==Se&&!F&&(r.depthMask(Se),ye=Se)},setFunc:function(Se){if(me!==Se){if(Se)switch(Se){case k_:r.depthFunc(512);break;case U_:r.depthFunc(519);break;case V_:r.depthFunc(513);break;case Ua:r.depthFunc(515);break;case H_:r.depthFunc(514);break;case G_:r.depthFunc(518);break;case W_:r.depthFunc(516);break;case j_:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);me=Se}},setLocked:function(Se){F=Se},setClear:function(Se){Ue!==Se&&(r.clearDepth(Se),Ue=Se)},reset:function(){F=!1,ye=null,me=null,Ue=null}}}function o(){let F=!1,ye=null,me=null,Ue=null,Se=null,ze=null,pe=null,Oe=null,je=null;return{setTest:function(Je){F||(Je?De(2960):Z(2960))},setMask:function(Je){ye!==Je&&!F&&(r.stencilMask(Je),ye=Je)},setFunc:function(Je,Et,It){(me!==Je||Ue!==Et||Se!==It)&&(r.stencilFunc(Je,Et,It),me=Je,Ue=Et,Se=It)},setOp:function(Je,Et,It){(ze!==Je||pe!==Et||Oe!==It)&&(r.stencilOp(Je,Et,It),ze=Je,pe=Et,Oe=It)},setLocked:function(Je){F=Je},setClear:function(Je){je!==Je&&(r.clearStencil(Je),je=Je)},reset:function(){F=!1,ye=null,me=null,Ue=null,Se=null,ze=null,pe=null,Oe=null,je=null}}}const a=new i,c=new s,h=new o;let u={},f={},p=new WeakMap,g=[],v=null,_=!1,m=null,b=null,P=null,L=null,M=null,D=null,N=null,U=!1,T=null,O=null,H=null,V=null,se=null;const ce=r.getParameter(35661);let z=!1,W=0;const j=r.getParameter(7938);j.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL (\d)/.exec(j)[1]),z=W>=1):j.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),z=W>=2);let te=null,ie={};const Y=r.getParameter(3088),K=r.getParameter(2978),he=new at().fromArray(Y),re=new at().fromArray(K);function _e(F,ye,me){const Ue=new Uint8Array(4),Se=r.createTexture();r.bindTexture(F,Se),r.texParameteri(F,10241,9728),r.texParameteri(F,10240,9728);for(let ze=0;ze<me;ze++)r.texImage2D(ye+ze,0,6408,1,1,0,6408,5121,Ue);return Se}const Ce={};Ce[3553]=_e(3553,3553,1),Ce[34067]=_e(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),h.setClear(0),De(2929),c.setFunc(Ua),fe(!1),Ae(Vc),De(2884),ne(Zn);function De(F){u[F]!==!0&&(r.enable(F),u[F]=!0)}function Z(F){u[F]!==!1&&(r.disable(F),u[F]=!1)}function Ke(F,ye){return f[F]!==ye?(r.bindFramebuffer(F,ye),f[F]=ye,n&&(F===36009&&(f[36160]=ye),F===36160&&(f[36009]=ye)),!0):!1}function Ne(F,ye){let me=g,Ue=!1;if(F)if(me=p.get(ye),me===void 0&&(me=[],p.set(ye,me)),F.isWebGLMultipleRenderTargets){const Se=F.texture;if(me.length!==Se.length||me[0]!==36064){for(let ze=0,pe=Se.length;ze<pe;ze++)me[ze]=36064+ze;me.length=Se.length,Ue=!0}}else me[0]!==36064&&(me[0]=36064,Ue=!0);else me[0]!==1029&&(me[0]=1029,Ue=!0);Ue&&(t.isWebGL2?r.drawBuffers(me):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(me))}function We(F){return v!==F?(r.useProgram(F),v=F,!0):!1}const de={[Ki]:32774,[C_]:32778,[P_]:32779};if(n)de[jc]=32775,de[qc]=32776;else{const F=e.get("EXT_blend_minmax");F!==null&&(de[jc]=F.MIN_EXT,de[qc]=F.MAX_EXT)}const Ye={[R_]:0,[L_]:1,[D_]:768,[Ou]:770,[z_]:776,[N_]:774,[O_]:772,[I_]:769,[Fu]:771,[B_]:775,[F_]:773};function ne(F,ye,me,Ue,Se,ze,pe,Oe){if(F===Zn){_===!0&&(Z(3042),_=!1);return}if(_===!1&&(De(3042),_=!0),F!==A_){if(F!==m||Oe!==U){if((b!==Ki||M!==Ki)&&(r.blendEquation(32774),b=Ki,M=Ki),Oe)switch(F){case rr:r.blendFuncSeparate(1,771,1,771);break;case Hc:r.blendFunc(1,1);break;case Gc:r.blendFuncSeparate(0,769,0,1);break;case Wc:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case rr:r.blendFuncSeparate(770,771,1,771);break;case Hc:r.blendFunc(770,1);break;case Gc:r.blendFuncSeparate(0,769,0,1);break;case Wc:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}P=null,L=null,D=null,N=null,m=F,U=Oe}return}Se=Se||ye,ze=ze||me,pe=pe||Ue,(ye!==b||Se!==M)&&(r.blendEquationSeparate(de[ye],de[Se]),b=ye,M=Se),(me!==P||Ue!==L||ze!==D||pe!==N)&&(r.blendFuncSeparate(Ye[me],Ye[Ue],Ye[ze],Ye[pe]),P=me,L=Ue,D=ze,N=pe),m=F,U=null}function ee(F,ye){F.side===ar?Z(2884):De(2884);let me=F.side===fn;ye&&(me=!me),fe(me),F.blending===rr&&F.transparent===!1?ne(Zn):ne(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),c.setFunc(F.depthFunc),c.setTest(F.depthTest),c.setMask(F.depthWrite),a.setMask(F.colorWrite);const Ue=F.stencilWrite;h.setTest(Ue),Ue&&(h.setMask(F.stencilWriteMask),h.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),h.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),Ve(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?De(32926):Z(32926)}function fe(F){T!==F&&(F?r.frontFace(2304):r.frontFace(2305),T=F)}function Ae(F){F!==S_?(De(2884),F!==O&&(F===Vc?r.cullFace(1029):F===T_?r.cullFace(1028):r.cullFace(1032))):Z(2884),O=F}function ve(F){F!==H&&(z&&r.lineWidth(F),H=F)}function Ve(F,ye,me){F?(De(32823),(V!==ye||se!==me)&&(r.polygonOffset(ye,me),V=ye,se=me)):Z(32823)}function Be(F){F?De(3089):Z(3089)}function Pe(F){F===void 0&&(F=33984+ce-1),te!==F&&(r.activeTexture(F),te=F)}function it(F,ye){te===null&&Pe();let me=ie[te];me===void 0&&(me={type:void 0,texture:void 0},ie[te]=me),(me.type!==F||me.texture!==ye)&&(r.bindTexture(F,ye||Ce[F]),me.type=F,me.texture=ye)}function Qe(){const F=ie[te];F!==void 0&&F.type!==void 0&&(r.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function A(){try{r.compressedTexImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function S(){try{r.texSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function $(){try{r.texSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ae(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ge(){try{r.texStorage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function we(){try{r.texStorage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Fe(){try{r.texImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Q(){try{r.texImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ge(F){he.equals(F)===!1&&(r.scissor(F.x,F.y,F.z,F.w),he.copy(F))}function qe(F){re.equals(F)===!1&&(r.viewport(F.x,F.y,F.z,F.w),re.copy(F))}function Te(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},te=null,ie={},f={},p=new WeakMap,g=[],v=null,_=!1,m=null,b=null,P=null,L=null,M=null,D=null,N=null,U=!1,T=null,O=null,H=null,V=null,se=null,he.set(0,0,r.canvas.width,r.canvas.height),re.set(0,0,r.canvas.width,r.canvas.height),a.reset(),c.reset(),h.reset()}return{buffers:{color:a,depth:c,stencil:h},enable:De,disable:Z,bindFramebuffer:Ke,drawBuffers:Ne,useProgram:We,setBlending:ne,setMaterial:ee,setFlipSided:fe,setCullFace:Ae,setLineWidth:ve,setPolygonOffset:Ve,setScissorTest:Be,activeTexture:Pe,bindTexture:it,unbindTexture:Qe,compressedTexImage2D:A,texImage2D:Fe,texImage3D:Q,texStorage2D:ge,texStorage3D:we,texSubImage2D:S,texSubImage3D:$,compressedTexSubImage2D:ae,scissor:Ge,viewport:qe,reset:Te}}function yM(r,e,t,n,i,s,o){const a=i.isWebGL2,c=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,f=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let _;const m=new WeakMap;let b=!1;try{b=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function P(A,S){return b?new OffscreenCanvas(A,S):Qr("canvas")}function L(A,S,$,ae){let ge=1;if((A.width>ae||A.height>ae)&&(ge=ae/Math.max(A.width,A.height)),ge<1||S===!0)if(typeof HTMLImageElement!="undefined"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&A instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&A instanceof ImageBitmap){const we=S?ro:Math.floor,Fe=we(ge*A.width),Q=we(ge*A.height);_===void 0&&(_=P(Fe,Q));const Ge=$?P(Fe,Q):_;return Ge.width=Fe,Ge.height=Q,Ge.getContext("2d").drawImage(A,0,0,Fe,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+Fe+"x"+Q+")."),Ge}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A;return A}function M(A){return qa(A.width)&&qa(A.height)}function D(A){return a?!1:A.wrapS!==dn||A.wrapT!==dn||A.minFilter!==St&&A.minFilter!==Vt}function N(A,S){return A.generateMipmaps&&S&&A.minFilter!==St&&A.minFilter!==Vt}function U(A){r.generateMipmap(A)}function T(A,S,$,ae,ge=!1){if(a===!1)return S;if(A!==null){if(r[A]!==void 0)return r[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let we=S;return S===6403&&($===5126&&(we=33326),$===5131&&(we=33325),$===5121&&(we=33321)),S===33319&&($===5126&&(we=33328),$===5131&&(we=33327),$===5121&&(we=33323)),S===6408&&($===5126&&(we=34836),$===5131&&(we=34842),$===5121&&(we=ae===dt&&ge===!1?35907:32856),$===32819&&(we=32854),$===32820&&(we=32855)),(we===33325||we===33326||we===33327||we===33328||we===34842||we===34836)&&e.get("EXT_color_buffer_float"),we}function O(A,S,$){return N(A,$)===!0||A.isFramebufferTexture&&A.minFilter!==St&&A.minFilter!==Vt?Math.log2(Math.max(S.width,S.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?S.mipmaps.length:1}function H(A){return A===St||A===Xc||A===Yc?9728:9729}function V(A){const S=A.target;S.removeEventListener("dispose",V),ce(S),S.isVideoTexture&&v.delete(S)}function se(A){const S=A.target;S.removeEventListener("dispose",se),W(S)}function ce(A){const S=n.get(A);if(S.__webglInit===void 0)return;const $=A.source,ae=m.get($);if(ae){const ge=ae[S.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&z(A),Object.keys(ae).length===0&&m.delete($)}n.remove(A)}function z(A){const S=n.get(A);r.deleteTexture(S.__webglTexture);const $=A.source,ae=m.get($);delete ae[S.__cacheKey],o.memory.textures--}function W(A){const S=A.texture,$=n.get(A),ae=n.get(S);if(ae.__webglTexture!==void 0&&(r.deleteTexture(ae.__webglTexture),o.memory.textures--),A.depthTexture&&A.depthTexture.dispose(),A.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++)r.deleteFramebuffer($.__webglFramebuffer[ge]),$.__webglDepthbuffer&&r.deleteRenderbuffer($.__webglDepthbuffer[ge]);else r.deleteFramebuffer($.__webglFramebuffer),$.__webglDepthbuffer&&r.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&r.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer&&r.deleteRenderbuffer($.__webglColorRenderbuffer),$.__webglDepthRenderbuffer&&r.deleteRenderbuffer($.__webglDepthRenderbuffer);if(A.isWebGLMultipleRenderTargets)for(let ge=0,we=S.length;ge<we;ge++){const Fe=n.get(S[ge]);Fe.__webglTexture&&(r.deleteTexture(Fe.__webglTexture),o.memory.textures--),n.remove(S[ge])}n.remove(S),n.remove(A)}let j=0;function te(){j=0}function ie(){const A=j;return A>=c&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+c),j+=1,A}function Y(A){const S=[];return S.push(A.wrapS),S.push(A.wrapT),S.push(A.magFilter),S.push(A.minFilter),S.push(A.anisotropy),S.push(A.internalFormat),S.push(A.format),S.push(A.type),S.push(A.generateMipmaps),S.push(A.premultiplyAlpha),S.push(A.flipY),S.push(A.unpackAlignment),S.push(A.encoding),S.join()}function K(A,S){const $=n.get(A);if(A.isVideoTexture&&it(A),A.isRenderTargetTexture===!1&&A.version>0&&$.__version!==A.version){const ae=A.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ne($,A,S);return}}t.activeTexture(33984+S),t.bindTexture(3553,$.__webglTexture)}function he(A,S){const $=n.get(A);if(A.version>0&&$.__version!==A.version){Ne($,A,S);return}t.activeTexture(33984+S),t.bindTexture(35866,$.__webglTexture)}function re(A,S){const $=n.get(A);if(A.version>0&&$.__version!==A.version){Ne($,A,S);return}t.activeTexture(33984+S),t.bindTexture(32879,$.__webglTexture)}function _e(A,S){const $=n.get(A);if(A.version>0&&$.__version!==A.version){We($,A,S);return}t.activeTexture(33984+S),t.bindTexture(34067,$.__webglTexture)}const Ce={[Ga]:10497,[dn]:33071,[Wa]:33648},De={[St]:9728,[Xc]:9984,[Yc]:9986,[Vt]:9729,[Q_]:9985,[uo]:9987};function Z(A,S,$){if($?(r.texParameteri(A,10242,Ce[S.wrapS]),r.texParameteri(A,10243,Ce[S.wrapT]),(A===32879||A===35866)&&r.texParameteri(A,32882,Ce[S.wrapR]),r.texParameteri(A,10240,De[S.magFilter]),r.texParameteri(A,10241,De[S.minFilter])):(r.texParameteri(A,10242,33071),r.texParameteri(A,10243,33071),(A===32879||A===35866)&&r.texParameteri(A,32882,33071),(S.wrapS!==dn||S.wrapT!==dn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(A,10240,H(S.magFilter)),r.texParameteri(A,10241,H(S.minFilter)),S.minFilter!==St&&S.minFilter!==Vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ae=e.get("EXT_texture_filter_anisotropic");if(S.type===$n&&e.has("OES_texture_float_linear")===!1||a===!1&&S.type===$r&&e.has("OES_texture_half_float_linear")===!1)return;(S.anisotropy>1||n.get(S).__currentAnisotropy)&&(r.texParameterf(A,ae.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy)}}function Ke(A,S){let $=!1;A.__webglInit===void 0&&(A.__webglInit=!0,S.addEventListener("dispose",V));const ae=S.source;let ge=m.get(ae);ge===void 0&&(ge={},m.set(ae,ge));const we=Y(S);if(we!==A.__cacheKey){ge[we]===void 0&&(ge[we]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,$=!0),ge[we].usedTimes++;const Fe=ge[A.__cacheKey];Fe!==void 0&&(ge[A.__cacheKey].usedTimes--,Fe.usedTimes===0&&z(S)),A.__cacheKey=we,A.__webglTexture=ge[we].texture}return $}function Ne(A,S,$){let ae=3553;S.isDataArrayTexture&&(ae=35866),S.isData3DTexture&&(ae=32879);const ge=Ke(A,S),we=S.source;if(t.activeTexture(33984+$),t.bindTexture(ae,A.__webglTexture),we.version!==we.__currentVersion||ge===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const Fe=D(S)&&M(S.image)===!1;let Q=L(S.image,Fe,!1,u);Q=Qe(S,Q);const Ge=M(Q)||a,qe=s.convert(S.format,S.encoding);let Te=s.convert(S.type),F=T(S.internalFormat,qe,Te,S.encoding,S.isVideoTexture);Z(ae,S,Ge);let ye;const me=S.mipmaps,Ue=a&&S.isVideoTexture!==!0,Se=A.__version===void 0||ge===!0,ze=O(S,Q,Ge);if(S.isDepthTexture)F=6402,a?S.type===$n?F=36012:S.type===Ks?F=33190:S.type===sr?F=35056:F=33189:S.type===$n&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===yi&&F===6402&&S.type!==Jr&&S.type!==Ks&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=Jr,Te=s.convert(S.type)),S.format===hr&&F===6402&&(F=34041,S.type!==sr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=sr,Te=s.convert(S.type))),Se&&(Ue?t.texStorage2D(3553,1,F,Q.width,Q.height):t.texImage2D(3553,0,F,Q.width,Q.height,0,qe,Te,null));else if(S.isDataTexture)if(me.length>0&&Ge){Ue&&Se&&t.texStorage2D(3553,ze,F,me[0].width,me[0].height);for(let pe=0,Oe=me.length;pe<Oe;pe++)ye=me[pe],Ue?t.texSubImage2D(3553,pe,0,0,ye.width,ye.height,qe,Te,ye.data):t.texImage2D(3553,pe,F,ye.width,ye.height,0,qe,Te,ye.data);S.generateMipmaps=!1}else Ue?(Se&&t.texStorage2D(3553,ze,F,Q.width,Q.height),t.texSubImage2D(3553,0,0,0,Q.width,Q.height,qe,Te,Q.data)):t.texImage2D(3553,0,F,Q.width,Q.height,0,qe,Te,Q.data);else if(S.isCompressedTexture){Ue&&Se&&t.texStorage2D(3553,ze,F,me[0].width,me[0].height);for(let pe=0,Oe=me.length;pe<Oe;pe++)ye=me[pe],S.format!==sn?qe!==null?Ue?t.compressedTexSubImage2D(3553,pe,0,0,ye.width,ye.height,qe,ye.data):t.compressedTexImage2D(3553,pe,F,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ue?t.texSubImage2D(3553,pe,0,0,ye.width,ye.height,qe,Te,ye.data):t.texImage2D(3553,pe,F,ye.width,ye.height,0,qe,Te,ye.data)}else if(S.isDataArrayTexture)Ue?(Se&&t.texStorage3D(35866,ze,F,Q.width,Q.height,Q.depth),t.texSubImage3D(35866,0,0,0,0,Q.width,Q.height,Q.depth,qe,Te,Q.data)):t.texImage3D(35866,0,F,Q.width,Q.height,Q.depth,0,qe,Te,Q.data);else if(S.isData3DTexture)Ue?(Se&&t.texStorage3D(32879,ze,F,Q.width,Q.height,Q.depth),t.texSubImage3D(32879,0,0,0,0,Q.width,Q.height,Q.depth,qe,Te,Q.data)):t.texImage3D(32879,0,F,Q.width,Q.height,Q.depth,0,qe,Te,Q.data);else if(S.isFramebufferTexture){if(Se)if(Ue)t.texStorage2D(3553,ze,F,Q.width,Q.height);else{let pe=Q.width,Oe=Q.height;for(let je=0;je<ze;je++)t.texImage2D(3553,je,F,pe,Oe,0,qe,Te,null),pe>>=1,Oe>>=1}}else if(me.length>0&&Ge){Ue&&Se&&t.texStorage2D(3553,ze,F,me[0].width,me[0].height);for(let pe=0,Oe=me.length;pe<Oe;pe++)ye=me[pe],Ue?t.texSubImage2D(3553,pe,0,0,qe,Te,ye):t.texImage2D(3553,pe,F,qe,Te,ye);S.generateMipmaps=!1}else Ue?(Se&&t.texStorage2D(3553,ze,F,Q.width,Q.height),t.texSubImage2D(3553,0,0,0,qe,Te,Q)):t.texImage2D(3553,0,F,qe,Te,Q);N(S,Ge)&&U(ae),we.__currentVersion=we.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function We(A,S,$){if(S.image.length!==6)return;const ae=Ke(A,S),ge=S.source;if(t.activeTexture(33984+$),t.bindTexture(34067,A.__webglTexture),ge.version!==ge.__currentVersion||ae===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const we=S.isCompressedTexture||S.image[0].isCompressedTexture,Fe=S.image[0]&&S.image[0].isDataTexture,Q=[];for(let pe=0;pe<6;pe++)!we&&!Fe?Q[pe]=L(S.image[pe],!1,!0,h):Q[pe]=Fe?S.image[pe].image:S.image[pe],Q[pe]=Qe(S,Q[pe]);const Ge=Q[0],qe=M(Ge)||a,Te=s.convert(S.format,S.encoding),F=s.convert(S.type),ye=T(S.internalFormat,Te,F,S.encoding),me=a&&S.isVideoTexture!==!0,Ue=A.__version===void 0;let Se=O(S,Ge,qe);Z(34067,S,qe);let ze;if(we){me&&Ue&&t.texStorage2D(34067,Se,ye,Ge.width,Ge.height);for(let pe=0;pe<6;pe++){ze=Q[pe].mipmaps;for(let Oe=0;Oe<ze.length;Oe++){const je=ze[Oe];S.format!==sn?Te!==null?me?t.compressedTexSubImage2D(34069+pe,Oe,0,0,je.width,je.height,Te,je.data):t.compressedTexImage2D(34069+pe,Oe,ye,je.width,je.height,0,je.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):me?t.texSubImage2D(34069+pe,Oe,0,0,je.width,je.height,Te,F,je.data):t.texImage2D(34069+pe,Oe,ye,je.width,je.height,0,Te,F,je.data)}}}else{ze=S.mipmaps,me&&Ue&&(ze.length>0&&Se++,t.texStorage2D(34067,Se,ye,Q[0].width,Q[0].height));for(let pe=0;pe<6;pe++)if(Fe){me?t.texSubImage2D(34069+pe,0,0,0,Q[pe].width,Q[pe].height,Te,F,Q[pe].data):t.texImage2D(34069+pe,0,ye,Q[pe].width,Q[pe].height,0,Te,F,Q[pe].data);for(let Oe=0;Oe<ze.length;Oe++){const Je=ze[Oe].image[pe].image;me?t.texSubImage2D(34069+pe,Oe+1,0,0,Je.width,Je.height,Te,F,Je.data):t.texImage2D(34069+pe,Oe+1,ye,Je.width,Je.height,0,Te,F,Je.data)}}else{me?t.texSubImage2D(34069+pe,0,0,0,Te,F,Q[pe]):t.texImage2D(34069+pe,0,ye,Te,F,Q[pe]);for(let Oe=0;Oe<ze.length;Oe++){const je=ze[Oe];me?t.texSubImage2D(34069+pe,Oe+1,0,0,Te,F,je.image[pe]):t.texImage2D(34069+pe,Oe+1,ye,Te,F,je.image[pe])}}}N(S,qe)&&U(34067),ge.__currentVersion=ge.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function de(A,S,$,ae,ge){const we=s.convert($.format,$.encoding),Fe=s.convert($.type),Q=T($.internalFormat,we,Fe,$.encoding);n.get(S).__hasExternalTextures||(ge===32879||ge===35866?t.texImage3D(ge,0,Q,S.width,S.height,S.depth,0,we,Fe,null):t.texImage2D(ge,0,Q,S.width,S.height,0,we,Fe,null)),t.bindFramebuffer(36160,A),Pe(S)?p.framebufferTexture2DMultisampleEXT(36160,ae,ge,n.get($).__webglTexture,0,Be(S)):r.framebufferTexture2D(36160,ae,ge,n.get($).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ye(A,S,$){if(r.bindRenderbuffer(36161,A),S.depthBuffer&&!S.stencilBuffer){let ae=33189;if($||Pe(S)){const ge=S.depthTexture;ge&&ge.isDepthTexture&&(ge.type===$n?ae=36012:ge.type===Ks&&(ae=33190));const we=Be(S);Pe(S)?p.renderbufferStorageMultisampleEXT(36161,we,ae,S.width,S.height):r.renderbufferStorageMultisample(36161,we,ae,S.width,S.height)}else r.renderbufferStorage(36161,ae,S.width,S.height);r.framebufferRenderbuffer(36160,36096,36161,A)}else if(S.depthBuffer&&S.stencilBuffer){const ae=Be(S);$&&Pe(S)===!1?r.renderbufferStorageMultisample(36161,ae,35056,S.width,S.height):Pe(S)?p.renderbufferStorageMultisampleEXT(36161,ae,35056,S.width,S.height):r.renderbufferStorage(36161,34041,S.width,S.height),r.framebufferRenderbuffer(36160,33306,36161,A)}else{const ae=S.isWebGLMultipleRenderTargets===!0?S.texture[0]:S.texture,ge=s.convert(ae.format,ae.encoding),we=s.convert(ae.type),Fe=T(ae.internalFormat,ge,we,ae.encoding),Q=Be(S);$&&Pe(S)===!1?r.renderbufferStorageMultisample(36161,Q,Fe,S.width,S.height):Pe(S)?p.renderbufferStorageMultisampleEXT(36161,Q,Fe,S.width,S.height):r.renderbufferStorage(36161,Fe,S.width,S.height)}r.bindRenderbuffer(36161,null)}function ne(A,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,A),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),K(S.depthTexture,0);const ae=n.get(S.depthTexture).__webglTexture,ge=Be(S);if(S.depthTexture.format===yi)Pe(S)?p.framebufferTexture2DMultisampleEXT(36160,36096,3553,ae,0,ge):r.framebufferTexture2D(36160,36096,3553,ae,0);else if(S.depthTexture.format===hr)Pe(S)?p.framebufferTexture2DMultisampleEXT(36160,33306,3553,ae,0,ge):r.framebufferTexture2D(36160,33306,3553,ae,0);else throw new Error("Unknown depthTexture format")}function ee(A){const S=n.get(A),$=A.isWebGLCubeRenderTarget===!0;if(A.depthTexture&&!S.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");ne(S.__webglFramebuffer,A)}else if($){S.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)t.bindFramebuffer(36160,S.__webglFramebuffer[ae]),S.__webglDepthbuffer[ae]=r.createRenderbuffer(),Ye(S.__webglDepthbuffer[ae],A,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=r.createRenderbuffer(),Ye(S.__webglDepthbuffer,A,!1);t.bindFramebuffer(36160,null)}function fe(A,S,$){const ae=n.get(A);S!==void 0&&de(ae.__webglFramebuffer,A,A.texture,36064,3553),$!==void 0&&ee(A)}function Ae(A){const S=A.texture,$=n.get(A),ae=n.get(S);A.addEventListener("dispose",se),A.isWebGLMultipleRenderTargets!==!0&&(ae.__webglTexture===void 0&&(ae.__webglTexture=r.createTexture()),ae.__version=S.version,o.memory.textures++);const ge=A.isWebGLCubeRenderTarget===!0,we=A.isWebGLMultipleRenderTargets===!0,Fe=M(A)||a;if(ge){$.__webglFramebuffer=[];for(let Q=0;Q<6;Q++)$.__webglFramebuffer[Q]=r.createFramebuffer()}else if($.__webglFramebuffer=r.createFramebuffer(),we)if(i.drawBuffers){const Q=A.texture;for(let Ge=0,qe=Q.length;Ge<qe;Ge++){const Te=n.get(Q[Ge]);Te.__webglTexture===void 0&&(Te.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&A.samples>0&&Pe(A)===!1){$.__webglMultisampledFramebuffer=r.createFramebuffer(),$.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,$.__webglColorRenderbuffer);const Q=s.convert(S.format,S.encoding),Ge=s.convert(S.type),qe=T(S.internalFormat,Q,Ge,S.encoding),Te=Be(A);r.renderbufferStorageMultisample(36161,Te,qe,A.width,A.height),t.bindFramebuffer(36160,$.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,$.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),A.depthBuffer&&($.__webglDepthRenderbuffer=r.createRenderbuffer(),Ye($.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(36160,null)}if(ge){t.bindTexture(34067,ae.__webglTexture),Z(34067,S,Fe);for(let Q=0;Q<6;Q++)de($.__webglFramebuffer[Q],A,S,36064,34069+Q);N(S,Fe)&&U(34067),t.unbindTexture()}else if(we){const Q=A.texture;for(let Ge=0,qe=Q.length;Ge<qe;Ge++){const Te=Q[Ge],F=n.get(Te);t.bindTexture(3553,F.__webglTexture),Z(3553,Te,Fe),de($.__webglFramebuffer,A,Te,36064+Ge,3553),N(Te,Fe)&&U(3553)}t.unbindTexture()}else{let Q=3553;(A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(a?Q=A.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Q,ae.__webglTexture),Z(Q,S,Fe),de($.__webglFramebuffer,A,S,36064,Q),N(S,Fe)&&U(Q),t.unbindTexture()}A.depthBuffer&&ee(A)}function ve(A){const S=M(A)||a,$=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let ae=0,ge=$.length;ae<ge;ae++){const we=$[ae];if(N(we,S)){const Fe=A.isWebGLCubeRenderTarget?34067:3553,Q=n.get(we).__webglTexture;t.bindTexture(Fe,Q),U(Fe),t.unbindTexture()}}}function Ve(A){if(a&&A.samples>0&&Pe(A)===!1){const S=A.width,$=A.height;let ae=16384;const ge=[36064],we=A.stencilBuffer?33306:36096;A.depthBuffer&&ge.push(we);const Fe=n.get(A),Q=Fe.__ignoreDepthValues!==void 0?Fe.__ignoreDepthValues:!1;Q===!1&&(A.depthBuffer&&(ae|=256),A.stencilBuffer&&(ae|=1024)),t.bindFramebuffer(36008,Fe.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Fe.__webglFramebuffer),Q===!0&&(r.invalidateFramebuffer(36008,[we]),r.invalidateFramebuffer(36009,[we])),r.blitFramebuffer(0,0,S,$,0,0,S,$,ae,9728),g&&r.invalidateFramebuffer(36008,ge),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,Fe.__webglMultisampledFramebuffer)}}function Be(A){return Math.min(f,A.samples)}function Pe(A){const S=n.get(A);return a&&A.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function it(A){const S=o.render.frame;v.get(A)!==S&&(v.set(A,S),A.update())}function Qe(A,S){const $=A.encoding,ae=A.format,ge=A.type;return A.isCompressedTexture===!0||A.isVideoTexture===!0||A.format===ja||$!==ei&&($===dt?a===!1?e.has("EXT_sRGB")===!0&&ae===sn?(A.format=ja,A.minFilter=Vt,A.generateMipmaps=!1):S=Ti.sRGBToLinear(S):(ae!==sn||ge!==wi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",$)),S}this.allocateTextureUnit=ie,this.resetTextureUnits=te,this.setTexture2D=K,this.setTexture2DArray=he,this.setTexture3D=re,this.setTextureCube=_e,this.rebindTextures=fe,this.setupRenderTarget=Ae,this.updateRenderTargetMipmap=ve,this.updateMultisampleRenderTarget=Ve,this.setupDepthRenderbuffer=ee,this.setupFrameBufferTexture=de,this.useMultisampledRTT=Pe}function xM(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===wi)return 5121;if(s===iv)return 32819;if(s===rv)return 32820;if(s===ev)return 5120;if(s===tv)return 5122;if(s===Jr)return 5123;if(s===nv)return 5124;if(s===Ks)return 5125;if(s===$n)return 5126;if(s===$r)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===sv)return 6406;if(s===sn)return 6408;if(s===av)return 6409;if(s===lv)return 6410;if(s===yi)return 6402;if(s===hr)return 34041;if(s===cv)return 6403;if(s===ov)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===ja)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===hv)return 36244;if(s===uv)return 33319;if(s===dv)return 33320;if(s===fv)return 36249;if(s===ea||s===ta||s===na||s===ia)if(o===dt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===ea)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===ta)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===na)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===ia)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===ea)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===ta)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===na)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===ia)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Jc||s===$c||s===Zc||s===Kc)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Jc)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===$c)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Zc)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Kc)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===pv)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Qc||s===eh)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===Qc)return o===dt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===eh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===th||s===nh||s===ih||s===rh||s===sh||s===oh||s===ah||s===lh||s===ch||s===hh||s===uh||s===dh||s===fh||s===ph)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===th)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===nh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===ih)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===rh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===sh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===oh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ah)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===lh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===ch)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===hh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===uh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===dh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===fh)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===ph)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===mh)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===mh)return o===dt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===sr?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Qu extends Ft{constructor(e=[]){super(),this.cameras=e}}Qu.prototype.isArrayCamera=!0;class nr extends st{constructor(){super(),this.type="Group"}}nr.prototype.isGroup=!0;const bM={type:"move"};class Da{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new nr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new nr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new nr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,c=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(bM))),h&&e.hand){o=!0;for(const _ of e.hand.values()){const m=t.getJointPose(_,n);if(h.joints[_.jointName]===void 0){const P=new nr;P.matrixAutoUpdate=!1,P.visible=!1,h.joints[_.jointName]=P,h.add(P)}const b=h.joints[_.jointName];m!==null&&(b.matrix.fromArray(m.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),b.jointRadius=m.radius),b.visible=m!==null}const u=h.joints["index-finger-tip"],f=h.joints["thumb-tip"],p=u.position.distanceTo(f.position),g=.02,v=.005;h.inputState.pinching&&p>g+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&p<=g-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=s!==null),h!==null&&(h.visible=o!==null),this}}class ed extends Tt{constructor(e,t,n,i,s,o,a,c,h,u){if(u=u!==void 0?u:yi,u!==yi&&u!==hr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===yi&&(n=Jr),n===void 0&&u===hr&&(n=sr),super(null,i,s,o,a,c,u,n,h),this.image={width:e,height:t},this.magFilter=a!==void 0?a:St,this.minFilter=c!==void 0?c:St,this.flipY=!1,this.generateMipmaps=!1}}ed.prototype.isDepthTexture=!0;class wM extends Si{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",c=null,h=null,u=null,f=null,p=null,g=null;const v=t.getContextAttributes();let _=null,m=null;const b=[],P=new Map,L=new Ft;L.layers.enable(1),L.viewport=new at;const M=new Ft;M.layers.enable(2),M.viewport=new at;const D=[L,M],N=new Qu;N.layers.enable(1),N.layers.enable(2);let U=null,T=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Y){let K=b[Y];return K===void 0&&(K=new Da,b[Y]=K),K.getTargetRaySpace()},this.getControllerGrip=function(Y){let K=b[Y];return K===void 0&&(K=new Da,b[Y]=K),K.getGripSpace()},this.getHand=function(Y){let K=b[Y];return K===void 0&&(K=new Da,b[Y]=K),K.getHandSpace()};function O(Y){const K=P.get(Y.inputSource);K&&K.dispatchEvent({type:Y.type,data:Y.inputSource})}function H(){P.forEach(function(Y,K){Y.disconnect(K)}),P.clear(),U=null,T=null,e.setRenderTarget(_),p=null,f=null,u=null,i=null,m=null,ie.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Y){s=Y,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Y){a=Y,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(Y){c=Y},this.getBaseLayer=function(){return f!==null?f:p},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(Y){if(i=Y,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",O),i.addEventListener("selectstart",O),i.addEventListener("selectend",O),i.addEventListener("squeeze",O),i.addEventListener("squeezestart",O),i.addEventListener("squeezeend",O),i.addEventListener("end",H),i.addEventListener("inputsourceschange",V),v.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const K={antialias:i.renderState.layers===void 0?v.antialias:!0,alpha:v.alpha,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};p=new XRWebGLLayer(i,t,K),i.updateRenderState({baseLayer:p}),m=new Jt(p.framebufferWidth,p.framebufferHeight,{format:sn,type:wi,encoding:e.outputEncoding})}else{let K=null,he=null,re=null;v.depth&&(re=v.stencil?35056:33190,K=v.stencil?hr:yi,he=v.stencil?sr:Jr);const _e={colorFormat:e.outputEncoding===dt?35907:32856,depthFormat:re,scaleFactor:s};u=new XRWebGLBinding(i,t),f=u.createProjectionLayer(_e),i.updateRenderState({layers:[f]}),m=new Jt(f.textureWidth,f.textureHeight,{format:sn,type:wi,depthTexture:new ed(f.textureWidth,f.textureHeight,he,void 0,void 0,void 0,void 0,void 0,void 0,K),stencilBuffer:v.stencil,encoding:e.outputEncoding,samples:v.antialias?4:0});const Ce=e.properties.get(m);Ce.__ignoreDepthValues=f.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(a),ie.setContext(i),ie.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function V(Y){const K=i.inputSources;for(let he=0;he<K.length;he++){const re=K[he].handedness==="right"?1:0;P.set(K[he],b[re])}for(let he=0;he<Y.removed.length;he++){const re=Y.removed[he],_e=P.get(re);_e&&(_e.dispatchEvent({type:"disconnected",data:re}),P.delete(re))}for(let he=0;he<Y.added.length;he++){const re=Y.added[he],_e=P.get(re);_e&&_e.dispatchEvent({type:"connected",data:re})}}const se=new C,ce=new C;function z(Y,K,he){se.setFromMatrixPosition(K.matrixWorld),ce.setFromMatrixPosition(he.matrixWorld);const re=se.distanceTo(ce),_e=K.projectionMatrix.elements,Ce=he.projectionMatrix.elements,De=_e[14]/(_e[10]-1),Z=_e[14]/(_e[10]+1),Ke=(_e[9]+1)/_e[5],Ne=(_e[9]-1)/_e[5],We=(_e[8]-1)/_e[0],de=(Ce[8]+1)/Ce[0],Ye=De*We,ne=De*de,ee=re/(-We+de),fe=ee*-We;K.matrixWorld.decompose(Y.position,Y.quaternion,Y.scale),Y.translateX(fe),Y.translateZ(ee),Y.matrixWorld.compose(Y.position,Y.quaternion,Y.scale),Y.matrixWorldInverse.copy(Y.matrixWorld).invert();const Ae=De+ee,ve=Z+ee,Ve=Ye-fe,Be=ne+(re-fe),Pe=Ke*Z/ve*Ae,it=Ne*Z/ve*Ae;Y.projectionMatrix.makePerspective(Ve,Be,Pe,it,Ae,ve)}function W(Y,K){K===null?Y.matrixWorld.copy(Y.matrix):Y.matrixWorld.multiplyMatrices(K.matrixWorld,Y.matrix),Y.matrixWorldInverse.copy(Y.matrixWorld).invert()}this.updateCamera=function(Y){if(i===null)return;N.near=M.near=L.near=Y.near,N.far=M.far=L.far=Y.far,(U!==N.near||T!==N.far)&&(i.updateRenderState({depthNear:N.near,depthFar:N.far}),U=N.near,T=N.far);const K=Y.parent,he=N.cameras;W(N,K);for(let _e=0;_e<he.length;_e++)W(he[_e],K);N.matrixWorld.decompose(N.position,N.quaternion,N.scale),Y.position.copy(N.position),Y.quaternion.copy(N.quaternion),Y.scale.copy(N.scale),Y.matrix.copy(N.matrix),Y.matrixWorld.copy(N.matrixWorld);const re=Y.children;for(let _e=0,Ce=re.length;_e<Ce;_e++)re[_e].updateMatrixWorld(!0);he.length===2?z(N,L,M):N.projectionMatrix.copy(L.projectionMatrix)},this.getCamera=function(){return N},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(p!==null)return p.fixedFoveation},this.setFoveation=function(Y){f!==null&&(f.fixedFoveation=Y),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=Y)};let j=null;function te(Y,K){if(h=K.getViewerPose(c||o),g=K,h!==null){const re=h.views;p!==null&&(e.setRenderTargetFramebuffer(m,p.framebuffer),e.setRenderTarget(m));let _e=!1;re.length!==N.cameras.length&&(N.cameras.length=0,_e=!0);for(let Ce=0;Ce<re.length;Ce++){const De=re[Ce];let Z=null;if(p!==null)Z=p.getViewport(De);else{const Ne=u.getViewSubImage(f,De);Z=Ne.viewport,Ce===0&&(e.setRenderTargetTextures(m,Ne.colorTexture,f.ignoreDepthValues?void 0:Ne.depthStencilTexture),e.setRenderTarget(m))}const Ke=D[Ce];Ke.matrix.fromArray(De.transform.matrix),Ke.projectionMatrix.fromArray(De.projectionMatrix),Ke.viewport.set(Z.x,Z.y,Z.width,Z.height),Ce===0&&N.matrix.copy(Ke.matrix),_e===!0&&N.cameras.push(Ke)}}const he=i.inputSources;for(let re=0;re<b.length;re++){const _e=he[re],Ce=P.get(_e);Ce!==void 0&&Ce.update(_e,K,c||o)}j&&j(Y,K),g=null}const ie=new ju;ie.setAnimationLoop(te),this.setAnimationLoop=function(Y){j=Y},this.dispose=function(){}}}function MM(r,e){function t(_,m){_.fogColor.value.copy(m.color),m.isFog?(_.fogNear.value=m.near,_.fogFar.value=m.far):m.isFogExp2&&(_.fogDensity.value=m.density)}function n(_,m,b,P,L){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(_,m):m.isMeshToonMaterial?(i(_,m),u(_,m)):m.isMeshPhongMaterial?(i(_,m),h(_,m)):m.isMeshStandardMaterial?(i(_,m),f(_,m),m.isMeshPhysicalMaterial&&p(_,m,L)):m.isMeshMatcapMaterial?(i(_,m),g(_,m)):m.isMeshDepthMaterial?i(_,m):m.isMeshDistanceMaterial?(i(_,m),v(_,m)):m.isMeshNormalMaterial?i(_,m):m.isLineBasicMaterial?(s(_,m),m.isLineDashedMaterial&&o(_,m)):m.isPointsMaterial?a(_,m,b,P):m.isSpriteMaterial?c(_,m):m.isShadowMaterial?(_.color.value.copy(m.color),_.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(_,m){_.opacity.value=m.opacity,m.color&&_.diffuse.value.copy(m.color),m.emissive&&_.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(_.map.value=m.map),m.alphaMap&&(_.alphaMap.value=m.alphaMap),m.bumpMap&&(_.bumpMap.value=m.bumpMap,_.bumpScale.value=m.bumpScale,m.side===fn&&(_.bumpScale.value*=-1)),m.displacementMap&&(_.displacementMap.value=m.displacementMap,_.displacementScale.value=m.displacementScale,_.displacementBias.value=m.displacementBias),m.emissiveMap&&(_.emissiveMap.value=m.emissiveMap),m.normalMap&&(_.normalMap.value=m.normalMap,_.normalScale.value.copy(m.normalScale),m.side===fn&&_.normalScale.value.negate()),m.specularMap&&(_.specularMap.value=m.specularMap),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest);const b=e.get(m).envMap;if(b&&(_.envMap.value=b,_.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=m.reflectivity,_.ior.value=m.ior,_.refractionRatio.value=m.refractionRatio),m.lightMap){_.lightMap.value=m.lightMap;const M=r.physicallyCorrectLights!==!0?Math.PI:1;_.lightMapIntensity.value=m.lightMapIntensity*M}m.aoMap&&(_.aoMap.value=m.aoMap,_.aoMapIntensity.value=m.aoMapIntensity);let P;m.map?P=m.map:m.specularMap?P=m.specularMap:m.displacementMap?P=m.displacementMap:m.normalMap?P=m.normalMap:m.bumpMap?P=m.bumpMap:m.roughnessMap?P=m.roughnessMap:m.metalnessMap?P=m.metalnessMap:m.alphaMap?P=m.alphaMap:m.emissiveMap?P=m.emissiveMap:m.clearcoatMap?P=m.clearcoatMap:m.clearcoatNormalMap?P=m.clearcoatNormalMap:m.clearcoatRoughnessMap?P=m.clearcoatRoughnessMap:m.specularIntensityMap?P=m.specularIntensityMap:m.specularColorMap?P=m.specularColorMap:m.transmissionMap?P=m.transmissionMap:m.thicknessMap?P=m.thicknessMap:m.sheenColorMap?P=m.sheenColorMap:m.sheenRoughnessMap&&(P=m.sheenRoughnessMap),P!==void 0&&(P.isWebGLRenderTarget&&(P=P.texture),P.matrixAutoUpdate===!0&&P.updateMatrix(),_.uvTransform.value.copy(P.matrix));let L;m.aoMap?L=m.aoMap:m.lightMap&&(L=m.lightMap),L!==void 0&&(L.isWebGLRenderTarget&&(L=L.texture),L.matrixAutoUpdate===!0&&L.updateMatrix(),_.uv2Transform.value.copy(L.matrix))}function s(_,m){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity}function o(_,m){_.dashSize.value=m.dashSize,_.totalSize.value=m.dashSize+m.gapSize,_.scale.value=m.scale}function a(_,m,b,P){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity,_.size.value=m.size*b,_.scale.value=P*.5,m.map&&(_.map.value=m.map),m.alphaMap&&(_.alphaMap.value=m.alphaMap),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest);let L;m.map?L=m.map:m.alphaMap&&(L=m.alphaMap),L!==void 0&&(L.matrixAutoUpdate===!0&&L.updateMatrix(),_.uvTransform.value.copy(L.matrix))}function c(_,m){_.diffuse.value.copy(m.color),_.opacity.value=m.opacity,_.rotation.value=m.rotation,m.map&&(_.map.value=m.map),m.alphaMap&&(_.alphaMap.value=m.alphaMap),m.alphaTest>0&&(_.alphaTest.value=m.alphaTest);let b;m.map?b=m.map:m.alphaMap&&(b=m.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),_.uvTransform.value.copy(b.matrix))}function h(_,m){_.specular.value.copy(m.specular),_.shininess.value=Math.max(m.shininess,1e-4)}function u(_,m){m.gradientMap&&(_.gradientMap.value=m.gradientMap)}function f(_,m){_.roughness.value=m.roughness,_.metalness.value=m.metalness,m.roughnessMap&&(_.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(_.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(_.envMapIntensity.value=m.envMapIntensity)}function p(_,m,b){_.ior.value=m.ior,m.sheen>0&&(_.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),_.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(_.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(_.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(_.clearcoat.value=m.clearcoat,_.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(_.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(_.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),_.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===fn&&_.clearcoatNormalScale.value.negate())),m.transmission>0&&(_.transmission.value=m.transmission,_.transmissionSamplerMap.value=b.texture,_.transmissionSamplerSize.value.set(b.width,b.height),m.transmissionMap&&(_.transmissionMap.value=m.transmissionMap),_.thickness.value=m.thickness,m.thicknessMap&&(_.thicknessMap.value=m.thicknessMap),_.attenuationDistance.value=m.attenuationDistance,_.attenuationColor.value.copy(m.attenuationColor)),_.specularIntensity.value=m.specularIntensity,_.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(_.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(_.specularColorMap.value=m.specularColorMap)}function g(_,m){m.matcap&&(_.matcap.value=m.matcap)}function v(_,m){_.referencePosition.value.copy(m.referencePosition),_.nearDistance.value=m.nearDistance,_.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function SM(){const r=Qr("canvas");return r.style.display="block",r}function ot(r={}){const e=r.canvas!==void 0?r.canvas:SM(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let f=null,p=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ei,this.physicallyCorrectLights=!1,this.toneMapping=Fn,this.toneMappingExposure=1;const _=this;let m=!1,b=0,P=0,L=null,M=-1,D=null;const N=new at,U=new at;let T=null,O=e.width,H=e.height,V=1,se=null,ce=null;const z=new at(0,0,O,H),W=new at(0,0,O,H);let j=!1;const te=new go;let ie=!1,Y=!1,K=null;const he=new Ie,re=new le,_e=new C,Ce={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function De(){return L===null?V:1}let Z=t;function Ke(E,k){for(let J=0;J<E.length;J++){const X=E[J],x=e.getContext(X,k);if(x!==null)return x}return null}try{const E={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${sl}`),e.addEventListener("webglcontextlost",F,!1),e.addEventListener("webglcontextrestored",ye,!1),Z===null){const k=["webgl2","webgl","experimental-webgl"];if(_.isWebGL1Renderer===!0&&k.shift(),Z=Ke(k,E),Z===null)throw Ke(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Z.getShaderPrecisionFormat===void 0&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let Ne,We,de,Ye,ne,ee,fe,Ae,ve,Ve,Be,Pe,it,Qe,A,S,$,ae,ge,we,Fe,Q,Ge;function qe(){Ne=new Vb(Z),We=new Fb(Z,Ne,r),Ne.init(We),Q=new xM(Z,Ne,We),de=new vM(Z,Ne,We),Ye=new Wb(Z),ne=new aM,ee=new yM(Z,Ne,de,ne,We,Q,Ye),fe=new Bb(_),Ae=new Ub(_),ve=new ry(Z,We),Ge=new Ib(Z,Ne,ve,We),Ve=new Hb(Z,ve,Ye,Ge),Be=new Yb(Z,Ve,ve,Ye),ge=new Xb(Z,We,ee),S=new Nb(ne),Pe=new oM(_,fe,Ae,Ne,We,Ge,S),it=new MM(_,ne),Qe=new cM,A=new mM(Ne,We),ae=new Db(_,fe,de,Be,u,o),$=new Ku(_,Be,We),we=new Ob(Z,Ne,Ye,We),Fe=new Gb(Z,Ne,Ye,We),Ye.programs=Pe.programs,_.capabilities=We,_.extensions=Ne,_.properties=ne,_.renderLists=Qe,_.shadowMap=$,_.state=de,_.info=Ye}qe();const Te=new wM(_,Z);this.xr=Te,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const E=Ne.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){const E=Ne.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(E){E!==void 0&&(V=E,this.setSize(O,H,!1))},this.getSize=function(E){return E.set(O,H)},this.setSize=function(E,k,J){if(Te.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=E,H=k,e.width=Math.floor(E*V),e.height=Math.floor(k*V),J!==!1&&(e.style.width=E+"px",e.style.height=k+"px"),this.setViewport(0,0,E,k)},this.getDrawingBufferSize=function(E){return E.set(O*V,H*V).floor()},this.setDrawingBufferSize=function(E,k,J){O=E,H=k,V=J,e.width=Math.floor(E*J),e.height=Math.floor(k*J),this.setViewport(0,0,E,k)},this.getCurrentViewport=function(E){return E.copy(N)},this.getViewport=function(E){return E.copy(z)},this.setViewport=function(E,k,J,X){E.isVector4?z.set(E.x,E.y,E.z,E.w):z.set(E,k,J,X),de.viewport(N.copy(z).multiplyScalar(V).floor())},this.getScissor=function(E){return E.copy(W)},this.setScissor=function(E,k,J,X){E.isVector4?W.set(E.x,E.y,E.z,E.w):W.set(E,k,J,X),de.scissor(U.copy(W).multiplyScalar(V).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(E){de.setScissorTest(j=E)},this.setOpaqueSort=function(E){se=E},this.setTransparentSort=function(E){ce=E},this.getClearColor=function(E){return E.copy(ae.getClearColor())},this.setClearColor=function(){ae.setClearColor.apply(ae,arguments)},this.getClearAlpha=function(){return ae.getClearAlpha()},this.setClearAlpha=function(){ae.setClearAlpha.apply(ae,arguments)},this.clear=function(E=!0,k=!0,J=!0){let X=0;E&&(X|=16384),k&&(X|=256),J&&(X|=1024),Z.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",F,!1),e.removeEventListener("webglcontextrestored",ye,!1),Qe.dispose(),A.dispose(),ne.dispose(),fe.dispose(),Ae.dispose(),Be.dispose(),Ge.dispose(),Pe.dispose(),Te.dispose(),Te.removeEventListener("sessionstart",Oe),Te.removeEventListener("sessionend",je),K&&(K.dispose(),K=null),Je.stop()};function F(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ye(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const E=Ye.autoReset,k=$.enabled,J=$.autoUpdate,X=$.needsUpdate,x=$.type;qe(),Ye.autoReset=E,$.enabled=k,$.autoUpdate=J,$.needsUpdate=X,$.type=x}function me(E){const k=E.target;k.removeEventListener("dispose",me),Ue(k)}function Ue(E){Se(E),ne.remove(E)}function Se(E){const k=ne.get(E).programs;k!==void 0&&(k.forEach(function(J){Pe.releaseProgram(J)}),E.isShaderMaterial&&Pe.releaseShaderCache(E))}this.renderBufferDirect=function(E,k,J,X,x,R){k===null&&(k=Ce);const B=x.isMesh&&x.matrixWorld.determinant()<0,q=Mr(E,k,J,X,x);de.setMaterial(X,B);let ue=J.index;const Re=J.attributes.position;if(ue===null){if(Re===void 0||Re.count===0)return}else if(ue.count===0)return;let He=1;X.wireframe===!0&&(ue=Ve.getWireframeAttribute(J),He=2),Ge.setup(x,X,q,J,ue);let Xe,ht=we;ue!==null&&(Xe=ve.get(ue),ht=Fe,ht.setIndex(Xe));const Lt=ue!==null?ue.count:Re.count,$t=J.drawRange.start*He,zn=J.drawRange.count*He,Zt=R!==null?R.start*He:0,nt=R!==null?R.count*He:1/0,kn=Math.max($t,Zt),gt=Math.min(Lt,$t+zn,Zt+nt)-1,Kt=Math.max(0,gt-kn+1);if(Kt!==0){if(x.isMesh)X.wireframe===!0?(de.setLineWidth(X.wireframeLinewidth*De()),ht.setMode(1)):ht.setMode(4);else if(x.isLine){let gn=X.linewidth;gn===void 0&&(gn=1),de.setLineWidth(gn*De()),x.isLineSegments?ht.setMode(1):x.isLineLoop?ht.setMode(2):ht.setMode(3)}else x.isPoints?ht.setMode(0):x.isSprite&&ht.setMode(4);if(x.isInstancedMesh)ht.renderInstances(kn,Kt,x.count);else if(J.isInstancedBufferGeometry){const gn=Math.min(J.instanceCount,J._maxInstanceCount);ht.renderInstances(kn,Kt,gn)}else ht.render(kn,Kt)}},this.compile=function(E,k){p=A.get(E),p.init(),v.push(p),E.traverseVisible(function(J){J.isLight&&J.layers.test(k.layers)&&(p.pushLight(J),J.castShadow&&p.pushShadow(J))}),p.setupLights(_.physicallyCorrectLights),E.traverse(function(J){const X=J.material;if(X)if(Array.isArray(X))for(let x=0;x<X.length;x++){const R=X[x];Bn(R,E,J)}else Bn(X,E,J)}),v.pop(),p=null};let ze=null;function pe(E){ze&&ze(E)}function Oe(){Je.stop()}function je(){Je.start()}const Je=new ju;Je.setAnimationLoop(pe),typeof self!="undefined"&&Je.setContext(self),this.setAnimationLoop=function(E){ze=E,Te.setAnimationLoop(E),E===null?Je.stop():Je.start()},Te.addEventListener("sessionstart",Oe),Te.addEventListener("sessionend",je),this.render=function(E,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;E.autoUpdate===!0&&E.updateMatrixWorld(),k.parent===null&&k.updateMatrixWorld(),Te.enabled===!0&&Te.isPresenting===!0&&(Te.cameraAutoUpdate===!0&&Te.updateCamera(k),k=Te.getCamera()),E.isScene===!0&&E.onBeforeRender(_,E,k,L),p=A.get(E,v.length),p.init(),v.push(p),he.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),te.setFromProjectionMatrix(he),Y=this.localClippingEnabled,ie=S.init(this.clippingPlanes,Y,k),f=Qe.get(E,g.length),f.init(),g.push(f),Et(E,k,0,_.sortObjects),f.finish(),_.sortObjects===!0&&f.sort(se,ce),ie===!0&&S.beginShadows();const J=p.state.shadowsArray;if($.render(J,E,k),ie===!0&&S.endShadows(),this.info.autoReset===!0&&this.info.reset(),ae.render(f,E),p.setupLights(_.physicallyCorrectLights),k.isArrayCamera){const X=k.cameras;for(let x=0,R=X.length;x<R;x++){const B=X[x];It(f,E,B,B.viewport)}}else It(f,E,k);L!==null&&(ee.updateMultisampleRenderTarget(L),ee.updateRenderTargetMipmap(L)),E.isScene===!0&&E.onAfterRender(_,E,k),Ge.resetDefaultState(),M=-1,D=null,v.pop(),v.length>0?p=v[v.length-1]:p=null,g.pop(),g.length>0?f=g[g.length-1]:f=null};function Et(E,k,J,X){if(E.visible===!1)return;if(E.layers.test(k.layers)){if(E.isGroup)J=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(k);else if(E.isLight)p.pushLight(E),E.castShadow&&p.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||te.intersectsSprite(E)){X&&_e.setFromMatrixPosition(E.matrixWorld).applyMatrix4(he);const B=Be.update(E),q=E.material;q.visible&&f.push(E,B,q,J,_e.z,null)}}else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.frame!==Ye.render.frame&&(E.skeleton.update(),E.skeleton.frame=Ye.render.frame),!E.frustumCulled||te.intersectsObject(E))){X&&_e.setFromMatrixPosition(E.matrixWorld).applyMatrix4(he);const B=Be.update(E),q=E.material;if(Array.isArray(q)){const ue=B.groups;for(let Re=0,He=ue.length;Re<He;Re++){const Xe=ue[Re],ht=q[Xe.materialIndex];ht&&ht.visible&&f.push(E,B,ht,J,_e.z,Xe)}}else q.visible&&f.push(E,B,q,J,_e.z,null)}}const R=E.children;for(let B=0,q=R.length;B<q;B++)Et(R[B],k,J,X)}function It(E,k,J,X){const x=E.opaque,R=E.transmissive,B=E.transparent;p.setupLightsView(J),R.length>0&&wr(x,k,J),X&&de.viewport(N.copy(X)),x.length>0&&Nn(x,k,J),R.length>0&&Nn(R,k,J),B.length>0&&Nn(B,k,J),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function wr(E,k,J){const X=We.isWebGL2;K===null&&(K=new Jt(1,1,{generateMipmaps:!0,type:Ne.has("EXT_color_buffer_half_float")?$r:wi,minFilter:uo,samples:X&&s===!0?4:0})),_.getDrawingBufferSize(re),X?K.setSize(re.x,re.y):K.setSize(ro(re.x),ro(re.y));const x=_.getRenderTarget();_.setRenderTarget(K),_.clear();const R=_.toneMapping;_.toneMapping=Fn,Nn(E,k,J),_.toneMapping=R,ee.updateMultisampleRenderTarget(K),ee.updateRenderTargetMipmap(K),_.setRenderTarget(x)}function Nn(E,k,J){const X=k.isScene===!0?k.overrideMaterial:null;for(let x=0,R=E.length;x<R;x++){const B=E[x],q=B.object,ue=B.geometry,Re=X===null?B.material:X,He=B.group;q.layers.test(J.layers)&&Ai(q,k,J,ue,Re,He)}}function Ai(E,k,J,X,x,R){E.onBeforeRender(_,k,J,X,x,R),E.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),x.onBeforeRender(_,k,J,X,E,R),x.transparent===!0&&x.side===ar?(x.side=fn,x.needsUpdate=!0,_.renderBufferDirect(J,k,X,x,E,R),x.side=Yr,x.needsUpdate=!0,_.renderBufferDirect(J,k,X,x,E,R),x.side=ar):_.renderBufferDirect(J,k,X,x,E,R),E.onAfterRender(_,k,J,X,x,R)}function Bn(E,k,J){k.isScene!==!0&&(k=Ce);const X=ne.get(E),x=p.state.lights,R=p.state.shadowsArray,B=x.state.version,q=Pe.getParameters(E,x.state,R,k,J),ue=Pe.getProgramCacheKey(q);let Re=X.programs;X.environment=E.isMeshStandardMaterial?k.environment:null,X.fog=k.fog,X.envMap=(E.isMeshStandardMaterial?Ae:fe).get(E.envMap||X.environment),Re===void 0&&(E.addEventListener("dispose",me),Re=new Map,X.programs=Re);let He=Re.get(ue);if(He!==void 0){if(X.currentProgram===He&&X.lightsStateVersion===B)return Ci(E,q),He}else q.uniforms=Pe.getUniforms(E),E.onBuild(J,q,_),E.onBeforeCompile(q,_),He=Pe.acquireProgram(q,ue),Re.set(ue,He),X.uniforms=q.uniforms;const Xe=X.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(Xe.clippingPlanes=S.uniform),Ci(E,q),X.needsLights=Tr(E),X.lightsStateVersion=B,X.needsLights&&(Xe.ambientLightColor.value=x.state.ambient,Xe.lightProbe.value=x.state.probe,Xe.directionalLights.value=x.state.directional,Xe.directionalLightShadows.value=x.state.directionalShadow,Xe.spotLights.value=x.state.spot,Xe.spotLightShadows.value=x.state.spotShadow,Xe.rectAreaLights.value=x.state.rectArea,Xe.ltc_1.value=x.state.rectAreaLTC1,Xe.ltc_2.value=x.state.rectAreaLTC2,Xe.pointLights.value=x.state.point,Xe.pointLightShadows.value=x.state.pointShadow,Xe.hemisphereLights.value=x.state.hemi,Xe.directionalShadowMap.value=x.state.directionalShadowMap,Xe.directionalShadowMatrix.value=x.state.directionalShadowMatrix,Xe.spotShadowMap.value=x.state.spotShadowMap,Xe.spotShadowMatrix.value=x.state.spotShadowMatrix,Xe.pointShadowMap.value=x.state.pointShadowMap,Xe.pointShadowMatrix.value=x.state.pointShadowMatrix);const ht=He.getUniforms(),Lt=Kn.seqWithValue(ht.seq,Xe);return X.currentProgram=He,X.uniformsList=Lt,He}function Ci(E,k){const J=ne.get(E);J.outputEncoding=k.outputEncoding,J.instancing=k.instancing,J.skinning=k.skinning,J.morphTargets=k.morphTargets,J.morphNormals=k.morphNormals,J.morphColors=k.morphColors,J.morphTargetsCount=k.morphTargetsCount,J.numClippingPlanes=k.numClippingPlanes,J.numIntersection=k.numClipIntersection,J.vertexAlphas=k.vertexAlphas,J.vertexTangents=k.vertexTangents,J.toneMapping=k.toneMapping}function Mr(E,k,J,X,x){k.isScene!==!0&&(k=Ce),ee.resetTextureUnits();const R=k.fog,B=X.isMeshStandardMaterial?k.environment:null,q=L===null?_.outputEncoding:L.isXRRenderTarget===!0?L.texture.encoding:ei,ue=(X.isMeshStandardMaterial?Ae:fe).get(X.envMap||B),Re=X.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,He=!!X.normalMap&&!!J.attributes.tangent,Xe=!!J.morphAttributes.position,ht=!!J.morphAttributes.normal,Lt=!!J.morphAttributes.color,$t=X.toneMapped?_.toneMapping:Fn,zn=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Zt=zn!==void 0?zn.length:0,nt=ne.get(X),kn=p.state.lights;if(ie===!0&&(Y===!0||E!==D)){const Wt=E===D&&X.id===M;S.setState(X,E,Wt)}let gt=!1;X.version===nt.__version?(nt.needsLights&&nt.lightsStateVersion!==kn.state.version||nt.outputEncoding!==q||x.isInstancedMesh&&nt.instancing===!1||!x.isInstancedMesh&&nt.instancing===!0||x.isSkinnedMesh&&nt.skinning===!1||!x.isSkinnedMesh&&nt.skinning===!0||nt.envMap!==ue||X.fog===!0&&nt.fog!==R||nt.numClippingPlanes!==void 0&&(nt.numClippingPlanes!==S.numPlanes||nt.numIntersection!==S.numIntersection)||nt.vertexAlphas!==Re||nt.vertexTangents!==He||nt.morphTargets!==Xe||nt.morphNormals!==ht||nt.morphColors!==Lt||nt.toneMapping!==$t||We.isWebGL2===!0&&nt.morphTargetsCount!==Zt)&&(gt=!0):(gt=!0,nt.__version=X.version);let Kt=nt.currentProgram;gt===!0&&(Kt=Bn(X,k,x));let gn=!1,ri=!1,Er=!1;const At=Kt.getUniforms(),si=nt.uniforms;if(de.useProgram(Kt.program)&&(gn=!0,ri=!0,Er=!0),X.id!==M&&(M=X.id,ri=!0),gn||D!==E){if(At.setValue(Z,"projectionMatrix",E.projectionMatrix),We.logarithmicDepthBuffer&&At.setValue(Z,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),D!==E&&(D=E,ri=!0,Er=!0),X.isShaderMaterial||X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshStandardMaterial||X.envMap){const Wt=At.map.cameraPosition;Wt!==void 0&&Wt.setValue(Z,_e.setFromMatrixPosition(E.matrixWorld))}(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&At.setValue(Z,"isOrthographic",E.isOrthographicCamera===!0),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial||X.isShadowMaterial||x.isSkinnedMesh)&&At.setValue(Z,"viewMatrix",E.matrixWorldInverse)}if(x.isSkinnedMesh){At.setOptional(Z,x,"bindMatrix"),At.setOptional(Z,x,"bindMatrixInverse");const Wt=x.skeleton;Wt&&(We.floatVertexTextures?(Wt.boneTexture===null&&Wt.computeBoneTexture(),At.setValue(Z,"boneTexture",Wt.boneTexture,ee),At.setValue(Z,"boneTextureSize",Wt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const _n=J.morphAttributes;return(_n.position!==void 0||_n.normal!==void 0||_n.color!==void 0&&We.isWebGL2===!0)&&ge.update(x,J,X,Kt),(ri||nt.receiveShadow!==x.receiveShadow)&&(nt.receiveShadow=x.receiveShadow,At.setValue(Z,"receiveShadow",x.receiveShadow)),ri&&(At.setValue(Z,"toneMappingExposure",_.toneMappingExposure),nt.needsLights&&Sr(si,Er),R&&X.fog===!0&&it.refreshFogUniforms(si,R),it.refreshMaterialUniforms(si,X,V,H,K),Kn.upload(Z,nt.uniformsList,si,ee)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(Kn.upload(Z,nt.uniformsList,si,ee),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&At.setValue(Z,"center",x.center),At.setValue(Z,"modelViewMatrix",x.modelViewMatrix),At.setValue(Z,"normalMatrix",x.normalMatrix),At.setValue(Z,"modelMatrix",x.matrixWorld),Kt}function Sr(E,k){E.ambientLightColor.needsUpdate=k,E.lightProbe.needsUpdate=k,E.directionalLights.needsUpdate=k,E.directionalLightShadows.needsUpdate=k,E.pointLights.needsUpdate=k,E.pointLightShadows.needsUpdate=k,E.spotLights.needsUpdate=k,E.spotLightShadows.needsUpdate=k,E.rectAreaLights.needsUpdate=k,E.hemisphereLights.needsUpdate=k}function Tr(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(E,k,J){ne.get(E.texture).__webglTexture=k,ne.get(E.depthTexture).__webglTexture=J;const X=ne.get(E);X.__hasExternalTextures=!0,X.__hasExternalTextures&&(X.__autoAllocateDepthBuffer=J===void 0,X.__autoAllocateDepthBuffer||Ne.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(E,k){const J=ne.get(E);J.__webglFramebuffer=k,J.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(E,k=0,J=0){L=E,b=k,P=J;let X=!0;if(E){const ue=ne.get(E);ue.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(36160,null),X=!1):ue.__webglFramebuffer===void 0?ee.setupRenderTarget(E):ue.__hasExternalTextures&&ee.rebindTextures(E,ne.get(E.texture).__webglTexture,ne.get(E.depthTexture).__webglTexture)}let x=null,R=!1,B=!1;if(E){const ue=E.texture;(ue.isData3DTexture||ue.isDataArrayTexture)&&(B=!0);const Re=ne.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(x=Re[k],R=!0):We.isWebGL2&&E.samples>0&&ee.useMultisampledRTT(E)===!1?x=ne.get(E).__webglMultisampledFramebuffer:x=Re,N.copy(E.viewport),U.copy(E.scissor),T=E.scissorTest}else N.copy(z).multiplyScalar(V).floor(),U.copy(W).multiplyScalar(V).floor(),T=j;if(de.bindFramebuffer(36160,x)&&We.drawBuffers&&X&&de.drawBuffers(E,x),de.viewport(N),de.scissor(U),de.setScissorTest(T),R){const ue=ne.get(E.texture);Z.framebufferTexture2D(36160,36064,34069+k,ue.__webglTexture,J)}else if(B){const ue=ne.get(E.texture),Re=k||0;Z.framebufferTextureLayer(36160,36064,ue.__webglTexture,J||0,Re)}M=-1},this.readRenderTargetPixels=function(E,k,J,X,x,R,B){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let q=ne.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&B!==void 0&&(q=q[B]),q){de.bindFramebuffer(36160,q);try{const ue=E.texture,Re=ue.format,He=ue.type;if(Re!==sn&&Q.convert(Re)!==Z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Xe=He===$r&&(Ne.has("EXT_color_buffer_half_float")||We.isWebGL2&&Ne.has("EXT_color_buffer_float"));if(He!==wi&&Q.convert(He)!==Z.getParameter(35738)&&!(He===$n&&(We.isWebGL2||Ne.has("OES_texture_float")||Ne.has("WEBGL_color_buffer_float")))&&!Xe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=E.width-X&&J>=0&&J<=E.height-x&&Z.readPixels(k,J,X,x,Q.convert(Re),Q.convert(He),R)}finally{const ue=L!==null?ne.get(L).__webglFramebuffer:null;de.bindFramebuffer(36160,ue)}}},this.copyFramebufferToTexture=function(E,k,J=0){if(k.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const X=Math.pow(2,-J),x=Math.floor(k.image.width*X),R=Math.floor(k.image.height*X);ee.setTexture2D(k,0),Z.copyTexSubImage2D(3553,J,0,0,E.x,E.y,x,R),de.unbindTexture()},this.copyTextureToTexture=function(E,k,J,X=0){const x=k.image.width,R=k.image.height,B=Q.convert(J.format),q=Q.convert(J.type);ee.setTexture2D(J,0),Z.pixelStorei(37440,J.flipY),Z.pixelStorei(37441,J.premultiplyAlpha),Z.pixelStorei(3317,J.unpackAlignment),k.isDataTexture?Z.texSubImage2D(3553,X,E.x,E.y,x,R,B,q,k.image.data):k.isCompressedTexture?Z.compressedTexSubImage2D(3553,X,E.x,E.y,k.mipmaps[0].width,k.mipmaps[0].height,B,k.mipmaps[0].data):Z.texSubImage2D(3553,X,E.x,E.y,B,q,k.image),X===0&&J.generateMipmaps&&Z.generateMipmap(3553),de.unbindTexture()},this.copyTextureToTexture3D=function(E,k,J,X,x=0){if(_.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const R=E.max.x-E.min.x+1,B=E.max.y-E.min.y+1,q=E.max.z-E.min.z+1,ue=Q.convert(X.format),Re=Q.convert(X.type);let He;if(X.isData3DTexture)ee.setTexture3D(X,0),He=32879;else if(X.isDataArrayTexture)ee.setTexture2DArray(X,0),He=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Z.pixelStorei(37440,X.flipY),Z.pixelStorei(37441,X.premultiplyAlpha),Z.pixelStorei(3317,X.unpackAlignment);const Xe=Z.getParameter(3314),ht=Z.getParameter(32878),Lt=Z.getParameter(3316),$t=Z.getParameter(3315),zn=Z.getParameter(32877),Zt=J.isCompressedTexture?J.mipmaps[0]:J.image;Z.pixelStorei(3314,Zt.width),Z.pixelStorei(32878,Zt.height),Z.pixelStorei(3316,E.min.x),Z.pixelStorei(3315,E.min.y),Z.pixelStorei(32877,E.min.z),J.isDataTexture||J.isData3DTexture?Z.texSubImage3D(He,x,k.x,k.y,k.z,R,B,q,ue,Re,Zt.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(He,x,k.x,k.y,k.z,R,B,q,ue,Zt.data)):Z.texSubImage3D(He,x,k.x,k.y,k.z,R,B,q,ue,Re,Zt),Z.pixelStorei(3314,Xe),Z.pixelStorei(32878,ht),Z.pixelStorei(3316,Lt),Z.pixelStorei(3315,$t),Z.pixelStorei(32877,zn),x===0&&X.generateMipmaps&&Z.generateMipmap(He),de.unbindTexture()},this.initTexture=function(E){ee.setTexture2D(E,0),de.unbindTexture()},this.resetState=function(){b=0,P=0,L=null,de.reset(),Ge.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ot.prototype.isWebGLRenderer=!0;class TM extends ot{}TM.prototype.isWebGL1Renderer=!0;class td extends st{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}td.prototype.isScene=!0;class ss{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Zr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=on()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=on()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=on()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ss.prototype.isInterleavedBuffer=!0;const Ot=new C;class es{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.applyMatrix4(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.applyNormalMatrix(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.transformDirection(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new xt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new es(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}es.prototype.isInterleavedBufferAttribute=!0;class _l extends bt{constructor(e){super(),this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}_l.prototype.isSpriteMaterial=!0;let Yi;const Nr=new C,Ji=new C,$i=new C,Zi=new le,Br=new le,nd=new Ie,Us=new C,zr=new C,Vs=new C,Zh=new le,Ia=new le,Kh=new le;class EM extends st{constructor(e){if(super(),this.type="Sprite",Yi===void 0){Yi=new ct;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new ss(t,5);Yi.setIndex([0,1,2,0,2,3]),Yi.setAttribute("position",new es(n,3,0,!1)),Yi.setAttribute("uv",new es(n,2,3,!1))}this.geometry=Yi,this.material=e!==void 0?e:new _l,this.center=new le(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ji.setFromMatrixScale(this.matrixWorld),nd.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$i.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ji.multiplyScalar(-$i.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;Hs(Us.set(-.5,-.5,0),$i,o,Ji,i,s),Hs(zr.set(.5,-.5,0),$i,o,Ji,i,s),Hs(Vs.set(.5,.5,0),$i,o,Ji,i,s),Zh.set(0,0),Ia.set(1,0),Kh.set(1,1);let a=e.ray.intersectTriangle(Us,zr,Vs,!1,Nr);if(a===null&&(Hs(zr.set(-.5,.5,0),$i,o,Ji,i,s),Ia.set(0,1),a=e.ray.intersectTriangle(Us,Vs,zr,!1,Nr),a===null))return;const c=e.ray.origin.distanceTo(Nr);c<e.near||c>e.far||t.push({distance:c,point:Nr.clone(),uv:vt.getUV(Nr,Us,zr,Vs,Zh,Ia,Kh,new le),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}EM.prototype.isSprite=!0;function Hs(r,e,t,n,i,s){Zi.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Br.x=s*Zi.x-i*Zi.y,Br.y=i*Zi.x+s*Zi.y):Br.copy(Zi),r.copy(e),r.x+=Br.x,r.y+=Br.y,r.applyMatrix4(nd)}const Qh=new C,eu=new at,tu=new at,AM=new C,nu=new Ie;class id extends Ht{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ie,this.bindMatrixInverse=new Ie}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new at,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;eu.fromBufferAttribute(i.attributes.skinIndex,e),tu.fromBufferAttribute(i.attributes.skinWeight,e),Qh.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=tu.getComponent(s);if(o!==0){const a=eu.getComponent(s);nu.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(AM.copy(Qh).applyMatrix4(nu),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}id.prototype.isSkinnedMesh=!0;class rd extends st{constructor(){super(),this.type="Bone"}}rd.prototype.isBone=!0;class sd extends Tt{constructor(e=null,t=1,n=1,i,s,o,a,c,h=St,u=St,f,p){super(null,o,a,c,h,u,i,s,f,p),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}sd.prototype.isDataTexture=!0;const iu=new Ie,CM=new Ie;class od{constructor(e=[],t=[]){this.uuid=on(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ie)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ie;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:CM;iu.multiplyMatrices(a,t[s]),iu.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new od(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=zu(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new sd(t,e,e,sn,$n);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new rd),this.bones.push(o),this.boneInverses.push(new Ie().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class Ya extends xt{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Ya.prototype.isInstancedBufferAttribute=!0;const ru=new Ie,su=new Ie,Gs=[],kr=new Ht;class PM extends Ht{constructor(e,t,n){super(e,t),this.instanceMatrix=new Ya(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(kr.geometry=this.geometry,kr.material=this.material,kr.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,ru),su.multiplyMatrices(n,ru),kr.matrixWorld=su,kr.raycast(e,Gs);for(let o=0,a=Gs.length;o<a;o++){const c=Gs[o];c.instanceId=s,c.object=this,t.push(c)}Gs.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ya(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}PM.prototype.isInstancedMesh=!0;class vr extends bt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Le(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}vr.prototype.isLineBasicMaterial=!0;const ou=new C,au=new C,lu=new Ie,Oa=new gr,Ws=new mr;class vl extends st{constructor(e=new ct,t=new vr){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)ou.fromBufferAttribute(t,i-1),au.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ou.distanceTo(au);e.setAttribute("lineDistance",new lt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ws.copy(n.boundingSphere),Ws.applyMatrix4(i),Ws.radius+=s,e.ray.intersectsSphere(Ws)===!1)return;lu.copy(i).invert(),Oa.copy(e.ray).applyMatrix4(lu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,h=new C,u=new C,f=new C,p=new C,g=this.isLineSegments?2:1;if(n.isBufferGeometry){const v=n.index,m=n.attributes.position;if(v!==null){const b=Math.max(0,o.start),P=Math.min(v.count,o.start+o.count);for(let L=b,M=P-1;L<M;L+=g){const D=v.getX(L),N=v.getX(L+1);if(h.fromBufferAttribute(m,D),u.fromBufferAttribute(m,N),Oa.distanceSqToSegment(h,u,p,f)>c)continue;p.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(p);T<e.near||T>e.far||t.push({distance:T,point:f.clone().applyMatrix4(this.matrixWorld),index:L,face:null,faceIndex:null,object:this})}}else{const b=Math.max(0,o.start),P=Math.min(m.count,o.start+o.count);for(let L=b,M=P-1;L<M;L+=g){if(h.fromBufferAttribute(m,L),u.fromBufferAttribute(m,L+1),Oa.distanceSqToSegment(h,u,p,f)>c)continue;p.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(p);N<e.near||N>e.far||t.push({distance:N,point:f.clone().applyMatrix4(this.matrixWorld),index:L,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}vl.prototype.isLine=!0;const cu=new C,hu=new C;class yl extends vl{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)cu.fromBufferAttribute(t,i),hu.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+cu.distanceTo(hu);e.setAttribute("lineDistance",new lt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}yl.prototype.isLineSegments=!0;class RM extends vl{constructor(e,t){super(e,t),this.type="LineLoop"}}RM.prototype.isLineLoop=!0;class vo extends bt{constructor(e){super(),this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}vo.prototype.isPointsMaterial=!0;const uu=new Ie,Ja=new gr,js=new mr,qs=new C;class ad extends st{constructor(e=new ct,t=new vo){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),js.copy(n.boundingSphere),js.applyMatrix4(i),js.radius+=s,e.ray.intersectsSphere(js)===!1)return;uu.copy(i).invert(),Ja.copy(e.ray).applyMatrix4(uu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a;if(n.isBufferGeometry){const h=n.index,f=n.attributes.position;if(h!==null){const p=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let v=p,_=g;v<_;v++){const m=h.getX(v);qs.fromBufferAttribute(f,m),du(qs,m,c,i,e,t,this)}}else{const p=Math.max(0,o.start),g=Math.min(f.count,o.start+o.count);for(let v=p,_=g;v<_;v++)qs.fromBufferAttribute(f,v),du(qs,v,c,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}ad.prototype.isPoints=!0;function du(r,e,t,n,i,s,o){const a=Ja.distanceSqToPoint(r);if(a<t){const c=new C;Ja.closestPointToPoint(r,c),c.applyMatrix4(n);const h=i.ray.origin.distanceTo(c);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,object:o})}}class LM extends Tt{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h),this.minFilter=o!==void 0?o:Vt,this.magFilter=s!==void 0?s:Vt,this.generateMipmaps=!1;const u=this;function f(){u.needsUpdate=!0,e.requestVideoFrameCallback(f)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(f)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}LM.prototype.isVideoTexture=!0;class DM extends Tt{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=St,this.minFilter=St,this.generateMipmaps=!1,this.needsUpdate=!0}}DM.prototype.isFramebufferTexture=!0;class IM extends Tt{constructor(e,t,n,i,s,o,a,c,h,u,f,p){super(null,o,a,c,h,u,i,s,f,p),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}IM.prototype.isCompressedTexture=!0;class OM extends Tt{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h),this.needsUpdate=!0}}OM.prototype.isCanvasTexture=!0;class an{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,c=s-1,h;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),h=n[i]-o,h<0)a=i+1;else if(h>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(s-1);const u=n[i],p=n[i+1]-u,g=(o-u)/p;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),c=t||(o.isVector2?new le:new C);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new C,i=[],s=[],o=[],a=new C,c=new Ie;for(let g=0;g<=e;g++){const v=g/e;i[g]=this.getTangentAt(v,new C)}s[0]=new C,o[0]=new C;let h=Number.MAX_VALUE;const u=Math.abs(i[0].x),f=Math.abs(i[0].y),p=Math.abs(i[0].z);u<=h&&(h=u,n.set(1,0,0)),f<=h&&(h=f,n.set(0,1,0)),p<=h&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),o[g]=o[g-1].clone(),a.crossVectors(i[g-1],i[g]),a.length()>Number.EPSILON){a.normalize();const v=Math.acos(Pt(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(c.makeRotationAxis(a,v))}o[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(Pt(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(g=-g);for(let v=1;v<=e;v++)s[v].applyMatrix4(c.makeRotationAxis(i[v],g*v)),o[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class yo extends an{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,c=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t){const n=t||new le,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(a),h=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),f=Math.sin(this.aRotation),p=c-this.aX,g=h-this.aY;c=p*u-g*f+this.aX,h=p*f+g*u+this.aY}return n.set(c,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}yo.prototype.isEllipseCurve=!0;class ld extends yo{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.type="ArcCurve"}}ld.prototype.isArcCurve=!0;function xl(){let r=0,e=0,t=0,n=0;function i(s,o,a,c){r=s,e=a,t=-3*s+3*o-2*a-c,n=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,h){i(o,a,h*(a-s),h*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,h,u,f){let p=(o-s)/h-(a-s)/(h+u)+(a-o)/u,g=(a-o)/u-(c-o)/(u+f)+(c-a)/f;p*=u,g*=u,i(o,a,p,g)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const Xs=new C,Fa=new xl,Na=new xl,Ba=new xl;class cd extends an{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new C){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:c===0&&a===s-1&&(a=s-2,c=1);let h,u;this.closed||a>0?h=i[(a-1)%s]:(Xs.subVectors(i[0],i[1]).add(i[0]),h=Xs);const f=i[a%s],p=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Xs.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Xs),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(f),g),_=Math.pow(f.distanceToSquared(p),g),m=Math.pow(p.distanceToSquared(u),g);_<1e-4&&(_=1),v<1e-4&&(v=_),m<1e-4&&(m=_),Fa.initNonuniformCatmullRom(h.x,f.x,p.x,u.x,v,_,m),Na.initNonuniformCatmullRom(h.y,f.y,p.y,u.y,v,_,m),Ba.initNonuniformCatmullRom(h.z,f.z,p.z,u.z,v,_,m)}else this.curveType==="catmullrom"&&(Fa.initCatmullRom(h.x,f.x,p.x,u.x,this.tension),Na.initCatmullRom(h.y,f.y,p.y,u.y,this.tension),Ba.initCatmullRom(h.z,f.z,p.z,u.z,this.tension));return n.set(Fa.calc(c),Na.calc(c),Ba.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new C().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}cd.prototype.isCatmullRomCurve3=!0;function fu(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,c=r*a;return(2*t-2*n+s+o)*c+(-3*t+3*n-2*s-o)*a+s*r+t}function FM(r,e){const t=1-r;return t*t*e}function NM(r,e){return 2*(1-r)*r*e}function BM(r,e){return r*r*e}function jr(r,e,t,n){return FM(r,e)+NM(r,t)+BM(r,n)}function zM(r,e){const t=1-r;return t*t*t*e}function kM(r,e){const t=1-r;return 3*t*t*r*e}function UM(r,e){return 3*(1-r)*r*r*e}function VM(r,e){return r*r*r*e}function qr(r,e,t,n,i){return zM(r,e)+kM(r,t)+UM(r,n)+VM(r,i)}class bl extends an{constructor(e=new le,t=new le,n=new le,i=new le){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(qr(e,i.x,s.x,o.x,a.x),qr(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}bl.prototype.isCubicBezierCurve=!0;class hd extends an{constructor(e=new C,t=new C,n=new C,i=new C){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new C){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(qr(e,i.x,s.x,o.x,a.x),qr(e,i.y,s.y,o.y,a.y),qr(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}hd.prototype.isCubicBezierCurve3=!0;class xo extends an{constructor(e=new le,t=new le){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new le){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new le;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}xo.prototype.isLineCurve=!0;class HM extends an{constructor(e=new C,t=new C){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new C){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class wl extends an{constructor(e=new le,t=new le,n=new le){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(jr(e,i.x,s.x,o.x),jr(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}wl.prototype.isQuadraticBezierCurve=!0;class ud extends an{constructor(e=new C,t=new C,n=new C){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new C){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(jr(e,i.x,s.x,o.x),jr(e,i.y,s.y,o.y),jr(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ud.prototype.isQuadraticBezierCurve3=!0;class Ml extends an{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new le){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,c=i[o===0?o:o-1],h=i[o],u=i[o>i.length-2?i.length-1:o+1],f=i[o>i.length-3?i.length-1:o+2];return n.set(fu(a,c.x,h.x,u.x,f.x),fu(a,c.y,h.y,u.y,f.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new le().fromArray(i))}return this}}Ml.prototype.isSplineCurve=!0;var dd=Object.freeze({__proto__:null,ArcCurve:ld,CatmullRomCurve3:cd,CubicBezierCurve:bl,CubicBezierCurve3:hd,EllipseCurve:yo,LineCurve:xo,LineCurve3:HM,QuadraticBezierCurve:wl,QuadraticBezierCurve3:ud,SplineCurve:Ml});class GM extends an{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new xo(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],c=a.getLength(),h=c===0?0:1-o/c;return a.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let h=0;h<c.length;h++){const u=c[h];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new dd[i.type]().fromJSON(i))}return this}}class $a extends GM{constructor(e){super(),this.type="Path",this.currentPoint=new le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new xo(this.currentPoint.clone(),new le(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new wl(this.currentPoint.clone(),new le(e,t),new le(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new bl(this.currentPoint.clone(),new le(e,t),new le(n,i),new le(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Ml(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,c){const h=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+h,t+u,n,i,s,o,a,c),this}absellipse(e,t,n,i,s,o,a,c){const h=new yo(e,t,n,i,s,o,a,c);if(this.curves.length>0){const f=h.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class fd extends ct{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],c=[],h=new C,u=new le;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let f=0,p=3;f<=t;f++,p+=3){const g=n+f/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),o.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(o[p]/e+1)/2,u.y=(o[p+1]/e+1)/2,c.push(u.x,u.y)}for(let f=1;f<=t;f++)s.push(f,f+1,0);this.setIndex(s),this.setAttribute("position",new lt(o,3)),this.setAttribute("normal",new lt(a,3)),this.setAttribute("uv",new lt(c,2))}static fromJSON(e){return new fd(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Sl extends ct{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const h=this;i=Math.floor(i),s=Math.floor(s);const u=[],f=[],p=[],g=[];let v=0;const _=[],m=n/2;let b=0;P(),o===!1&&(e>0&&L(!0),t>0&&L(!1)),this.setIndex(u),this.setAttribute("position",new lt(f,3)),this.setAttribute("normal",new lt(p,3)),this.setAttribute("uv",new lt(g,2));function P(){const M=new C,D=new C;let N=0;const U=(t-e)/n;for(let T=0;T<=s;T++){const O=[],H=T/s,V=H*(t-e)+e;for(let se=0;se<=i;se++){const ce=se/i,z=ce*c+a,W=Math.sin(z),j=Math.cos(z);D.x=V*W,D.y=-H*n+m,D.z=V*j,f.push(D.x,D.y,D.z),M.set(W,U,j).normalize(),p.push(M.x,M.y,M.z),g.push(ce,1-H),O.push(v++)}_.push(O)}for(let T=0;T<i;T++)for(let O=0;O<s;O++){const H=_[O][T],V=_[O+1][T],se=_[O+1][T+1],ce=_[O][T+1];u.push(H,V,ce),u.push(V,se,ce),N+=6}h.addGroup(b,N,0),b+=N}function L(M){const D=v,N=new le,U=new C;let T=0;const O=M===!0?e:t,H=M===!0?1:-1;for(let se=1;se<=i;se++)f.push(0,m*H,0),p.push(0,H,0),g.push(.5,.5),v++;const V=v;for(let se=0;se<=i;se++){const z=se/i*c+a,W=Math.cos(z),j=Math.sin(z);U.x=O*j,U.y=m*H,U.z=O*W,f.push(U.x,U.y,U.z),p.push(0,H,0),N.x=W*.5+.5,N.y=j*.5*H+.5,g.push(N.x,N.y),v++}for(let se=0;se<i;se++){const ce=D+se,z=V+se;M===!0?u.push(z,z+1,ce):u.push(z+1,z,ce),T+=3}h.addGroup(b,T,M===!0?1:2),b+=T}}static fromJSON(e){return new Sl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class pd extends Sl{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new pd(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}new C;new C;new C;new vt;class os extends $a{constructor(e){super(e),this.uuid=on(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new $a().fromJSON(i))}return this}}const WM={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=md(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,h,u,f,p,g;if(n&&(s=JM(r,e,s,t)),r.length>80*t){a=h=r[0],c=u=r[1];for(let v=t;v<i;v+=t)f=r[v],p=r[v+1],f<a&&(a=f),p<c&&(c=p),f>h&&(h=f),p>u&&(u=p);g=Math.max(h-a,u-c),g=g!==0?1/g:0}return ts(s,o,t,a,c,g),o}};function md(r,e,t,n,i){let s,o;if(i===oS(r,e,t,n)>0)for(s=e;s<t;s+=n)o=pu(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=pu(s,r[s],r[s+1],o);return o&&bo(o,o.next)&&(is(o),o=o.next),o}function ti(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(bo(t,t.next)||mt(t.prev,t,t.next)===0)){if(is(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ts(r,e,t,n,i,s,o){if(!r)return;!o&&s&&eS(r,n,i,s);let a=r,c,h;for(;r.prev!==r.next;){if(c=r.prev,h=r.next,s?qM(r,n,i,s):jM(r)){e.push(c.i/t),e.push(r.i/t),e.push(h.i/t),is(r),r=h.next,a=h.next;continue}if(r=h,r===a){o?o===1?(r=XM(ti(r),e,t),ts(r,e,t,n,i,s,2)):o===2&&YM(r,e,t,n,i,s):ts(ti(r),e,t,n,i,s,1);break}}}function jM(r){const e=r.prev,t=r,n=r.next;if(mt(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(ir(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function qM(r,e,t,n){const i=r.prev,s=r,o=r.next;if(mt(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,c=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,h=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,f=Za(a,c,e,t,n),p=Za(h,u,e,t,n);let g=r.prevZ,v=r.nextZ;for(;g&&g.z>=f&&v&&v.z<=p;){if(g!==r.prev&&g!==r.next&&ir(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&mt(g.prev,g,g.next)>=0||(g=g.prevZ,v!==r.prev&&v!==r.next&&ir(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;g&&g.z>=f;){if(g!==r.prev&&g!==r.next&&ir(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&mt(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;v&&v.z<=p;){if(v!==r.prev&&v!==r.next&&ir(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function XM(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!bo(i,s)&&gd(i,n,n.next,s)&&ns(i,s)&&ns(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),is(n),is(n.next),n=r=s),n=n.next}while(n!==r);return ti(n)}function YM(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&iS(o,a)){let c=_d(o,a);o=ti(o,o.next),c=ti(c,c.next),ts(o,e,t,n,i,s),ts(c,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function JM(r,e,t,n){const i=[];let s,o,a,c,h;for(s=0,o=e.length;s<o;s++)a=e[s]*n,c=s<o-1?e[s+1]*n:r.length,h=md(r,a,c,n,!1),h===h.next&&(h.steiner=!0),i.push(nS(h));for(i.sort($M),s=0;s<i.length;s++)ZM(i[s],t),t=ti(t,t.next);return t}function $M(r,e){return r.x-e.x}function ZM(r,e){if(e=KM(r,e),e){const t=_d(e,r);ti(e,e.next),ti(t,t.next)}}function KM(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const p=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=n&&p>s){if(s=p,p===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,c=o.x,h=o.y;let u=1/0,f;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&ir(i<h?n:s,i,c,h,i<h?s:n,i,t.x,t.y)&&(f=Math.abs(i-t.y)/(n-t.x),ns(t,r)&&(f<u||f===u&&(t.x>o.x||t.x===o.x&&QM(o,t)))&&(o=t,u=f)),t=t.next;while(t!==a);return o}function QM(r,e){return mt(r.prev,r,e.prev)<0&&mt(e.next,r,r.next)<0}function eS(r,e,t,n){let i=r;do i.z===null&&(i.z=Za(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,tS(i)}function tS(r){let e,t,n,i,s,o,a,c,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<h&&(a++,n=n.nextZ,!!n);e++);for(c=h;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Za(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function nS(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ir(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function iS(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!rS(r,e)&&(ns(r,e)&&ns(e,r)&&sS(r,e)&&(mt(r.prev,r,e.prev)||mt(r,e.prev,e))||bo(r,e)&&mt(r.prev,r,r.next)>0&&mt(e.prev,e,e.next)>0)}function mt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function bo(r,e){return r.x===e.x&&r.y===e.y}function gd(r,e,t,n){const i=Js(mt(r,e,t)),s=Js(mt(r,e,n)),o=Js(mt(t,n,r)),a=Js(mt(t,n,e));return!!(i!==s&&o!==a||i===0&&Ys(r,t,e)||s===0&&Ys(r,n,e)||o===0&&Ys(t,r,n)||a===0&&Ys(t,e,n))}function Ys(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Js(r){return r>0?1:r<0?-1:0}function rS(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&gd(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function ns(r,e){return mt(r.prev,r,r.next)<0?mt(r,e,r.next)>=0&&mt(r,r.prev,e)>=0:mt(r,e,r.prev)<0||mt(r,r.next,e)<0}function sS(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function _d(r,e){const t=new Ka(r.i,r.x,r.y),n=new Ka(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function pu(r,e,t,n){const i=new Ka(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function is(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Ka(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function oS(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Qn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Qn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];mu(e),gu(n,e);let o=e.length;t.forEach(mu);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,gu(n,t[c]);const a=WM.triangulate(n,i);for(let c=0;c<a.length;c+=3)s.push(a.slice(c,c+3));return s}}function mu(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function gu(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class yr extends ct{constructor(e=new os([new le(.5,.5),new le(-.5,.5),new le(-.5,-.5),new le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,c=e.length;a<c;a++){const h=e[a];o(h)}this.setAttribute("position",new lt(i,3)),this.setAttribute("uv",new lt(s,2)),this.computeVertexNormals();function o(a){const c=[],h=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let f=t.depth!==void 0?t.depth:1,p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:g-.1,_=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const b=t.extrudePath,P=t.UVGenerator!==void 0?t.UVGenerator:aS;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),f=t.amount);let L,M=!1,D,N,U,T;b&&(L=b.getSpacedPoints(u),M=!0,p=!1,D=b.computeFrenetFrames(u,!1),N=new C,U=new C,T=new C),p||(m=0,g=0,v=0,_=0);const O=a.extractPoints(h);let H=O.shape;const V=O.holes;if(!Qn.isClockWise(H)){H=H.reverse();for(let ne=0,ee=V.length;ne<ee;ne++){const fe=V[ne];Qn.isClockWise(fe)&&(V[ne]=fe.reverse())}}const ce=Qn.triangulateShape(H,V),z=H;for(let ne=0,ee=V.length;ne<ee;ne++){const fe=V[ne];H=H.concat(fe)}function W(ne,ee,fe){return ee||console.error("THREE.ExtrudeGeometry: vec does not exist"),ee.clone().multiplyScalar(fe).add(ne)}const j=H.length,te=ce.length;function ie(ne,ee,fe){let Ae,ve,Ve;const Be=ne.x-ee.x,Pe=ne.y-ee.y,it=fe.x-ne.x,Qe=fe.y-ne.y,A=Be*Be+Pe*Pe,S=Be*Qe-Pe*it;if(Math.abs(S)>Number.EPSILON){const $=Math.sqrt(A),ae=Math.sqrt(it*it+Qe*Qe),ge=ee.x-Pe/$,we=ee.y+Be/$,Fe=fe.x-Qe/ae,Q=fe.y+it/ae,Ge=((Fe-ge)*Qe-(Q-we)*it)/(Be*Qe-Pe*it);Ae=ge+Be*Ge-ne.x,ve=we+Pe*Ge-ne.y;const qe=Ae*Ae+ve*ve;if(qe<=2)return new le(Ae,ve);Ve=Math.sqrt(qe/2)}else{let $=!1;Be>Number.EPSILON?it>Number.EPSILON&&($=!0):Be<-Number.EPSILON?it<-Number.EPSILON&&($=!0):Math.sign(Pe)===Math.sign(Qe)&&($=!0),$?(Ae=-Pe,ve=Be,Ve=Math.sqrt(A)):(Ae=Be,ve=Pe,Ve=Math.sqrt(A/2))}return new le(Ae/Ve,ve/Ve)}const Y=[];for(let ne=0,ee=z.length,fe=ee-1,Ae=ne+1;ne<ee;ne++,fe++,Ae++)fe===ee&&(fe=0),Ae===ee&&(Ae=0),Y[ne]=ie(z[ne],z[fe],z[Ae]);const K=[];let he,re=Y.concat();for(let ne=0,ee=V.length;ne<ee;ne++){const fe=V[ne];he=[];for(let Ae=0,ve=fe.length,Ve=ve-1,Be=Ae+1;Ae<ve;Ae++,Ve++,Be++)Ve===ve&&(Ve=0),Be===ve&&(Be=0),he[Ae]=ie(fe[Ae],fe[Ve],fe[Be]);K.push(he),re=re.concat(he)}for(let ne=0;ne<m;ne++){const ee=ne/m,fe=g*Math.cos(ee*Math.PI/2),Ae=v*Math.sin(ee*Math.PI/2)+_;for(let ve=0,Ve=z.length;ve<Ve;ve++){const Be=W(z[ve],Y[ve],Ae);Ke(Be.x,Be.y,-fe)}for(let ve=0,Ve=V.length;ve<Ve;ve++){const Be=V[ve];he=K[ve];for(let Pe=0,it=Be.length;Pe<it;Pe++){const Qe=W(Be[Pe],he[Pe],Ae);Ke(Qe.x,Qe.y,-fe)}}}const _e=v+_;for(let ne=0;ne<j;ne++){const ee=p?W(H[ne],re[ne],_e):H[ne];M?(U.copy(D.normals[0]).multiplyScalar(ee.x),N.copy(D.binormals[0]).multiplyScalar(ee.y),T.copy(L[0]).add(U).add(N),Ke(T.x,T.y,T.z)):Ke(ee.x,ee.y,0)}for(let ne=1;ne<=u;ne++)for(let ee=0;ee<j;ee++){const fe=p?W(H[ee],re[ee],_e):H[ee];M?(U.copy(D.normals[ne]).multiplyScalar(fe.x),N.copy(D.binormals[ne]).multiplyScalar(fe.y),T.copy(L[ne]).add(U).add(N),Ke(T.x,T.y,T.z)):Ke(fe.x,fe.y,f/u*ne)}for(let ne=m-1;ne>=0;ne--){const ee=ne/m,fe=g*Math.cos(ee*Math.PI/2),Ae=v*Math.sin(ee*Math.PI/2)+_;for(let ve=0,Ve=z.length;ve<Ve;ve++){const Be=W(z[ve],Y[ve],Ae);Ke(Be.x,Be.y,f+fe)}for(let ve=0,Ve=V.length;ve<Ve;ve++){const Be=V[ve];he=K[ve];for(let Pe=0,it=Be.length;Pe<it;Pe++){const Qe=W(Be[Pe],he[Pe],Ae);M?Ke(Qe.x,Qe.y+L[u-1].y,L[u-1].x+fe):Ke(Qe.x,Qe.y,f+fe)}}}Ce(),De();function Ce(){const ne=i.length/3;if(p){let ee=0,fe=j*ee;for(let Ae=0;Ae<te;Ae++){const ve=ce[Ae];Ne(ve[2]+fe,ve[1]+fe,ve[0]+fe)}ee=u+m*2,fe=j*ee;for(let Ae=0;Ae<te;Ae++){const ve=ce[Ae];Ne(ve[0]+fe,ve[1]+fe,ve[2]+fe)}}else{for(let ee=0;ee<te;ee++){const fe=ce[ee];Ne(fe[2],fe[1],fe[0])}for(let ee=0;ee<te;ee++){const fe=ce[ee];Ne(fe[0]+j*u,fe[1]+j*u,fe[2]+j*u)}}n.addGroup(ne,i.length/3-ne,0)}function De(){const ne=i.length/3;let ee=0;Z(z,ee),ee+=z.length;for(let fe=0,Ae=V.length;fe<Ae;fe++){const ve=V[fe];Z(ve,ee),ee+=ve.length}n.addGroup(ne,i.length/3-ne,1)}function Z(ne,ee){let fe=ne.length;for(;--fe>=0;){const Ae=fe;let ve=fe-1;ve<0&&(ve=ne.length-1);for(let Ve=0,Be=u+m*2;Ve<Be;Ve++){const Pe=j*Ve,it=j*(Ve+1),Qe=ee+Ae+Pe,A=ee+ve+Pe,S=ee+ve+it,$=ee+Ae+it;We(Qe,A,S,$)}}}function Ke(ne,ee,fe){c.push(ne),c.push(ee),c.push(fe)}function Ne(ne,ee,fe){de(ne),de(ee),de(fe);const Ae=i.length/3,ve=P.generateTopUV(n,i,Ae-3,Ae-2,Ae-1);Ye(ve[0]),Ye(ve[1]),Ye(ve[2])}function We(ne,ee,fe,Ae){de(ne),de(ee),de(Ae),de(ee),de(fe),de(Ae);const ve=i.length/3,Ve=P.generateSideWallUV(n,i,ve-6,ve-3,ve-2,ve-1);Ye(Ve[0]),Ye(Ve[1]),Ye(Ve[3]),Ye(Ve[1]),Ye(Ve[2]),Ye(Ve[3])}function de(ne){i.push(c[ne*3+0]),i.push(c[ne*3+1]),i.push(c[ne*3+2])}function Ye(ne){s.push(ne.x),s.push(ne.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return lS(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new dd[i.type]().fromJSON(i)),new yr(n,e.options)}}const aS={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],h=e[i*3],u=e[i*3+1];return[new le(s,o),new le(a,c),new le(h,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],h=e[n*3],u=e[n*3+1],f=e[n*3+2],p=e[i*3],g=e[i*3+1],v=e[i*3+2],_=e[s*3],m=e[s*3+1],b=e[s*3+2];return Math.abs(a-u)<Math.abs(o-h)?[new le(o,1-c),new le(h,1-f),new le(p,1-v),new le(_,1-b)]:[new le(a,1-c),new le(u,1-f),new le(g,1-v),new le(m,1-b)]}};function lS(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Tl extends ct{constructor(e=new os([new le(0,.5),new le(-.5,-.5),new le(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)h(e);else for(let u=0;u<e.length;u++)h(e[u]),this.addGroup(a,c,u),a+=c,c=0;this.setIndex(n),this.setAttribute("position",new lt(i,3)),this.setAttribute("normal",new lt(s,3)),this.setAttribute("uv",new lt(o,2));function h(u){const f=i.length/3,p=u.extractPoints(t);let g=p.shape;const v=p.holes;Qn.isClockWise(g)===!1&&(g=g.reverse());for(let m=0,b=v.length;m<b;m++){const P=v[m];Qn.isClockWise(P)===!0&&(v[m]=P.reverse())}const _=Qn.triangulateShape(g,v);for(let m=0,b=v.length;m<b;m++){const P=v[m];g=g.concat(P)}for(let m=0,b=g.length;m<b;m++){const P=g[m];i.push(P.x,P.y,0),s.push(0,0,1),o.push(P.x,P.y)}for(let m=0,b=_.length;m<b;m++){const P=_[m],L=P[0]+f,M=P[1]+f,D=P[2]+f;n.push(L,M,D),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return cS(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Tl(n,e.curveSegments)}}function cS(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class vd extends ct{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let h=0;const u=[],f=new C,p=new C,g=[],v=[],_=[],m=[];for(let b=0;b<=n;b++){const P=[],L=b/n;let M=0;b==0&&o==0?M=.5/t:b==n&&c==Math.PI&&(M=-.5/t);for(let D=0;D<=t;D++){const N=D/t;f.x=-e*Math.cos(i+N*s)*Math.sin(o+L*a),f.y=e*Math.cos(o+L*a),f.z=e*Math.sin(i+N*s)*Math.sin(o+L*a),v.push(f.x,f.y,f.z),p.copy(f).normalize(),_.push(p.x,p.y,p.z),m.push(N+M,1-L),P.push(h++)}u.push(P)}for(let b=0;b<n;b++)for(let P=0;P<t;P++){const L=u[b][P+1],M=u[b][P],D=u[b+1][P],N=u[b+1][P+1];(b!==0||o>0)&&g.push(L,M,N),(b!==n-1||c<Math.PI)&&g.push(M,D,N)}this.setIndex(g),this.setAttribute("position",new lt(v,3)),this.setAttribute("normal",new lt(_,3)),this.setAttribute("uv",new lt(m,2))}static fromJSON(e){return new vd(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class yd extends bt{constructor(e){super(),this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}yd.prototype.isShadowMaterial=!0;class xd extends pn{constructor(e){super(e),this.type="RawShaderMaterial"}}xd.prototype.isRawShaderMaterial=!0;class El extends bt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}El.prototype.isMeshStandardMaterial=!0;class bd extends El{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Pt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}bd.prototype.isMeshPhysicalMaterial=!0;class wd extends bt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=co,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}wd.prototype.isMeshPhongMaterial=!0;class Md extends bt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Md.prototype.isMeshToonMaterial=!0;class Sd extends bt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Sd.prototype.isMeshNormalMaterial=!0;class Td extends bt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=co,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Td.prototype.isMeshLambertMaterial=!0;class Ed extends bt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Ed.prototype.isMeshMatcapMaterial=!0;class Ad extends vr{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Ad.prototype.isLineDashedMaterial=!0;const hS={ShadowMaterial:yd,SpriteMaterial:_l,RawShaderMaterial:xd,ShaderMaterial:pn,PointsMaterial:vo,MeshPhysicalMaterial:bd,MeshStandardMaterial:El,MeshPhongMaterial:wd,MeshToonMaterial:Md,MeshNormalMaterial:Sd,MeshLambertMaterial:Td,MeshDepthMaterial:ml,MeshDistanceMaterial:gl,MeshBasicMaterial:po,MeshMatcapMaterial:Ed,LineDashedMaterial:Ad,LineBasicMaterial:vr,Material:bt};bt.fromType=function(r){return new hS[r]};const ft={arraySlice:function(r,e,t){return ft.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let c=0;c!==e;++c)i[o++]=r[a+c]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let c=0;c<s.tracks.length;++c){const h=s.tracks[c],u=h.getValueSize(),f=[],p=[];for(let g=0;g<h.times.length;++g){const v=h.times[g]*i;if(!(v<t||v>=n)){f.push(h.times[g]);for(let _=0;_<u;++_)p.push(h.values[g*u+_])}}f.length!==0&&(h.times=ft.convertArray(f,h.times.constructor),h.values=ft.convertArray(p,h.values.constructor),o.push(h))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const h=r.tracks.find(function(b){return b.name===a.name&&b.ValueTypeName===c});if(h===void 0)continue;let u=0;const f=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);let p=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=g/3);const v=a.times.length-1;let _;if(s<=a.times[0]){const b=u,P=f-u;_=ft.arraySlice(a.values,b,P)}else if(s>=a.times[v]){const b=v*f+u,P=b+f-u;_=ft.arraySlice(a.values,b,P)}else{const b=a.createInterpolant(),P=u,L=f-u;b.evaluate(s),_=ft.arraySlice(b.resultBuffer,P,L)}c==="quaternion"&&new Gt().fromArray(_).normalize().conjugate().toArray(_);const m=h.times.length;for(let b=0;b<m;++b){const P=b*g+p;if(c==="quaternion")Gt.multiplyQuaternionsFlat(h.values,P,_,0,h.values,P);else{const L=g-p*2;for(let M=0;M<L;++M)h.values[P+M]-=_[M]}}}return r.blendMode=Bu,r}};class ni{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let c=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===c)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}ni.prototype.beforeStart_=ni.prototype.copySampleValue_;ni.prototype.afterEnd_=ni.prototype.copySampleValue_;class uS extends ni{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Qi,endingEnd:Qi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],c=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case er:s=e,a=2*t-n;break;case no:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case er:o=e,c=2*n-t;break;case no:o=1,c=n+i[1]-i[0];break;default:o=e-1,c=t}const h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-a),this._weightNext=h/(c-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=this._offsetPrev,f=this._offsetNext,p=this._weightPrev,g=this._weightNext,v=(n-t)/(i-t),_=v*v,m=_*v,b=-p*m+2*p*_-p*v,P=(1+p)*m+(-1.5-2*p)*_+(-.5+p)*v+1,L=(-1-g)*m+(1.5+g)*_+.5*v,M=g*m-g*_;for(let D=0;D!==a;++D)s[D]=b*o[u+D]+P*o[h+D]+L*o[c+D]+M*o[f+D];return s}}class Cd extends ni{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=(n-t)/(i-t),f=1-u;for(let p=0;p!==a;++p)s[p]=o[h+p]*f+o[c+p]*u;return s}}class dS extends ni{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Mn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ft.convertArray(t,this.TimeBufferType),this.values=ft.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ft.convertArray(e.times,Array),values:ft.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new dS(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Cd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new uS(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case eo:t=this.InterpolantFactoryMethodDiscrete;break;case to:t=this.InterpolantFactoryMethodLinear;break;case ra:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return eo;case this.InterpolantFactoryMethodLinear:return to;case this.InterpolantFactoryMethodSmooth:return ra}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=ft.arraySlice(n,s,o),this.values=ft.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(i!==void 0&&ft.isTypedArray(i))for(let a=0,c=i.length;a!==c;++a){const h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),e=!1;break}}return e}optimize(){const e=ft.arraySlice(this.times),t=ft.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ra,s=e.length-1;let o=1;for(let a=1;a<s;++a){let c=!1;const h=e[a],u=e[a+1];if(h!==u&&(a!==1||h!==e[0]))if(i)c=!0;else{const f=a*n,p=f-n,g=f+n;for(let v=0;v!==n;++v){const _=t[f+v];if(_!==t[p+v]||_!==t[g+v]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];const f=a*n,p=o*n;for(let g=0;g!==n;++g)t[p+g]=t[f+g]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,c=o*n,h=0;h!==n;++h)t[c+h]=t[a+h];++o}return o!==e.length?(this.times=ft.arraySlice(e,0,o),this.values=ft.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=ft.arraySlice(this.times,0),t=ft.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Mn.prototype.TimeBufferType=Float32Array;Mn.prototype.ValueBufferType=Float32Array;Mn.prototype.DefaultInterpolation=to;class xr extends Mn{}xr.prototype.ValueTypeName="bool";xr.prototype.ValueBufferType=Array;xr.prototype.DefaultInterpolation=eo;xr.prototype.InterpolantFactoryMethodLinear=void 0;xr.prototype.InterpolantFactoryMethodSmooth=void 0;class Pd extends Mn{}Pd.prototype.ValueTypeName="color";class so extends Mn{}so.prototype.ValueTypeName="number";class fS extends ni{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(i-t);let h=e*a;for(let u=h+a;h!==u;h+=4)Gt.slerpFlat(s,0,o,h-a,o,h,c);return s}}class as extends Mn{InterpolantFactoryMethodLinear(e){return new fS(this.times,this.values,this.getValueSize(),e)}}as.prototype.ValueTypeName="quaternion";as.prototype.DefaultInterpolation=to;as.prototype.InterpolantFactoryMethodSmooth=void 0;class br extends Mn{}br.prototype.ValueTypeName="string";br.prototype.ValueBufferType=Array;br.prototype.DefaultInterpolation=eo;br.prototype.InterpolantFactoryMethodLinear=void 0;br.prototype.InterpolantFactoryMethodSmooth=void 0;class oo extends Mn{}oo.prototype.ValueTypeName="vector";class _u{constructor(e,t=-1,n,i=ol){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=on(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(mS(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Mn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let c=[],h=[];c.push((a+s-1)%s,a,(a+1)%s),h.push(0,1,0);const u=ft.getKeyframeOrder(c);c=ft.sortedArray(c,1,u),h=ft.sortedArray(h,1,u),!i&&c[0]===0&&(c.push(s),h.push(h[0])),o.push(new so(".morphTargetInfluences["+t[a].name+"]",c,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,c=e.length;a<c;a++){const h=e[a],u=h.name.match(s);if(u&&u.length>1){const f=u[1];let p=i[f];p||(i[f]=p=[]),p.push(h)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(f,p,g,v,_){if(g.length!==0){const m=[],b=[];ft.flattenJSON(g,m,b,v),m.length!==0&&_.push(new f(p,m,b))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let c=e.length||-1;const h=e.hierarchy||[];for(let f=0;f<h.length;f++){const p=h[f].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const g={};let v;for(v=0;v<p.length;v++)if(p[v].morphTargets)for(let _=0;_<p[v].morphTargets.length;_++)g[p[v].morphTargets[_]]=-1;for(const _ in g){const m=[],b=[];for(let P=0;P!==p[v].morphTargets.length;++P){const L=p[v];m.push(L.time),b.push(L.morphTarget===_?1:0)}i.push(new so(".morphTargetInfluence["+_+"]",m,b))}c=g.length*o}else{const g=".bones["+t[f].name+"]";n(oo,g+".position",p,"pos",i),n(as,g+".quaternion",p,"rot",i),n(oo,g+".scale",p,"scl",i)}}return i.length===0?null:new this(s,c,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function pS(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return so;case"vector":case"vector2":case"vector3":case"vector4":return oo;case"color":return Pd;case"quaternion":return as;case"bool":case"boolean":return xr;case"string":return br}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function mS(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=pS(r.type);if(r.times===void 0){const t=[],n=[];ft.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const dr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class gS{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,c;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,f){return h.push(u,f),this},this.removeHandler=function(u){const f=h.indexOf(u);return f!==-1&&h.splice(f,2),this},this.getHandler=function(u){for(let f=0,p=h.length;f<p;f+=2){const g=h[f],v=h[f+1];if(g.global&&(g.lastIndex=0),g.test(u))return v}return null}}}const _S=new gS;class ii{constructor(e){this.manager=e!==void 0?e:_S,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ln={};class vS extends ii{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=dr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ln[e]!==void 0){Ln[e].push({onLoad:t,onProgress:n,onError:i});return}Ln[e]=[],Ln[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const u=Ln[e],f=h.body.getReader(),p=h.headers.get("Content-Length"),g=p?parseInt(p):0,v=g!==0;let _=0;const m=new ReadableStream({start(b){P();function P(){f.read().then(({done:L,value:M})=>{if(L)b.close();else{_+=M.byteLength;const D=new ProgressEvent("progress",{lengthComputable:v,loaded:_,total:g});for(let N=0,U=u.length;N<U;N++){const T=u[N];T.onProgress&&T.onProgress(D)}b.enqueue(M),P()}})}}});return new Response(m)}else throw Error(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`)}).then(h=>{switch(c){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return h.json();default:if(a===void 0)return h.text();{const f=/charset="?([^;"\s]*)"?/i.exec(a),p=f&&f[1]?f[1].toLowerCase():void 0,g=new TextDecoder(p);return h.arrayBuffer().then(v=>g.decode(v))}}}).then(h=>{dr.add(e,h);const u=Ln[e];delete Ln[e];for(let f=0,p=u.length;f<p;f++){const g=u[f];g.onLoad&&g.onLoad(h)}}).catch(h=>{const u=Ln[e];if(u===void 0)throw this.manager.itemError(e),h;delete Ln[e];for(let f=0,p=u.length;f<p;f++){const g=u[f];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Rd extends ii{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=dr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Qr("img");function c(){u(),dr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(f){u(),i&&i(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",h,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class yS extends ii{constructor(e){super(e)}load(e,t,n,i){const s=new mo,o=new Rd(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function c(h){o.load(e[h],function(u){s.images[h]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)c(h);return s}}class xS extends ii{constructor(e){super(e)}load(e,t,n,i){const s=new Tt,o=new Rd(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class wn extends st{constructor(e,t=1){super(),this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}wn.prototype.isLight=!0;class bS extends wn{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.groundColor=new Le(t)}copy(e){return wn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}bS.prototype.isHemisphereLight=!0;const vu=new Ie,yu=new C,xu=new C;class Al{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.map=null,this.mapPass=null,this.matrix=new Ie,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new go,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new at(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;yu.setFromMatrixPosition(e.matrixWorld),t.position.copy(yu),xu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(xu),t.updateMatrixWorld(),vu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Ld extends Al{constructor(){super(new Ft(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=Kr*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Ld.prototype.isSpotLightShadow=!0;class wS extends wn{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new Ld}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}wS.prototype.isSpotLight=!0;const bu=new Ie,Ur=new C,za=new C;class Dd extends Al{constructor(){super(new Ft(90,1,.5,500)),this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new at(2,1,1,1),new at(0,1,1,1),new at(3,1,1,1),new at(1,1,1,1),new at(3,0,1,1),new at(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ur.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ur),za.copy(n.position),za.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(za),n.updateMatrixWorld(),i.makeTranslation(-Ur.x,-Ur.y,-Ur.z),bu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(bu)}}Dd.prototype.isPointLightShadow=!0;class MS extends wn{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Dd}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}MS.prototype.isPointLight=!0;class Id extends Al{constructor(){super(new fl(-5,5,5,-5,.5,500))}}Id.prototype.isDirectionalLightShadow=!0;class SS extends wn{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,this.shadow=new Id}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}SS.prototype.isDirectionalLight=!0;class TS extends wn{constructor(e,t){super(e,t),this.type="AmbientLight"}}TS.prototype.isAmbientLight=!0;class ES extends wn{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}ES.prototype.isRectAreaLight=!0;class Od{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new C)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Od.prototype.isSphericalHarmonics3=!0;class Cl extends wn{constructor(e=new Od,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Cl.prototype.isLightProbe=!0;class AS{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class CS extends ct{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}CS.prototype.isInstancedBufferGeometry=!0;class PS extends ii{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=dr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){dr.add(e,c),t&&t(c),s.manager.itemEnd(e)}).catch(function(c){i&&i(c),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}PS.prototype.isImageBitmapLoader=!0;let $s;const RS={getContext:function(){return $s===void 0&&($s=new(window.AudioContext||window.webkitAudioContext)),$s},setContext:function(r){$s=r}};class LS extends ii{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new vS(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const c=a.slice(0);RS.getContext().decodeAudioData(c,function(u){t(u)})}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}}class DS extends Cl{constructor(e,t,n=1){super(void 0,n);const i=new Le().set(e),s=new Le().set(t),o=new C(i.r,i.g,i.b),a=new C(s.r,s.g,s.b),c=Math.sqrt(Math.PI),h=c*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(c),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(h)}}DS.prototype.isHemisphereLightProbe=!0;class IS extends Cl{constructor(e,t=1){super(void 0,t);const n=new Le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}IS.prototype.isAmbientLightProbe=!0;class l1{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=wu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=wu();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function wu(){return(typeof performance=="undefined"?Date:performance).now()}class OS extends st{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class FS{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,h=t+t;c!==h;++c)if(n[c]!==n[c+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Gt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Gt.multiplyQuaternionsFlat(e,o,e,t,e,n),Gt.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Pl="\\[\\]\\.:\\/",NS=new RegExp("["+Pl+"]","g"),Rl="[^"+Pl+"]",BS="[^"+Pl.replace("\\.","")+"]",zS=/((?:WC+[\/:])*)/.source.replace("WC",Rl),kS=/(WCOD+)?/.source.replace("WCOD",BS),US=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Rl),VS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Rl),HS=new RegExp("^"+zS+kS+US+VS+"$"),GS=["material","materials","bones"];class WS{constructor(e,t,n){const i=n||rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class rt{constructor(e,t,n){this.path=t,this.parsedPath=n||rt.parseTrackName(t),this.node=rt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new rt.Composite(e,t,n):new rt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(NS,"")}static parseTrackName(e){const t=HS.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);GS.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const c=n(a.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=rt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===h){h=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}rt.Composite=WS;rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};rt.prototype.GetterByBindingType=[rt.prototype._getValue_direct,rt.prototype._getValue_array,rt.prototype._getValue_arrayElement,rt.prototype._getValue_toArray];rt.prototype.SetterByBindingTypeAndVersioning=[[rt.prototype._setValue_direct,rt.prototype._setValue_direct_setNeedsUpdate,rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_array,rt.prototype._setValue_array_setNeedsUpdate,rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_arrayElement,rt.prototype._setValue_arrayElement_setNeedsUpdate,rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_fromArray,rt.prototype._setValue_fromArray_setNeedsUpdate,rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class jS{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),c={endingStart:Qi,endingEnd:Qi};for(let h=0;h!==o;++h){const u=s[h].createInterpolant(null);a[h]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=gv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,h=a.sampleValues;return c[0]=s,c[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const c=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Bu:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulateAdditive(a);break;case ol:default:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===_v;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===mv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=er,i.endingEnd=er):(e?i.endingStart=this.zeroSlopeAtStart?er:Qi:i.endingStart=no,t?i.endingEnd=this.zeroSlopeAtEnd?er:Qi:i.endingEnd=no)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=t,a[1]=s+e,c[1]=n,this}}class qS extends Si{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,c=n.uuid,h=this._bindingsByRootAndName;let u=h[c];u===void 0&&(u={},h[c]=u);for(let f=0;f!==s;++f){const p=i[f],g=p.name;let v=u[g];if(v!==void 0)++v.referenceCount,o[f]=v;else{if(v=o[f],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,c,g));continue}const _=t&&t._propertyBindings[f].binding.parsedPath;v=new FS(rt.create(n,g,_),p.ValueTypeName,p.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,c,g),o[f]=v}a[f].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],c=a.knownActions,h=c[c.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,c[u]=h,c.pop(),e._byClipCacheIndex=null;const f=a.actionByRoot,p=(e._localRoot||this._root).uuid;delete f[p],c.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],c=t[t.length-1],h=e._cacheIndex;c._cacheIndex=h,t[h]=c,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Cd(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?_u.findByName(i,e):e;const a=o!==null?o.uuid:e,c=this._actionsByClip[a];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=ol),c!==void 0){const f=c.actionByRoot[s];if(f!==void 0&&f.blendMode===n)return f;h=c.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const u=new jS(this,o,t,n);return this._bindAction(u,h),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?_u.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const a=this._bindings,c=this._nActiveBindings;for(let h=0;h!==c;++h)a[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,c=o.length;a!==c;++a){const h=o[a];this._deactivateAction(h);const u=h._cacheIndex,f=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,f._cacheIndex=u,t[u]=f,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,c=a[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}qS.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class XS extends ss{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}XS.prototype.isInstancedInterleavedBuffer=!0;const Yn=new C,Zs=new Ie,ka=new Ie;class YS extends yl{constructor(e){const t=Fd(e),n=new ct,i=[],s=[],o=new Le(0,0,1),a=new Le(0,1,0);for(let h=0;h<t.length;h++){const u=t[h];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new lt(i,3)),n.setAttribute("color",new lt(s,3));const c=new vr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");ka.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Zs.multiplyMatrices(ka,a.matrixWorld),Yn.setFromMatrixPosition(Zs),i.setXYZ(o,Yn.x,Yn.y,Yn.z),Zs.multiplyMatrices(ka,a.parent.matrixWorld),Yn.setFromMatrixPosition(Zs),i.setXYZ(o+1,Yn.x,Yn.y,Yn.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Fd(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Fd(r.children[t]));return e}class JS extends yl{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,o=e/t,a=e/2,c=[],h=[];for(let p=0,g=0,v=-a;p<=t;p++,v+=o){c.push(-a,0,v,a,0,v),c.push(v,0,-a,v,0,a);const _=p===s?n:i;_.toArray(h,g),g+=3,_.toArray(h,g),g+=3,_.toArray(h,g),g+=3,_.toArray(h,g),g+=3}const u=new ct;u.setAttribute("position",new lt(c,3)),u.setAttribute("color",new lt(h,3));const f=new vr({vertexColors:!0,toneMapped:!1});super(u,f),this.type="GridHelper"}}const vn=new Uint32Array(512),yn=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(vn[r]=0,vn[r|256]=32768,yn[r]=24,yn[r|256]=24):e<-14?(vn[r]=1024>>-e-14,vn[r|256]=1024>>-e-14|32768,yn[r]=-e-1,yn[r|256]=-e-1):e<=15?(vn[r]=e+15<<10,vn[r|256]=e+15<<10|32768,yn[r]=13,yn[r|256]=13):e<128?(vn[r]=31744,vn[r|256]=64512,yn[r]=24,yn[r|256]=24):(vn[r]=31744,vn[r|256]=64512,yn[r]=13,yn[r|256]=13)}const Nd=new Uint32Array(2048),ls=new Uint32Array(64),$S=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Nd[r]=e|t}for(let r=1024;r<2048;++r)Nd[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)ls[r]=r<<23;ls[31]=1199570944;ls[32]=2147483648;for(let r=33;r<63;++r)ls[r]=2147483648+(r-32<<23);ls[63]=3347054592;for(let r=1;r<64;++r)r!==32&&($S[r]=1024);an.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(an.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};$a.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};JS.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};YS.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};ii.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),AS.extractUrlBase(r)};ii.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};mn.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};mn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};mn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};mn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};mn.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Ei.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};mr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};go.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};Rt.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Rt.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Rt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Rt.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Rt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Rt.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Ie.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};Ie.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Ie.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new C().setFromMatrixColumn(this,3)};Ie.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};Ie.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Ie.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ie.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ie.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Ie.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};Ie.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ie.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Ie.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Ie.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Ie.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Ie.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Ie.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ie.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Ie.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};Ie.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};In.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};Gt.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};Gt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};gr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};gr.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};gr.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};vt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};vt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};vt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};vt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};vt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};vt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),vt.getBarycoord(r,e,t,n,i)};vt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),vt.getNormal(r,e,t,n)};os.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};os.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new yr(this,r)};os.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Tl(this,r)};le.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};le.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};le.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};C.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};C.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};C.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};C.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};C.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};C.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};C.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};C.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};C.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};at.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};at.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};st.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};st.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};st.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};st.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};st.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(st.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Ht.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(Ht.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),vv},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});id.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Ft.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(wn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(xt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===io},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(io)}}});xt.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?io:Zr),this};xt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},xt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};ct.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};ct.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new xt(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};ct.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};ct.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};ct.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};ct.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};ct.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(ct.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});ss.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?io:Zr),this};ss.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};yr.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};yr.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};yr.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};td.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(bt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Le}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Iu}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(pn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});ot.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};ot.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};ot.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};ot.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};ot.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};ot.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};ot.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};ot.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};ot.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};ot.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};ot.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};ot.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};ot.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};ot.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};ot.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};ot.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};ot.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};ot.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};ot.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};ot.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};ot.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};ot.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};ot.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};ot.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};ot.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(ot.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?dt:ei}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Ku.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Jt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});OS.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new LS().load(r,function(n){e.setBuffer(n)}),this};ul.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};ul.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};Ti.crossOrigin=void 0;Ti.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new xS;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};Ti.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new yS;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};Ti.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Ti.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:sl}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=sl);const Mu=window.matchMedia("(pointer:coarse)");class On{}tn(On,"DEBUG",/[?&]debug/.test(location.search)&&!1),tn(On,"SMOOTH",!0),tn(On,"DRAG",Mu&&Mu.matches),tn(On,"BREAKPOINTS",{MD:1048,LG:1048,XL:1450,XXL:2e3});class c1 extends Ft{constructor(){super(),this.panning=!0,this.origin=new C(0,0,rn.radius*5.5),this.target=new C(0,0,rn.radius*5.5),this.targetXY=new le(500,500),this.mouse=new C(1,1,1),this.center=new C,this.centerLerped=new C,this.mouseLerp=.02,this.centerLerpFactor=1,this.cameraOffset=new C,setTimeout(()=>{this.centerLerpFactor=.1},1e3)}resize(e,t){let n=Math.max(t,100);e<700&&(n=Math.max(t,1200)),this.centerDefaults={mobile:new C(0,t*.95,0),mobile02:new C(-e*.5,n*.75,0),mobileGlobe2:new C(-e*.35,n*1.1,0),mobile03:new C(0,0,0),dekstop:new C(-e*.45,t*.1,0),dekstop02:e<On.BREAKPOINTS.LG?new C(-e*.75,t*.2,0):new C(-e*.45,t*.1,0),dekstop03:e<On.BREAKPOINTS.LG?new C(0,t*.2,0):new C(0,0,0),dekstopGlobe2:e<On.BREAKPOINTS.LG?new C(-e*.75,t*.6,0):new C(-e*.45,t*.6,0)},e>=500&&(this.centerDefaults.mobileGlobe2.x=-e*.5),t>=700&&(this.centerDefaults.mobileGlobe2.x=-e*.35),e>=700&&(this.centerDefaults.mobile02.x=-e*.75,this.centerDefaults.mobileGlobe2.x=-e*.5),this.aspect=e/t,this.near=10,this.far=6e3,this.fov=e<On.BREAKPOINTS.MD?40:30,e<=320&&(this.fov=45),t>=700&&e<=580&&(this.fov=50),this.origin=new C(0,0,rn.radius*5.5),this.target=new C(0,0,rn.radius*5.5),this.position.z=rn.radius*5.5,this.updateProjectionMatrix()}update(){const{w:e,h:t,mouse:n}=Jn;this.centerLerped.lerp(this.center,this.centerLerpFactor),this.mouse.x=n.x/e*2-1,this.mouse.y=1-n.y/t*2,e>=On.BREAKPOINTS.MD&&this.panning?(this.target.x=this.origin.x+this.cameraOffset.x+this.targetXY.x*this.mouse.x,this.target.y=this.origin.y+this.cameraOffset.y+this.targetXY.y*this.mouse.y):(this.target.y=this.origin.y,this.target.x=this.origin.x),this.position.lerp(this.target,this.mouseLerp),this.lookAt(this.centerLerped)}}const ZS=()=>{const r=window.matchMedia("(pointer:coarse)");return r&&r.matches},h1=navigator.userAgent.indexOf("Firefox")>-1,Su=/constructor/i.test(window.HTMLElement)||function(r){return r.toString()==="[object SafariRemoteNotification]"}(!window.safari||typeof safari!="undefined"&&safari.pushNotification);window.chrome&&(window.chrome.webstore||window.chrome.runtime);class u1 extends ot{constructor(e){super({alpha:!0,antialias:!Su,depth:!0,powerPreference:"high-performance",stencil:!0}),e.appendChild(this.domElement);const{w:t,h:n}=Jn;this.setSize(t,n),this.isMobile=ZS(),this.dpr=Su&&!this.isMobile?1.5:Math.min(window.devicePixelRatio,1.5),this.setPixelRatio(this.dpr),this.sortObjects=!1,this.outputEncoding=dt}resize(e,t){this.setSize(e,t)}}function KS(r,e,t){return Ll((1-t)*r+t*e)}function QS(r,e,t,n){return KS(r,e,1-Math.exp(-t*n))}function e1(r,e,t){return Ll(Math.min(Math.max(e,r),t))}function d1(r,e,t,n,i,s=!0){const o=(r-e)*(i-n)/(t-e)+n;if(s!==null&&s){const a=n>i?i:n,c=n>i?n:i;return e1(o,a,c)}return Ll(o)}function Ll(r,e=5){const t=Math.pow(10,e);return Math.round(r*t)/t}class f1{constructor(e){this.instance=e,this.globe=e.globe,this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.controlRotation=new le,this.controlRotationLerp=new le,this.currentMove=new le,this.pointer={active:!1,x:Jn.w/2,y:Jn.h/2},this.addEvents()}addEvents(){const e=window,t="addEventListener";this.handleEvents(e,t)}removeEvents(){const e=window,t="removeEventListener";this.handleEvents(e,t)}handleEvents(e,t){"ontouchmove"in e?(e[t]("touchstart",this.onMouseDown,{passive:!0}),e[t]("touchmove",this.onMouseMove,{passive:!0}),e[t]("touchend",this.onMouseUp)):(e[t]("mousedown",this.onMouseDown),e[t]("mousemove",this.onMouseMove),e[t]("mouseup",this.onMouseUp))}onMouseDown(e){this.pointer.active=!0,this.pointer.x=e.touches?e.touches[0].clientX:e.clientX,this.pointer.y=e.touches?e.touches[0].clientY:e.clientY,this.controlRotation.x=this.controlRotationLerp.x,this.controlRotation.y=this.controlRotationLerp.y}onMouseMove(e){if(!this.pointer.active)return;const t=e.touches?e.touches[0].clientX:e.clientX,n=e.touches?e.touches[0].clientY:e.clientY;this.currentMove.x=t-this.pointer.x,this.currentMove.y=n-this.pointer.y,this.controlRotationLerp.y=this.controlRotation.y+this.currentMove.y*.01,this.controlRotationLerp.x=this.controlRotation.x+this.currentMove.x*.01}onMouseUp(){this.pointer.active=!1}updateRotation(){this.globe!==void 0&&(this.globe.rotation.y=QS(this.globe.rotation.y,this.controlRotationLerp.x,.05,1.5),this.globe.inner.rotation.y=rn.time*.07)}update(){this.updateRotation()}}class p1 extends nr{constructor(e){super(),this.instance=e,this.scene=e.scene,this.rotationLerp=new le,this.addStars(),this.on(),this.scene.add(this)}on(){this.visible=!0}off(){this.visible=!1}addStars(){const t=new vo({size:10,color:new Le("#b1b1b1"),sizeAttenuation:!0}),n=[];for(var i=0;i<5e3;i++){const a=oa.randFloatSpread(5e3),c=oa.randFloatSpread(5e3),h=oa.randFloat(0,-5e3);n.push(a,c,h)}const s=new ct;s.setAttribute("position",new lt(n,3));const o=new ad(s,t);this.add(o)}update(){this.visible}}export{id as $,TS as A,ct as B,l1 as C,ar as D,Rg as E,lt as F,rn as G,PS as H,f1 as I,ss as J,xt as K,Jn as L,Ht as M,Yc as N,st as O,MS as P,Vt as Q,u1 as R,td as S,xS as T,uo as U,le as V,Ga as W,vo as X,bt as Y,vr as Z,rt as _,c1 as a,yl as a0,vl as a1,RM as a2,ad as a3,Ft as a4,oa as a5,fl as a6,to as a7,_u as a8,rd as a9,n1 as aA,Qa as aB,i1 as aC,Mt as aD,Ie as aa,od as ab,a1 as ac,Gt as ad,St as ae,Xc as af,Q_ as ag,dn as ah,Wa as ai,eo as aj,Yr as ak,es as al,Tt as am,o1 as an,oo as ao,as as ap,so as aq,mn as ar,mr as as,ni as at,pd as au,KS as av,Ll as aw,h1 as ax,e1 as ay,d1 as az,p1 as b,s1 as c,Lg as d,nr as e,fd as f,pn as g,Le as h,Ya as i,PM as j,C as k,On as l,vd as m,Td as n,El as o,dl as p,xd as q,ii as r,AS as s,vS as t,wS as u,SS as v,po as w,bd as x,dt as y,pr as z};
